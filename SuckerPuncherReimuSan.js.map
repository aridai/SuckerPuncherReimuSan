{"version":3,"file":"SuckerPuncherReimuSan.js","mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAA+B,sBAAID,IAEnCD,EAA4B,sBAAIC,GACjC,CATD,CASGK,MAAM,KACT,O,qKC+FyB,Y,kEClEQ,W,eA6BM,W,eA+BJ,W,mZA5DjB,W,4BAAA,gB,0DAUN,YAAU,IACd,UAAQ,GACD,E,6CAKP,MAAe,KAAK,KAEpB,OADA,UAAa,EACN,C,kCAGuC,OAAV,EAAN,U,6KAOpB,W,4BAAA,gB,0DAYN,YAAS,IACb,UAAQ,GACD,E,6CAKP,MAAe,KAAK,KAEpB,OADA,UAAa,EACN,C,kCAGuC,OAAhB,UAAM,U,iLAO1B,W,4BAAA,gB,0DAUN,YAAS,IACb,UAAQ,GACD,E,6CAKP,MAAe,KAAK,KAEpB,OADA,UAAa,EACN,C,kDAIgC,gBAAK,OAAL,iB,kDAGA,gBAAK,OAAL,iB,6CAIvC,MAAe,UAEf,OADA,oBAAS,EAAT,EACO,C,6CAMP,OADA,oBAAS,EAAT,EACO,S,kDAIkC,WAAK,OAAL,cAAF,EAAE,Q,kDAGA,WAAK,OAAL,cAAF,EAAE,Q,kCAMK,OAAhB,UAAM,U,sLArHqC,O,cAHmB,OAAtB,MAAc,E,CAGhC,CAAO,EAAP,I,sBAlBkB,O,cAHkB,OAArB,MAAa,E,CAG/B,CAAO,EAAP,I,sBAMgB,O,cAHe,OAAlB,MAAU,E,CAG5B,CAAO,EAAP,I,8mCCNzCC,GAAeC,GAAtB,OAA+B,gB,EAAO,gB,+CAAP,O,sBAD1B,oBAA4D,UAAK,MAAjE,O,uBAaDC,EAAA,oBAIA,OAHAC,EAAU,GACVC,IAEO,IAAAC,GAIX,I,YAGA,EAAmB,IAAAA,G,EA+BKC,OAExB,OAFAC,EAAA,KAA+B,EAAAC,uB,EAlCE,U,EAkCoB,E,EAAA,E,EAAA,E,EAAA,G,cAAA,2B,oCAE9CD,C,wBCmPH,EAAkB,OAAkC,GAjSP,GAiSmC,MAMhF,EAAY,KD5NhB,I,IAAIE,EAAsC,U,OAC1CA,EAAA,GAAmBC,GACJR,EACCC,G,EACC,E,EAAA,E,kBAiD05W,EAjDr5W,Q,+BAAe,W,OAAkB,MAAlB,KAAkB,K,MAApB,K,QAiDw4W,EA9Cx6W,G,sCAAuB,KAAiB,K,MAAnB,KCuNpB,EAAY,I,8BDrMK,c,eAcM,aAGW,c,0BAnGT,MAArBQ,EAAA,KAA2BA,EAAA,GAAoBC,GAGnD,MAA8B,GAAVA,GAAA,GAAyC,GAAH,GAAjBD,EAAA,MACzC,EAAoDE,GAApCC,EAAc,KAAY,EAA1B,KAA4D,EAAqB,GACjG,EAAqBA,EAAA,EAAgB,GAAhB,E,GAGrB,EAAUC,GAGNC,EAAgB,C,MAEQV,OAAxBC,EAAA,KAA+B,EAAAC,sB,sCAAsB,2B,0CAAA,Y,MAMrD,EAAU,GACV,IACAD,EAAa,KAAW,I,qBAoBNU,EAAQ,MACVA,EAAQ,GAAeP,GAAiB,EAAU,E,iCAAW,qB,qCAAA,S,4DErDpD,WAAAQ,E,sBAhBI,eAKC,cAMD,YAKX,UAAAC,GAAK,G,uDAId,IAAI,EAAJ,O,GAAA,kC,kCASkB,O,iBCO0B,KAvBhD,M,IACL,EAC4B,iBDoCbC,EClCfC,QAAQC,IAAIC,E,CDqChB,MAAY,IAAAC,GACZC,EAAM,GAAKL,GACX,OAAmBK,C,CA3BY,U,2DAnCvC,KA6B4C,c,sBC5Bf,Y,yDAmBvB,KAWW,MAILJ,QAAQK,KAFoB,iB,CCP/B,UAAS,KAGdpB,OAAOE,sBAAsB,IAG7B,I,EAAA,EAAamB,KACbC,EAAOC,e,EAAgB,E,mBAAO,UAAS,GAA4C,QAAG,EAAQC,I,OAC9FF,EAAOG,c,sCAAuB,UAAS,GAA4C,QAAG,EAAQD,I,MAAvE,IACvBF,EAAOI,Y,sCAAqB,UAAS,GAA0C,QAAG,EAAQF,I,MAArE,IACrBF,EAAOK,gB,sCAAyB,UAAS,GAA8C,QAAG,EAAQH,I,MAAzE,G,eAKzB,MAAaH,K,EACCC,EAAOM,WAAY,MAAjC,wCAAc,EAAd,KACAjC,EAAQkC,UAAc,EAAS,EAASP,EAAOQ,MAAsBR,EAAOS,Q,MAG/DT,EAAOQ,M,KAApB,MAAa,EA1CiB,K,EA2CjBR,EAAOS,O,KAApB,MAAa,EArCL,IAsCRpC,EAAQqC,MAAMC,EAAQC,GAGjB,UAAS,GAAOvC,GAGrBA,EAAQqC,MAAM,EAAMC,EAAQ,EAAMC,GAClClC,OAAOE,sBAAsB,G,qBAIaiC,SAASC,eAAgB,UAA6B,sCAAtD,EAAsD,I,uBAvD5EC,K,0DAyBWC,K,2BA0BAA,K,wBCxD3B,I,EAAA,ECPmD,OAAO,UAAU,UAgNV,c,GChN+C,O,KFYzG,G,MEgsDA,OAAsB,MAAW,GAAO,M,KAC5B,oBAAX,MAAW,M,GFrsDoB,GAANC,EAM48wD,GANt8wD,UEqsDV,CAAoB,GAAO,E,SACrD,GAAO,C,EFtsDH,OAAoB,C,mCEC5B,SAAQ,WAAW,QAAS,SAAU,OAAQ,OAAQ,aACrD,WAAY,eAggDI,KAAa,KAAwB,KAuErC,EAvEN,EAuEM,YAAR,I,EFpkDiG,EEokDzF,MDj4CiD,cCk4C1D,EAAY,EAAI,E,GACb,C,qBC5gDa,yD,kDCxBR,KA2CS,EAAb,GA7BR,GCkFU,EArGV,GAAkB,GAAe,K,qDFkCrB,KALwB,M,IAAyB,EAC1C,sBAIiB,EAA3B,QAAQ,MAAM,G,KEbxB,I,EAAA,KAAW,cAAY,G,ODND,KA0CmB,EAAhC,GAAO,GA1CqB,ICsF1B,EA5FV,GAAkB,GAAmB,K,uBFIzB,2B,oBAgBQ,uC,gGG9DpB,MAAqBvC,OAAOwC,WAC5B,EAAsBxC,OAAOyC,YAC7B,EAAe,K,EACFN,SAASC,eAAgB,UAAtC,iCAAa,EAAb,K,GRK4C,KAsB/B,M,IACL,EAC4B,kBQ5BfM,EAAc,MAAIC,EAAe,UAAQC,ER8BtD7B,QAAQK,KAAKH,E,IQ1BjB2B,GADaF,EAAiBC,EAClB,C,GRQf,KAVY,M,IACL,EAC4B,2BQCLD,EAAc,MAAIC,ERCzC5B,QAAQC,IAAI,E,CQEkB,MAAA6B,GAAoBF,EAAiBD,GAAlEI,EAA6B,EAA7B,KAAaC,EAAgB,EAAhB,K,KAClBzB,EAAOQ,MAAQ,GAAAgB,EAJhB,G,KAKCxB,EAAOS,OAAS,GAAAgB,EALjB,GAMCzB,EAAO0B,MAAP,MAAwBF,EAAY,KACpCxB,EAAO0B,MAAP,OAAyBD,EAAa,KAGtCzB,EAAO0B,MAAP,SAAyB,WACzB1B,EAAO0B,MAAP,OAAwBN,EAAiBI,EAAlB,GAAiC,EAAxD,GAA0D,KAC1DxB,EAAO0B,MAAP,MAAuBL,EAAkBI,EAAnB,GAAmC,EAAzD,GAA2D,KAG3DzB,EAAO0B,MAAP,gBAAgC,SAChC1B,EAAO0B,MAAP,UAA0B,e,SRgBZ,KAnCL,M,IACL,EAC4B,4BQsBJN,EAAc,MAAIC,ERpB1C5B,QAAQC,IAAI,E,CQuBkB,MAAA6B,GAAoBH,EAAgBC,GAAjE,EAA6B,EAA7B,KAAa,EAAgB,EAAhB,K,KAClBrB,EAAOQ,MAAQ,KAzBhB,G,KA0BCR,EAAOS,OAAS,KA1BjB,GA2BCT,EAAO0B,MAAP,MAAwB,EAAY,KACpC1B,EAAO0B,MAAP,OAAyB,EAAa,KAGtC1B,EAAO0B,MAAP,SAAyB,WACzB1B,EAAO0B,MAAP,OAAwBN,EAAiB,EAAlB,GAAiC,EAAxD,GAA0D,KAC1DpB,EAAO0B,MAAP,MAAuBL,EAAkB,EAAnB,GAAmC,EAAzD,GAA2D,KAG3DrB,EAAO0B,MAAP,gBAAgC,SAChC1B,EAAO0B,MAAP,UAA0B,c,sBAQlBN,EAA4BC,GAgCH,oB,GRjB0B,KA/DlD,M,IACL,EAC4B,oCQgDID,EAAc,MAAIC,ER9ClD5B,QAAQC,IAAIC,E,CQiDhB,MAAmCgC,GAAhBN,EAwBgB,KAvBnC,EAAgD,GA0Bf,mBA1BdI,G,GRc2K,KApErL,M,IACL,EAC4B,8CQqDcD,EAAW,MAAIC,ERnDzDhC,QAAQC,IAAI,E,CQqDhB,OAAO,GAAA8B,EAAeC,E,IRW2V,KApExW,M,IACL,EAC4B,oCQ4DIL,EAAc,MAAIC,ER1DlD5B,QAAQC,IAAI,E,CQ6DhB,MAAiCiC,GAAfP,EASgB,KARlC,EAAgD,GAA5B,EAca,oB,GRZ4lB,KApEpnB,M,IACL,EAC4B,8CQiEc,EAAW,MAAI,ER/DzD3B,QAAQC,IAAI,E,CQiEhB,OAAO,KAAe,E,oQC1D1B,KAAuB,YAA6B,YAAwB,W,oBAe5E,KAAuB,YAA6B,YAAwB,W,oBAe5E,KAAqB,YAA6B,YAAwB,W,oBAe1E,KAAyB,YAA6B,YAAwB,W,uCAe9EkC,EAAEC,Q,WA5DoB,KA4DtB,E,EAAiC7B,EAAOQ,MAA6B,O,KAArE,GAAiC,EAtDT,EAsDxB,E,wBAIAoB,EAAEE,Q,WA/DF,IA+DA,E,EAAkC9B,EAAOS,OAA8B,O,KAAvE,GAAkC,EA1DV,EA0DxB,E,kBCpBY,YACA,W,kBAOA,YACA,W,iCAcJ,YACA,W,kBAOA,YACA,W,0DC7F+B,cAID,cAMsC,cAOA,c,UAuQ7D,GAAgB,UAA6B,UAAS,IAAtD,oB,YACA,Y,2BCtMV,W,KAAA,iC,ODsMU,E,gCAFwC,UAAAsB,GACxC,KAEA,GAAS,sBAAT,sB,MAKA,GAAgB,UAA6B,UAAS,IAAtD,oBADwC,UAAAA,GACxC,GACA,GAAS,qBAAT,qB,wFE1Q2D,U,2GAhBzD,IAAI,EAAJ,O,GAAA,8B,gBAGA,IAAI,EAAJ,O,GAAA,iC,gBAayD5D,KAAA,M,kEAoB1D,uC,gBAvCO,W,oBCSnB,aACA,aACA,Y,kBAOA,aACA,Y,+BCrBA,Y,kBAOA,aACA,Y,+BCR0B,aAMT,WAAA6D,GAAgC,WAKA,WAAAC,GAAZ9D,KAAK,OAG1C,WACAA,KAAK,MAAW,IAAA+D,GAAgBC,E,wJCuCE,YAKE,cAAAC,GACnBL,GACT,KAAAM,GAAA,KAA6D,EAAW,GACxE,IAAAA,GAAA,KAA6D,EAAW,KAE9D,EALkB,K,mHAlE5C,KAKI,YAKA,YAKA,W,6DCSwB,eCPF,KAAK,OAAQ,GAe/B,MAAM,GAAiC,GAfzB,uB,sPCZO,W,0BAKA,Q,0BAKA,Y,wBAKF,Q,sCApBE,W,oICKzB,aAKA,aAKA,Y,gBCb2B,Y,sBCGV,sD,8FXiBZ,W,KAAA,8B,2DAM4C,wB,+FAO5C,W,KAAA,gC,6DAS4C,wB,+FAO5C,W,KAAA,gC,6DAS4C,wB,mGAO5C,W,KAAA,EAUwC,GAVxC,W,KAAA,kC,+DAUwC,aAKI,wB,6DAgBA,yB,+FAO5C,W,KAAA,iC,6DAS4C,yB,+FAO5C,W,KAAA,gC,6DAS4C,wB,2GAO5C,Y,KAAA,sC,mEAY4C,wB,+FAO5C,W,KAAA,gC,6DAS4C,wB,mGAO5C,W,KAAA,kC,+DAU4C,wB,6DAiBA,wB,wDAO5C,W,KAAA,gC,6DAM4C,wB,uDA7M/B,Y,gBAKE,Y,gBAKH,Y,gBAKjB,KAAgC,Y,kBAahC,KACI,aACA,Y,kBAcJ,KACI,aACA,Y,oBAcJ,KACI,aACA,aACA,Y,kBAmBJ,KACI,aACA,Y,kBAcJ,KACI,aACA,Y,kBAcJ,KACI,aACA,Y,wBAcJ,KACI,aACA,aACA,aACA,aACA,Y,kBAcJ,KACI,aACA,Y,oBAcJ,KACI,aACA,aACA,Y,oCAeA,aACA,aACA,Y,kBAcJ,KAAmB,aAAkB,Y,gHYzMpB,sD,2CCAA,sD,2CCAA,sD,2CCAA,sD,2CCAA,sD,2CCAA,sD,2CCAA,sD,2CCAA,sD,2CCAA,sD,wJCWW,c,4IALT,c,4EAHF,sD,4CCJA,sD,6CCMqB,eAGC,cAGW,cAGC,cAGF,c,KAGI,cATH,GAH7C,K,UAgBG,cApBP,IAII,KAmB4C,qBAGV,cAGF,wBAGW,qBAGE,wB,mFA8CD,QAAoBnC,E,+CAEpB,QAAoB,EAAOA,E,2BARpE,sD,gBA9EZ,KAA4B,aA0CU,aAGC,e,eC3CD,Y,eCCO,eAAAoC,GAKR,eAAAC,GAKR,eAAAC,GAKF,eAAAC,GAAA,MAKC,eAAAA,GAAA,MAKiB,eAAAC,GAAA,MAKC,eAAAA,GAAA,MAKJ,eAAAC,GAAA,MAKC,eAAAA,GAAA,K,iCC7BqB,cAhBjD,IAGT,K,UAgB+D,cAnBtD,KAmB8E,EAhBvF,KAmBwD,yBAGP,gBAGS,cAGA,cAGD,aAGA,a,yDAIR,O,GAAH,qC,eAAA,MCF1B,QALkE,I,qBDQpF9B,SAAS+B,cAAe,UAAxB,4C,0CA0GsC,QAA4B1C,E,+CAS5B,QAA8BA,E,+CAS9B,QAA8BA,E,yBApBhE,yC,oBASA,yC,oBASA,yC,gBAxJZ,KAAyB,aA6B8B,WAAAX,GAAK,IAKd,aAGD,aAGA,aAGgB,gBAGpB,aAGM,gBAGE,gBAGA,e,uBE3DP,eAGC,eAGS,cAGE,cAGD,cAGE,c,KAI3C,cAV0C,GATzC,K,KAuBD,cA3ByB,IAUe,IAoBC,qBAGL,cAGF,wBAGI,cAGF,wBAGI,qBAGA,cAGU,qBAGA,qBAGC,qBAGH,qBAIK,Y,6DAyG3B,aAAkB,aAAoB,Y,0CA7Bb,QAA2BJ,E,+CAQ3B,QAA2B,EAAOA,E,oDAerF,E,EAAgD,EAA0B,GAAjB,EAAOA,GAAU,E,OAA1E,QAAsB,EAAS,qB,+BA5B/B,gF,oBAWA,yC,sBAUA,sD,gBA5JZ,KAAkC,aAoEgB,gBAGL,Y,uBCtEH,gBAGC,eAGO,cAGI,yBAGD,qBAGD,qBAGT,cAGF,wBAGmB,cAGF,a,mFAwCkB,QAAaA,E,+CAOb,QAAa,EAAMA,E,2BAVnF,sD,eApEZ,KAmCgC,aAGA,e,uBC1BsB,cAGF,cAGG,cAGF,cAGN,cAGA,eAGC,eAGA,aAGI,qBAGQ,qBAGC,qBAGR,cAGF,wBAGM,qBAGN,cAGF,wBAGM,qBAGD,yB,MC+ElD,EAAW,GAxHF,GCyHK,I,GAAd,EDzHS,E,GCyHJ,I,EAAA,EAAS,U,KF3EN,MAnCoC,EAoHxC,EAjFI,E,KACA,OApCoC,EAoHxC,EAhFqB,GAAyB,EAA1C,E,oCAnEZ,IA4BgD,IAyCyB0D,E,KAE7D,KAHQ,IACA,EA/C2B,GA+CmDC,GCwEtE,EAAK,EAAI,E,OCAjC,EDzHS,GA0GoF,EAgBtF,ED7EsD,Y,iEtC6IL,EAAL,EAAK,MsClBzC,EtC5CH,GAAL,EA+DU,G,GsCnBF,QAAqC,YAAhD,MAAW,EAGM,eAAeC,GAA3BC,EAAY,EAAZ,KAAOC,EAAK,EAAL,K,KACZ,I,EACA,EApM0B,MAoMND,EApMM,MAoMc,EAAK,MAErB,IAApBE,EAAK,O,OA3J4C,WA4JjD,EAAK,QAAoBH,G,OA/JuB,Y,OAHR,WAgK5C1E,EAAQ8E,UAAY,E,UAKpB9E,EAAQ+E,SAASC,EAAGJ,EA9KmB,IAGC,K,KA8KxC,MAAYI,EA1LmC,G,WA2LnCJ,EAxLiC,G,KAwL7C,MAAY,EAhKiC,G,KAiK7C5E,EAAQiF,KA9JmC,a,KA+J3CjF,EAAQ8E,UA5JyC,UA6JjD9E,EAAQkF,SAASL,EAAK,MAAS,KAAUM,EAAOC,G,WAGtCJ,EAxL6B,I,KAwLvC,MAAU,EAjMqC,G,KAkM/C,MAAUI,EA9JiC,G,KA+J3CpF,EAAQiF,KA5JiC,a,KA6JzCjF,EAAQ8E,UA1JuC,UA2J/C9E,EAAQqF,UGlL++8O,MHmLv/8OrF,EAAQkF,SAAYL,EAAK,MAAY,IAAGA,EAAK,MAASS,EAAKC,GAC3DvF,EAAQqF,UGpLm38O,O,oBHyL918O,UAAf,WAAe,Q,GAA7B,GAAc,E,GAAT,IAAAX,EAAS,MAAe,EAAf,EACQ,mBAAeA,GAA5Bc,EAAa,EAAb,KAAMC,EAAO,EAAP,K,KACX,MAAYD,EArMuB,I,QAwM1BA,GAALR,GAAAA,GAAWU,GAAcD,GAALb,GAAAA,GAFXa,EAnMuB,IAqMM,OAAOf,C,OALrD,GAAc,GAQd,OAAO,I,0CA9D2B,QAA2B5D,E,+CAU3B,QAA2B,EAAOA,E,yBAnBhE,yC,eAvJZ,KAuE6C,WAAA6E,KAGA,aAGJ,gBAGV,WAAAhC,GAAwC,K,uBIlFjB,wB,yDAIjC,IAAI,EAAJ,O,GAAA,2B,gBASA,IAAI,EAAJ,O,GAAA,kC,eAiB0F,W,eAlC/G,KAoBsC,W,kBCtBlC,aAKA,Y,gBCN4B,Y,uBCOe,eAGA,qBAGJ,cAGF,uB,yDAbzC,KAA6B,Y,uBCOqB,cAGM,c,gEAkEhD,MA9Ec,KA8EsBiC,EAAMzD,MAAQ,EAAtC,G,UACZ,MA1EsD,IA0ENyD,EAAMxD,OAEtD,OAAO,GAAAyD,EAASC,E,sBAKO,MAAAC,GAAL,EAA2BH,GAAxCJ,EAAkB,EAAlB,KAAMC,EAAY,EAAZ,KACX,EAAYD,EAAOI,EAAMzD,MACzB,EAAasD,EAAMG,EAAMxD,OAEzB,OAAYoD,GAALR,GAAAA,GAAWU,GAAcD,GAALb,GAAAA,GAAUoB,C,gBArF7C,KAA2B,aAWU,a,wuErDuGpB,MAAAlG,KAAK,K,GAAL,QAAiB,YAA1B,MAAS,EACTO,OAAO4F,qBAAqBC,GAC5BpG,KAAK,KAAW,I,4EAaPA,KAAK,OAAa,UAAQqG,E,6BAInCrG,KAAK,MAAc,EACd,MAALA,KAAK,KAAc,MAAd,KAAc,KACnBA,KAAK,GAAe,K,iFAvIc,wD,2LAAE,UAAM,S,sKAAR,2C,+GEC5B,gB,6BAKA,gB,6BAWgB,O,GAAH,6B,gBAAA,MwCV3B,UAqB4F,I,2DxCEpFA,KAAA,KAAmB,IAAAsG,GAAY,GAAAtG,OAC1B,GAALA,MAAiB,I,8BAOZ,GAALA,MAAiB,GAAOE,GACnB,MAALF,KAAK,KAAa,MAAb,KAAa,GAAOE,E,8BAOpB,GAALF,MAAiB,GAAqBuG,GACjC,MAALvG,KAAK,KAAa,MAAb,KAAa,GAAqBuG,E,4DC7CnCvG,KAAK,MACL,MACqB,MAAbwG,EAAoB,aAAYC,IAC9B,aAAYA,IAAkB,KAAGD,EAAS,KAAIA,EAAUhF,QAClEF,QAAQC,IAAIC,E,oCAQZxB,KAAK,MACL,MACqB,MAAbwG,EAAoB,WAAUC,IAC5B,WAAUA,IAAkB,KAAGD,EAAS,KAAIA,EAAUhF,QAChEF,QAAQC,IAAIC,E,oCAQZxB,KAAK,MACL,MACqB,MAAbwG,EAAoB,UAASC,IAC3B,UAASA,IAAkB,KAAGD,EAAS,KAAIA,EAAUhF,QAC/DF,QAAQK,KAAKH,E,0DC5BL,sD,gMAGE,Y,gCAGVkF,K,kFACK,IAAAjD,EAAA,U,GACL,KAgDmC,M,IAAyB,EAClE,MAjDiBA,EAiDV,mBAAqD,qBAjD3CA,EAiDoF,KAjDpFA,EAiDkG,QAAsB,QAAQ,MAAM,E,CAhDjJlD,OAAOoG,MAAO,mB,8LATN,gB,8KIyCR,UAvCL,UACP,MAUI,QAAQ,IAPE,0B,mBAqCqBC,GAAL5G,KAAK,KAAW,qBAAX,S,+CAAvBA,KAAK,KAAL,KAAAA,KAAA,K,eAC2B4G,GAAL5G,KAAK,KAAW,0BAAX,S,+CAA3BA,KAAK,KAAL,KAAAA,KAAA,K,eAC4B4G,GAAL5G,KAAK,KAAW,2BAAX,S,+CAA5BA,KAAK,KAAL,KAAAA,KAAA,K,eACyB4G,GAAL5G,KAAK,KAAW,yBAAX,S,+CAAzBA,KAAK,KAAL,KAAAA,KAAA,K,eAC2B4G,GAAL5G,KAAK,KAAW,2BAAX,S,+CAA3BA,KAAK,KAAL,KAAAA,KAAA,K,eAC4B4G,GAAL5G,KAAK,KAAW,4BAAX,S,+CAA5BA,KAAK,KAAL,KAAAA,KAAA,K,eAC6B4G,GAAL5G,KAAK,KAAW,6BAAX,S,+CAA7BA,KAAK,KAAL,KAAAA,KAAA,K,eACwB4G,GAAL5G,KAAK,KAAW,uBAAX,S,2CAAxBA,KAAK,KAAL,OAEA,KAjDZ,MAUI,QAAQ,IAPE,0B,wSAmCP,UAoC2vG,UAAW,GAAmB,GAAF,YApBlxG,UAAY,IAAA6G,MAEZ,iBAAe,wBACf,kBAAgB,wBAKhB,cAAY,W,EAzBf,GAqCk0G,UAAK,KArCv0G,S,mPArCQ,IAAI,EAAJ,U,GAAA,iC,6BAKA,IAAI,EAAJ,U,GAAA,qC,6BAKA,IAAI,EAAJ,U,GAAA,sC,6BAKA,IAAI,EAAJ,U,GAAA,mC,6BAKA,IAAI,EAAJ,U,GAAA,qC,6BAKA,IAAI,EAAJ,U,GAAA,sC,6BAKA,IAAI,EAAJ,U,GAAA,uC,6BAKA,IAAI,EAAJ,U,GAAA,kC,8BAED,0D,gEAkCD,U,8DIxDC,OAAO,IAAAC,GAAYrD,EAAEsD,UAAWC,GAAUnF,EAAQ4B,GAAIwD,GAAUpF,EAAQ4B,G,8DAexE,OAAO,IAAAyD,GAAYzD,EAAEsD,UAAWC,GAAUnF,EAAQ4B,GAAIwD,GAAUpF,EAAQ4B,G,8DAexE,OAAO,IAAA0D,GAAU1D,EAAEsD,UAAWC,GAAUnF,EAAQ4B,GAAIwD,GAAUpF,EAAQ4B,G,8DAetE,OAAO,IAAA2D,GAAc3D,EAAEsD,UAAWC,GAAUnF,EAAQ4B,GAAIwD,GAAUpF,EAAQ4B,G,2DApDzB,gB,6BAAwB,gB,mCA5BzF,8E,mCAAA,0E,qCAAA,kB,KAAA,uD,OAAA,kE,kEA2CiE,gB,6BAAwB,gB,mCA3CzF,8E,mCAAA,0E,qCAAA,kB,KAAA,uD,OAAA,kE,kEA0D+D,gB,6BAAwB,gB,mCA1DvF,4E,mCAAA,0E,qCAAA,kB,KAAA,uD,OAAA,kE,gEAyEmE,gB,6BAAwB,gB,mCAzE3F,gF,mCAAA,0E,qCAAA,kB,KAAA,uD,OAAA,kE,mGCyEyB,gB,mCAzEzB,kF,mCAAA,iE,qCAAA,kB,KAAA,uD,QAAA,oD,wEAiFyB,gB,6BAM+F,QAA/DzD,KAAK,KAAa,OAAeA,KAAK,KAAc,K,mCAvF7G,kF,mCAAA,iE,qCAAA,kB,KAAA,uD,QAAA,oD,qGAgGqB,gB,mCAhGrB,qE,mCAAA,iE,qCAAA,kB,KAAA,uD,QAAA,oD,2DAwGqB,gB,6BAM+F,QAA/DA,KAAK,KAAa,OAAeA,KAAK,KAAc,K,mCA9GzG,yE,mCAAA,iE,qCAAA,kB,KAAA,uD,QAAA,oD,yGAcYqH,EAAA,cAAsCC,EAAA,cAElC,MAAoBC,EAAO,W,QAAA,Q,EACnB,IAAAC,GAAKD,EAAQE,E,SAIzBJ,EAAA,cAAsCC,EAAA,cAElC,MAAoBC,EAAO,uBACtB,KACA,S,EACO,IAAAG,GAAkBH,EAAQ,E,SAI1CF,EAAA,cAAsCC,EAAA,cAElC,MACIC,EAAO,uBAAqD,S,EACpD,IAAAI,GAAkBJ,EAAQ,E,UAI1CF,EAAA,eAAsCC,EAAA,aAM9B,MAAM,KAJV,MAAoBC,EAAO,SAAqC,K,EACxD,IAAAK,GAASL,EAAQ,E,CA9BjC,OAAO,C,uECyBQ,kB,EAKQ,G,KAAA,e,EAFR,IAAAM,GACMjE,GACE,GACA,GAAgB,oBAAhB,kB,EAOA,G,KAAA,e,EAFR,IAAAiE,GACMjE,GACE,GACA,GAAgB,QAAhB,kB,EAOA,G,KAEC,QA5CU,QA0CX,gB,OAvBvB,EAAgBA,GAED,OAmBA,IAAAiE,GACMjE,GACE,GAMA,KAEC,SAtDW,QAoDZ,qBAYvB,OAAwB,IAAAkE,I,mBADU,UACsBC,E,kCAOxD,qB,KACA,I,EAAA,gB,EwCNyB,EAiDwB,gBAAqB,EAhD9E,EAgDyD,gBxC1CjD,MAA2B,KAA8B,G,EAG1C,IAAAC,GAAA,e,EAGA,GAAgB,UAA+B,UAAS,IAAxD,e,EAGA,G,KAAA,iB,EACA,G,KAEK,GAFL,e,EAMA,GAAgB,kBAAhB,e,EAGA,G,KAAA,e,EACA,GAAgB,yBAAhB,e,EAGA,IAAAH,GACMjE,GACE,KAAAqE,GAAA,KAEQ,SACAC,GAER,IAAAC,GACMvE,GACE,KAAAwE,GAAA,KAEQC,GAER,IAAAC,GACC,iBACOC,GAER,IAAAC,GAAA,KAEQH,GAER,IAAAC,GACC,iBACOC,S,EAQxB,GAAgB,SAA8B,UAAS,IAAvD,e,EAGA,G,KAAA,iB,EACA,G,KAEK,EAFL,e,EAMA,GAAgB,kBAAhB,e,EAGA,G,KAAA,e,EACA,GAAgB,wBAAhB,e,EAGA,G,KAAA,eArEf,EAAgB3E,GACD,+BAqEA,GAAgB,yBAAhB,iBAKf,OAAwB,IAAAkE,I,mBADU,UAAQ,SACcC,E,gCAO3C,I,EAAA,EAAAU,E,GAGT,iB,MAGmB,GAAgB,SAA8B,UAAS,IAAvD,e,EAGA,G,KAAA,iB,EACA,G,KAA4E,EAA5E,e,EAGA,GAAgB,kBAAhB,e,EAGA,GAAgB,gBAAhB,e,EAGQ,G,KAAA,e,SAFR,IAAAZ,GACMjE,GACE,GACA,uBAhBvB,EAAgBA,GAED,aAiBA,GAAgB,kBAAhB,iB,EAGE,IAAAkE,GAAkBY,EAAMD,EAAQ,KAAeV,E,SAIpE,iB,QAImB,GAAgB,SAA8B,UAAS,IAAvD,e,EAGA,G,KAAA,iB,EACA,G,KAA4E,EAA5E,e,EAGA,GAAgB,kBAAhB,e,EAGA,G,KAAA,e,EACA,GAAgB,wBAAhB,e,EAGA,GAAgB,gBAAhB,e,EAGQ,G,KAAA,e,SAFR,IAAAF,GACMjE,GACE,GACA,uBApBvB,EAAqBA,GAEN,iBAqBA,GAAgB,kBAAhB,iB,OAEO6E,EAAQ,M,KAG1B,E,EAAQ,GAAAzI,KAAK,KAAyB2I,G,WAGtC,E,EAAS,GAAA3I,KAAK,KAAyB2I,G,mBAN3C,Q,EASiB,IAAAb,GAAkBY,EAAMD,EAAQ,KAAe,E,SAIpE,iB,MAGmB,GAAgB,UAA+B,UAAS,IAAxD,e,EAGA,G,KAAA,iB,EACA,G,KAAuE,EAAvE,e,EAGA,GAAgB,kBAAhB,e,EAGA,G,KAAA,e,EACA,GAAgB,yBAAhB,e,EAGA,GAAgB,eAAhB,e,EAGQ,G,KAAA,e,SAFR,IAAAZ,GACMjE,GACE,GACA,uBApBvB,EAAgBA,GAED,iBAqBA,GAAgB,oBAAhB,iB,EAGE,IAAAkE,GAAkBY,EAAMD,EAAQ,KAAe,E,SAIpE,iB,QAGmB,GAAgB,SAA8B,UAAS,IAAvD,eAFf,EAAqB7E,GAEN,GACA,GAAgB,iBAAhB,iB,OAEO6E,EAAQ,M,KAG1B,E,EAAQ,KAAiBzI,KAAK,M,WAG9B,E,EAAS,KAAiBA,KAAK,M,mBANnC,Q,EASiB,IAAA8H,GAAkBY,EAAMD,EAAQ,KAAe,E,WApHxE,OAAO,C,0FEnHK,yD,CApB0D,CAAAzI,KAAA,S,oTAA7B,sD,gKAAO,GAALA,KAAK,OAAQ,MAAc,KAAAA,KAAA,O,MAAR,KAAQ,UAAR,S,gCAAA,K,8HAArB,2B,0LAqBzC,UAhCE,UAAK,M,IACK,EAIpB,uBA2BiC,UAxBK,QAAQ,IAC9C,E,IAyB2B,oBAGf,qB,IAEiB,oBAAM,MAAN,I,0BAQjB,qB,OAGS,GAALA,KAAK,MAAW,MAAM,MACtB,UAAY,UAAM,MAAO,K,eACD,GAALA,KAAK,MAAW,MAAS,IAAa,UAAb,S,2CAA5C,YACK,GAALA,KAAK,MAAW,MAAM,M,UAEC,OAAe,UAAO,UAAa,O,kCAhB7C,e,0BAAR,UAAQ,c,eACS,SAAG,WAAM,IAAO,UAAW,GAALA,KAAK,MAAlB,S,wEAGR,OAAkB,W,8BATjD,gB,OA0BK,GAALA,KAAK,MAAQ,IAAa4I,G,kOArD1B5I,KAAK,KAAU,IAAA6I,GAAmB7I,KAAK,MACvCA,KAAK,KAAa,IAAA8I,GAGlB9I,KAAA,KAAyB,S,EAAgB,mB,2CAAhB,E,8BAOpB,GAALA,MAAgB,GAAOE,E,8BAOlB,GAALF,MAAgB,GAAqBuG,E,8DCvB5B,iB,mCAxBjB,+F,mCAAA,wF,qCAAA,kB,KAAA,uD,QAAA,8E,yEAiCiB,iB,mCAjCjB,kE,mCAAA,mE,qCAAA,kB,KAAA,uD,QAAA,wD,gHCAA,+C,mCAAA,4B,qCAAA,kB,KAAA,uD,QAAA,0B,8EAAA,yE,mCAAA,mE,qCAAA,kB,KAAA,uD,QAAA,wD,qHfgCgE,KAH/C,M,IACL,EAC4B,uBgBGPqC,EhBDrBtH,QAAQC,IAAIC,E,CgBGV,MAAAoH,E,GAGF,iBACI,MAAYA,EAAO,MACb,EAAWG,EAAM,M,GAGnB,gBAEI/I,KAAK,MAAL,GAAmC,gB,GAIvC,gBAEIA,KAAK,MAAL,GAAqC,IAAAgJ,GAAsBN,EAAK,MAAeK,EAAM,a,GAIzF,gB,GAEQA,EAAM,MAAO,KAAb,aAUA/I,KAAK,MAAL,GAAqC,IAAAgJ,GAAsBN,EAAK,MAAeK,EAAM,YAVrF,CAEA,MACI,IAAAE,GAAgBF,EAAM,MAAO,KAAb,aAA8DL,EAAK,OACvF1I,KAAK,MAAwBqB,E,UAa7C,iBACI,MAAYuH,EAAO,MAGnB,EAAgBA,EAAO,MACvB,EAAiB5I,KAAK,MAAS,IAAiB,EAAM,MAAMqH,G,GhBK6M,KApExQ,M,IACL,EAC4B,+BgB8DOA,EAAS,YAAUC,EhB5DtDhG,QAAQC,IAAI,E,CgB+DR,O,mBAA8B,GAAM,EAAM,MAAQ8F,EAAWC,GAC7DtH,KAAK,MAAL,GAAmC,QAAsB,EAAM,MAAMyI,G,sLZzErC,EAAL,KAAK,KAggD/B,KAAa,KAAwB,KAuErC,EAvEN,EAuEM,YAAR,I,IAAA,EAAQ,M,GalgDutmD,EAtDntmD,MAAL,OAAiBS,G,OAsDusmD,EArD1rmD,MAAc,I,EAqD4qmD,EArDltmD,oB,QAqDktmD,EAtD5tmD,IbyjDJ,EAAY,EAAI,E,Ca1jDhB,Mb2jDG,EatjDH,OAAOlJ,KAAK,GAAkBmJ,EAAlB,c,mCAOOnJ,KAAK,KAAc,I,KAAtC,MAAyCwD,GAAa,EA4BpB,GA3BlC,OAAOxD,KAAK,QAAmBoJ,EAAnB,Y,mCAvCpB,oB,sCAAA,8F,mCAAA,uG,mCAAA,iF,qCAAA,kB,KAAA,uD,QAAA,oE,6GCuBsE,OAAtB,IAAAC,GAAoB,E,iEAQW,OAA/BrJ,KAAK,IAAYA,KAAK,MAAO,EAAxB,E,+BA/BrD,gB,mCAAA,yC,mCAAA,iB,qCAAA,kB,KAAA,uD,OAAA,oB,oPGUI,iB,8BAKA,iB,mCAfJ,oB,uCAAA,iG,mCAAA,+F,mCAAA,gF,qCAAA,kB,KAAA,uD,QAAA,sE,qECcyB,IAAb0I,EAAK,MAAW,CACH,I,SAAArB,EAAA,M,KAGA,E,kBAGA,E,qBAED,MAAM,KARlB,OAAO,C,IAaM,KAAbqB,EAAK,MAGL,OAAO,KAIc,I,SAAZ1I,KAAK,MAAO,M,KACrB,E,kBACA,E,0BAFJ,OAAO,C,wICxBC,sBAS0Q,IAAsD,MAAM,GAAiC,GAJ3U,wB,GAFzB,WAAL,WAAK,iCACO,IAAd,WAAc,C,kBAAO,WAAW,MAAkB,IAAU,WAAK,MAAa,WAAK,MAAjC,S,4BACpC,IAAd,WAAc,C,kBAAY,WAAW,MAAmB,IAAU,WAAK,MAAa,WAAK,MAAjC,S,qTAN/C,8D,yFJAN,aAyBP,IAEA,MAAM,GAAiC,GAfzB,wB,OiCTdsJ,EAAW,MAAiB,IAAOC,EAAK,MAAZ,E,gcxCbpC,yC,mCAAA,qB,qCAAA,kB,KAAA,uD,QAAA,sB,mEAAA,2C,mCAAA,qB,qCAAA,kB,KAAA,uD,QAAA,sB,qEAAA,2C,mCAAA,4B,qCAAA,kB,KAAA,uD,QAAA,0B,kEAAA,6D,mCAAA,4B,qCAAA,kB,KAAA,uD,QAAA,0B,iFAAA,mF,mCAAA,mE,qCAAA,kB,KAAA,uD,QAAA,wD,kFAAA,kF,mCAAA,mE,qCAAA,kB,KAAA,uD,QAAA,wD,iFAAA,4G,mCAAA,2F,qCAAA,kB,KAAA,uD,QAAA,8E,gFAAA,iF,mCAAA,mE,qCAAA,kB,KAAA,uD,QAAA,wD,gFAAA,mF,mCAAA,mE,qCAAA,kB,KAAA,uD,QAAA,wD,kFAAA,mF,mCAAA,mE,qCAAA,kB,KAAA,uD,QAAA,wD,4EAAA,iB,6BAAA,iB,8BAAA,iB,8BAAA,iB,8BAAA,iB,mCAAA,iK,mCAAA,+I,qCAAA,kB,KAAA,uD,QAAA,0H,2FAAA,2F,mCAAA,mE,qCAAA,kB,KAAA,uD,QAAA,wD,0FAAA,wH,mCAAA,2F,qCAAA,kB,KAAA,uD,QAAA,8E,6FAAA,0G,mCAAA,+F,qCAAA,kB,KAAA,uD,QAAA,8E,6EAAA,qE,mCAAA,4D,qCAAA,kB,KAAA,uD,OAAA,kD,+FyCoByB,I,EAAA,EAAAA,EAAb,OACI,iB,uBACA,iB,uBACA,iB,uBACA,iB,uBACA,iB,qBACA,iB,qBACA,iB,qBACA,iB,qBACA,iB,qBACA,iB,qBACA,iB,qBACA,iB,qBACA,iB,qBACA,iB,qBACA,iB,0BAfG,C,wK7BTH,sBAS2R,IAAsD,MAAM,GAAiC,GAJnV,wB,GAFlC,WAAL,WAAK,iCACO,IAAd,WAAc,C,kBAAO,WAAW,MAAM,IAAe,WAAK,MAAY,WAAK,MAArC,S,4BACxB,IAAd,WAAc,C,kBAAY,WAAW,MAAO,IAAe,WAAK,MAAY,WAAK,MAArC,S,qTANnC,8D,wJCCL,sBAS+U,IAAsD,MAAM,GAAiC,GAJ7W,wB,GAF5D,WAAL,WAAK,iCACO,IAAd,WAAc,C,kBAAO,WAAW,MAAM,IAAM,WAAK,MAAX,S,4BACxB,IAAd,WAAc,C,kBAAY,WAAW,MAAO,IAAM,WAAK,MAAX,S,qTANnC,8D,0JCCL,sBASmV,IAAsD,MAAM,GAAiC,GAH9b,wB,GAHiB,WAAL,WAAK,iCACO,IAAd,WAAc,C,kBAAO,WAAW,MAAM,IAAK,WAAK,MAAV,S,4BACxB,IAAd,WAAc,C,kBAAY,WAAW,MAAO,IAAK,WAAK,MAAV,S,qTANnC,8D,yJCCL,sBASmT,IAAsD,MAAM,GAAiC,GAJhW,wB,GAF7C,WAAL,WAAK,iCACO,IAAd,WAAc,C,kBAAO,WAAW,MAAM,IAAmB,WAAK,MAAxB,S,4BACxB,IAAd,WAAc,C,kBAAY,WAAW,MAAO,IAAmB,WAAK,MAAxB,S,qTANnC,8D,0JCCL,sBASiT,IAAsD,MAAM,GAAiC,GAJhW,wB,GAF3C,WAAL,WAAK,iCACO,IAAd,WAAc,C,kBAAO,WAAW,MAAM,IAAmB,WAAK,MAAxB,S,4BACxB,IAAd,WAAc,C,kBAAY,WAAW,MAAO,IAAmB,WAAK,MAAxB,S,qTANnC,8D,0JCCL,sBASyT,IAAsD,MAAM,GAAiC,GAJlW,wB,GAFjD,WAAL,WAAK,iCACO,IAAd,WAAc,C,kBAAO,WAAW,MAAM,IAAiB,WAAK,MAAtB,S,4BACxB,IAAd,WAAc,C,kBAAY,WAAW,MAAO,IAAiB,WAAK,MAAtB,S,qTANnC,8D,wJCCL,sBAa2K,IAAsD,MAAM,GAAiC,GAPpM,wB,GAL7B,sBAA1C,WAA0C,WAA1C,KAAM,WAAoC,WAApC,KAAM,WAA8B,WAA9B,MAAW,WAAmB,WAAnB,MAAO,WAAY,WAAZ,MAE7B,iDAGY,IAAd,WAAc,C,kBAAO,WAAW,MAAe,IAAc,WAAM,WAAW,WAAO,WAAtC,S,4BAGjC,IAAd,WAAc,C,kBAAY,WAAW,MAAgB,IAAc,WAAM,WAAW,WAAO,WAAtC,S,sTAV5C,8D,mKCCL,sBAYkQ,IAAsD,MAAM,GAAiC,GAJ5V,wB,GANA,WAAL,WAAK,iCAGO,IAAd,WAAc,C,kBAAO,WAAW,MAAe,IAAc,WAAK,MAAnB,S,4BAGjC,IAAd,WAAc,C,kBAAY,WAAW,MAAgB,IAAc,WAAK,MAAnB,S,sTAT5C,8D,kKCCL,sBASwO,IAAsD,MAAM,GAAiC,GAJ1U,wB,GAFQ,WAAL,WAAK,iCACO,IAAd,WAAc,C,kBAAO,WAAW,MAAe,IAAgB,WAAK,MAAW,WAAK,MAArC,S,4BACjC,IAAd,WAAc,C,kBAAY,WAAW,MAAgB,IAAgB,WAAK,MAAW,WAAK,MAArC,S,sTAN5C,8D,yGbAK,aAyBlB,IAEA,MAAM,GAAiC,GAfzB,wB,OmCRdC,GAAMD,EAAK,MAAX,E,kFnCJP,aAyBO,IAEA,MAAM,GAAiC,GAfzB,wB,OoCTdD,EAAW,MAAa,IAAYC,EAAK,MAAMA,EAAK,MAA5B,E,4EtBQA,wD,2LAAoB,SAAG,YAAO,IAAO,WAAO,WAAd,S,sKAA9B,wD,sIALT,wD,0KACX,WAAW,GAA0B,WAAK,MAAW,K,IAGvC,iBAAK,MAAL,YAAT,IAAAE,EAAS,MACV,EAAU,wBAAM,sBAAN,QACV,WAAK,EAAIC,E,mBAIRC,GAAL,WAAK,S,mKAVM,wD,iMAFP,sBAgB4G,IAAsD,MAAM,GAAiC,GAVnM,wB,kBAJdC,GAAe,+BAAf,S,0PAHa,8D,iJCHL,sBAQof,IAAsD,MAAM,GAAiC,GAAhd,wBAL3H,sBAAK,MAAL,I,kCAAA,gB,0BAAT,WAAS,e,eACQ,SAAG,YAAO,IAAO,WAAO,WAAd,S,wRALnB,8D,qLCiFsB,oB,KAAnC,MAA4DC,GAAxC,cAa23D,4BAbn1D,aAC5D7J,KAAK,MAAL,MAAmB,WACnBA,KAAK,MAAL,MAAoB,E,oBAGpB8J,G,cAA2C,eAA3C,S,kDACAN,GAAM,WAAN,S,uDACAM,G,cAA2C,eAA3C,S,uCAEA9J,KAAK,MAAL,MAAmB,KACnBA,KAAK,MAAL,MAAoB,E,oNAtCK,IAArBA,KAAK,MAAsB,YACL,MAAAA,KAAK,M,GAAL,QAAoB,YAA9C,I,EAAA,EAA0B,E,OAGHA,KAAK,Y,KACV,E,EAAO,W,WACP,E,EAAY,W,mBAFb,I,EAAA,IAAZ6E,EAAY,EAAZ,KAAOC,EAAK,EAAL,K,OAIS9E,KAAK,Y,KACR,E,QAxDgB,I,WAyDhB,E,OA1DrB,K,mBAwDG,IAIA,EAJA,GAIoB6E,EAJpB,GAIwC7E,KAAK,M,KAC7CE,EAAQ8E,UAtCqC,U,UAuC7C9E,EAAQ+E,SAAaC,EAAOJ,EA7DM,IAGC,I,KA6DnC,MAAYI,EAvDmC,G,WAwDnCJ,EArDiC,G,KAqD7C,MAAY,EAxCuB,G,KAyCnC5E,EAAQiF,KAtCyB,a,KAuCjCjF,EAAQ8E,UApCoC,UAqC5C9E,EAAQkF,SAAgB2E,EAAiB1E,EAAWC,E,mCAMhD,8D,+DCrEJpF,EAAQ8E,UAAa,U,UACrB9E,EAAQ+E,SAAa,EAAS,EAHhC,KAEqB,KAInB,MAAYjF,KAAK,MACjBE,EAAQ8J,YAAcC,EACtB/J,EAAQgK,UAAmC,UAAiB,EAAU,GACtEhK,EAAQ8J,YAAc,C,wCAOtBhK,KAAK,MAAe,EACpB8J,GAAsBK,G,EAAc,K,mBAAc,QAAoBnJ,E,OAAtE,G,wEC0BAhB,KAAK,MAAiB,GAAOE,GAC7BF,KAAK,MAAM,GAAOE,GAClBF,KAAK,MAAO,GAAOE,GACnBF,KAAK,MAAe,GAAOE,GAC3BF,KAAK,MAAgB,GAAOE,GAC5BF,KAAK,MAAkB,GAAOE,GAC9BF,KAAK,MAAmB,GAAOE,GAC/BF,KAAK,MAAa,GAAOE,GACzBF,KAAK,MAAS,GAAOE,E,8BAQrBF,KAAK,MAAS,GAAqBuG,E,0KC+EnCvG,KAAK,MAAL,MAA4B,E,eAC5B8J,GAAsB,WAAc,eAApC,S,uCACA9J,KAAK,MAAL,MAA4B,K,4RAO5BA,KAAK,MAAL,MAA8B,E,eAC9B8J,GAAsB,WAAc,eAApC,S,uCACA9J,KAAK,MAAL,MAA8B,K,8RAO9BA,KAAK,MAAL,MAA8B,E,eAC9B8J,GAAsB,WAAc,eAApC,S,uCACA9J,KAAK,MAAL,MAA8B,K,0NA9FE,I,SAALA,KAAK,Y,KACd,E,EAAwB,U,WACxB,E,EAA6B,U,mBAF/C,QAMoB,E,iBA8FY,IAA5B,EAAK,MAAuB,CAED,I,SAAL,EAAK,Y,KACT,E,EAAO,GAAMoK,EAAe/H,MAAQ,EAA7B,G,WACP,E,OAjLf,MAiL+C+H,EAAe/H,MAAQ,EAA3C,G,mBAF9B,I,EAAA,I,OAIyB,EAAK,Y,KACZ,E,EAAO,W,WACP,E,EAAY,W,mBAFX,QAAdgI,EAAc,EAAd,KAAQC,EAAM,EAAN,KAIb,EAASC,GAAaF,EAASE,GAAa,EAAK,MAEjD,OAAO,GAAAC,EAAMF,E,CAKoB,I,SAAL,EAAK,Y,KACf,E,EAAO,W,WACP,E,EAAY,W,mBAFR,QAAjB,EAAiB,EAAjB,KAAIG,EAAa,EAAb,KAKT,EAASA,GADIA,EAAYL,EAAe9H,OACTmI,GAAa,EAAK,MAEjD,OAAO,KAAM,E,CAtHGC,CAAL1K,KAAwBoK,GAAlCI,EAAe,EAAf,KAAIF,EAAW,EAAX,K,SkBDA,KAAM,KAAK,MlBEpB,EAAmB,GAvD4B,KAuDA,IAAQ,EAA0C,EkBmQvD,KAAW,IAAI,IlBlQzD,E,cA2HA,I,EAAA,EAAYF,EAAe/H,MAC3B,EAAa+H,EAAe9H,O,OAEP,EAAK,Y,KACR,E,EAAO,W,WACP,E,EAAY,W,mBAFf,QAIf,EAJe,EAAV,MAIWD,EAAQ,EAAb,GACX,EAAYqD,EAAOrD,EACnB,EANe,EAAN,MAMMC,EAAS,EAAd,GACV,EAAaqD,EAAMrD,EMlEioE,aNoEppE,OA9HmD,EA+H5CqI,OAAOjF,EAAMC,GA/H+B,EAgI5CiF,OAAOhF,EAAOD,GAhI8B,EAiI5CiF,OAAOhF,EAAOM,GAjI8B,EAkI5C0E,OAAOlF,EAAMQ,GAlI+B,EAmI5C0E,OAAOlF,EAAMC,GAnI+B,EAoI5CkF,YMrIJ,C,CNRiBC,CAAL9K,KAA2BoK,GAC1C,EAAYA,EAAe/H,MAAQ0I,EACnC,EAAaX,EAAe9H,OAASyI,EACrC,EAAQP,EAAKnI,EAAQ,EACrB,EAAQiI,EAAKhI,EAAS,EAGtBpC,EAAQ8J,YAAchK,KAAK,MAC3BE,EAAQ8K,OACwB,IAA5BhL,KAAK,OAA6BE,EAAQ+K,KAAKC,GACnDhL,EAAQgK,UAAUE,EAAgBlF,EAAGJ,EAAGzC,EAAOC,GAC/CpC,EAAQiL,UACRjL,EAAQ8J,YAAc,E,oBAuIP,QAAK,M,GAAL,QAA6B,YAA5C,MAAe,EMhF0nF,KAAL,GN1DjlF,EA8I/C,MAAWI,EAAe/H,MA9IqB,EA+I/C,OAAY+H,EAAe9H,OAF/B,I,EAAA,EM9IG,E,ENkJqB8I,EAAiBjJ,WAAY,MAArD,wCAAwB,EAAxB,KACA,EAAmC,UAGnC,EAAoBkJ,EAAY/I,OAAS,GAAO,EAAMtB,EkBiDpB,IAAW,GAmDc,EAAjB,KAAW,IAAI,GlBnGzD,MAA8C,GAAH,GAA7B,GAAM,GAAkD,EAAoB,GAC1FsK,EAAkBtB,YAAcC,EAGhCqB,EAAkBpB,UAAUmB,EAAa,EAAKE,GAG9CD,EAAkBE,yBAA4B,iBAC9CF,EAAkBpB,UAAUE,EAAgB,EAAK,GAGjDkB,EAAkBpB,UAAUmB,EAAa,EAAKE,GAC9CD,EAAkBtB,YAAc,EAGhC9J,EAAQgK,UAAUkB,EAAkBlG,EAAGJ,E,CA/JlC2G,CAALzL,KAAwBE,EAASkK,EAAgBlF,EAAGJ,G,oBAoKrC,QAAK,M,GAAL,QAA+B,YAA9C,MAAe,EMhHy6H,KAAL,GN1Dh4H,EA8K/C,MAAWsF,EAAe/H,MA9KqB,EA+K/C,OAAY+H,EAAe9H,OAF/B,I,EAAA,EM9KG,E,ENkLqB8I,EAAiBjJ,WAAY,MAArD,wCAAwB,EAAxB,KACA,EAAmC,UAGnC,EAAoBkJ,EAAY/I,OAAS,GAAOtB,EAAW,GkB8DlE,IAAW,GAMuD,EAAjB,KAAW,IAAI,GlBnEzD,MAA8C,GAAH,GAA7B,GAAM,GAAkD,EAAoB,GAC1FsK,EAAkBtB,YAAcC,EAGhCqB,EAAkBpB,UAAUmB,EAAa,EAAKE,GAG9CD,EAAkBE,yBAA4B,iBAC9CF,EAAkBpB,UAAUE,EAAgB,EAAK,GAGjDkB,EAAkBpB,UAAUmB,EAAa,EAAKE,GAC9CD,EAAkBtB,YAAc,EAGhC9J,EAAQgK,UAAUkB,EAAkBlG,EAAGJ,E,CA9LlC4G,CAAL1L,KAA0BE,EAASkK,EAAgBlF,EAAGJ,G,oBAqMvC,QAAK,M,GAAL,QAA+B,YAA9C,MAAe,EAEf,EAAgE,GAA7B,KAAX9D,EAAoE,GAC5F,EAAsC,GAAhBA,EAAW,GAAkC,GAAQ,mBkBoF5B,IAAmB,KlBjFlE,EkBjS0C,KAAW,IAAI,GlBiSdoJ,EAAe/H,MAAQ,EAClE,EAAYmI,EAAK9G,EACjB,EAAa8G,EAAK9G,EAGlB,EAAe4G,GAAKF,EAAe9H,OAAS,EAA7B,GACf,EAAQqJ,GAAYrB,EAAKqB,GAAYC,E,ekB8FrC,MAAmB,EAAnB,EAAuB,ElB1FvB,EA1RwD,GAGA,IAuRC,EkB6Bf,KAAW,IAAI,IlB1BjC,IAApBA,IACA1L,EAAQ2L,YACR3L,EAAQ8E,UAAa,UACrB9E,EAAQ4L,IAAI/F,EAAOjB,EAAGiH,EAAQ,EAAU,EAAL,MACnC7L,EAAQ4L,IAAIE,EAAQlH,EAAGiH,EAAQ,EAAU,EAAL,MACpC7L,EAAQ+L,Q,eAKZ,MA9RuD,IAHA,GAiSUC,EACjE,EAAmB9B,EAAe/H,MAAQ,EAAM6J,EAChDhM,EAAQ2L,YACR3L,EAAQiM,YAAe,UACvBjM,EAAQkM,UAAYC,EACpBnM,EAAQ4L,IAAItB,EAAIF,EAAIgC,EAAc,EAAU,EAAL,MACvCpM,EAAQqM,Q,CAvOHC,CAALxM,KAA0BE,EAASkK,EAAgBI,EAAIF,E,wCAOvDR,GAAsBK,G,EAAc,K,mBAAE,QAA4BpI,E,OAAlE,G,6CAOA+H,GAAsBK,G,EAAc,K,mBAAE,QAA2BpI,E,OAAjE,G,mCAOK,MAAL/B,KAAK,MAAyB,MAAzB,KAAyB,K,azC/ClC,E,kByCgDIA,KAAA,O,EAC6B,E,EAA6B,K,qBAAE,QAA2B+B,E,MzC3C3F,GANA,EAAc,IAAA0K,GAMd,KAEOvL,E,8ByCgDE,MAALlB,KAAK,MAAyB,MAAzB,KAAyB,KAC9BA,KAAK,MAA0B,KAC/BA,KAAK,MAAsB,C,0CAO3B8J,GAAsBK,G,EAAc,E,EAAA,K,gBkBiBK,IACxC,EADG,MAAO,EAAW,EA8qBoB,KAAW,MAAM,IlB9rBvD,EAAgF,EkByM1C,KAAW,IAAI,G,OlBxMrD,QAAuBF,E,OAF3B,G,wCASI,4D,iCASA,4D,iCASA,4D,yFE7KZ,iB,6BAAA,iB,8BAAA,iB,mCAAA,oB,uCAAA,iG,mCAAA,2F,mCAAA,yE,qCAAA,kB,KAAA,uD,OAAA,gE,qIAqJQ,WAAe,IAAAyC,GAAe,WAAM,WAAW,YAC/C1M,KAAK,MAAL,MAAsB,WAElB,gCAAoBA,KAAK,MAAL,MAA2B,E,yCAC9C8J,GAAsB,WAAc,eAApC,S,8VAOD,gCAAoB9J,KAAK,MAAL,MAA2B,E,yCAC9C8J,GAAsB,WAAc,eAApC,S,qEAEL9J,KAAK,MAAL,MAAsB,K,4RAOP,EAAAA,KAAA,MAAK,M,GAAL,Q,iBAAA,E,KAAf,QACA,WAAY,WAAS,MACrB,WAAW,WAAS,WAApB,E,eAGA8J,GAAsB,WAAc,gDAApC,S,uCAGA9J,KAAK,MAAL,MAAsB,WAAS,SAAiB,WAAjB,U,uNAxFA,MAAAA,KAAK,M,GAAL,QAAuB,YAAvB,I,EAAA,IAA1B2M,EAA0B,EAA1B,KAAMC,EAAoB,EAApB,KAAWC,EAAS,EAAT,M,OAGW7M,KAAK,Y,KACpB,E,MAAO,W,OAAa,MAAa,IAAb,a,WACpB,E,MAAY,W,OAAkB,KAlFnB,KAkFmB,a,mBAFrB,I,EAAA,IAAtB8M,EAAsB,EAAtB,KAAUnB,EAAY,EAAZ,K,OAIY3L,KAAK,Y,KACd,E,EAAO,W,WACP,E,EAAY,W,mBAFT,QAAhB6E,EAAgB,EAAhB,KAAOkI,EAAS,EAAT,KAIZ,EAAaD,GAAYjI,EAAQiI,GAAY9M,KAAK,MAClD,EAAa2L,GAAYoB,EAAQpB,GAAY3L,KAAK,M,KAClDE,EAAQ8E,UA5DqC,U,UA6D7C9E,EAAQ+E,SAAa+H,EAAYC,EAvFC,IAGC,K,KAuFnC,MAAYD,EA3EmC,G,WA4EnCC,EA9D4B,G,KA8DxC,MAAY,EA/EiC,G,KAgF7C/M,EAAQiF,KA5D8B,a,KA6DtCjF,EAAQ8E,UApDoC,UAqD5C9E,EAAQkF,SAAgBuH,EAAUtH,EAAWC,GAG7C,MAAcsH,EAAS,IAAEC,E,WACfG,EAlGwB,I,KAkGlC,MAAU,EAnFqC,G,WAoFrCC,EAhGyB,I,KAgGnC,MAAU,EAvFmC,GAwFzCjN,KAAK,MAAL,e,KACAE,EAAQiF,KA/D4B,a,KAgEpCjF,EAAQ8E,UA7DgC,UKX288O,MLyEn/8O9E,EAAQqF,UKzE2+8O,ML0En/8OrF,EAAQkF,SAAS8H,EAAOC,EAAKC,GK1E018O,QL2Ev38OlN,EAAQqF,UK3E+28O,S,KL+E338O,MAAeyH,EA9FgC,G,EA+F9B1H,EAAQ8H,E,KAAzB,OAAiB,EA3EyB,IA2ES,E,KACnD,MAAeC,EAnE6B,E,eAqE5CnN,EAAQ8E,UAlE8C,U,KAmEtD9E,EAAQ+E,SAAaqI,EAAcC,EAlHD,IA4CU,IAyE5C,I,EAAA,EAAoD,GAA9BX,EAAuBC,EAA+B,EAAoB,G,GAE3E,IAAbD,E,EAAgB,M,OAvHU,IAuHeY,E,OAAgB,KA3DR,E,CA0DzD,I,EAAA,IAGIA,GAAkB,K,OAjE8B,WAkEhDA,GAAkB,I,OArEiC,Y,OAHD,WAsEtDtN,EAAQ8E,UAAY,E,KAKpB9E,EAAQ+E,SAAaqI,EAAcC,EAAcE,EAjFL,G,uCAuFxC,kE,iCAWA,4D,mCAUA,8D,uKCzFJzN,KAAK,MAAL,MAAY,W,oBACZ8J,G,cAAsD,eAAtD,S,6CAGmC,oB,KAAnC,MAA4DD,GAAxC,cAQm7E,4BAR34E,a,eAC5DL,GAAM,WAAN,S,uDAGAM,G,cAAsD,eAAtD,S,uCACA9J,KAAK,MAAL,MAAY,K,mNAnCZE,EAAQ8J,YAAchK,KAAK,M,8BAK3BE,EAAQ8E,UAjCqC,U,UAkC7C9E,EAAQ+E,SAHK,GACA,IA5CqB,KAGC,KA8CnC,MAAWjF,KAAK,M,GACJ,MAAR0N,EAAA,C,oBAGAxN,EAAQ8E,UAtCgC,U,KAuCxC9E,EAAQiF,KAjCqB,aAkC7BjF,EAAQkF,SAASsI,EAJLV,GACA,I,CAMhB9M,EAAQ8J,YAAc,C,mCAMlB,8D,4OC8FAhK,KAAK,M,UAAoB,MAjIW,EA6JzC,WAAW,GAlBaA,KAAK,OAxBuB,QAwB5B,EAAAA,KAAA,M,GAxBc,EAAc,E,GAAT,MAAS,U,KAcuB,MAb1E,GApHwC,EAiIwD,WAAM,IAA5B,KA8BjF,WAAK,EArDc,GAuBwC,WAvB9B,G,OASe,EAAc,G,GAc/C,QA+BC,WA9BDA,KAAK,YAAL,GAA0B,M,oBAG1B8J,G,cAEgB,eAFhB,S,kDAMqD6D,GAAhBC,GAAlB5N,KAAK,aAA6B,S,mCAArD,aACAA,KAAK,YAAL,GAA0B,M,oBAG1B8J,G,cAEgB,eAFhB,S,gCAMA,WAAO,W,0CAtBX,iB,OAwBI9J,KAAK,MAAL,MAAa6F,KAxBjB,E,cAwBI7F,KAAK,MAAL,MAAa6F,K,wBAxBjB,IAAAgI,EAAA,gBAwBI7N,KAAK,MAAL,MAAa6F,KAxBjBgI,E,+MAjEyB,UAAX7N,KAAK,MAAM,Q,GAAzB,GAAc,E,GAAT,IAAA4E,EAAS,MAAW,EAAX,EACLkJ,GAAL9N,KAAgBE,EAAS0E,E,OAD7B,GAAc,E,iCASkB,IAA5B5E,KAAK,MAA6B,YAEhC,MAAAuG,E,GAGF,iB,GAEiC,MAAzBvG,KAAK,MAA0B,YAGvB,MAAK+N,GAAL/N,EAA2BuG,EAAM,KAAGA,EAAM,M,GAA1C,QAAgD,YAA5D,MAAY,E,GACZvG,KAAK,MAAmB4E,E1CxCiqC,KAxDxrC,M,IACL,EAC4B,sB0C+FAA,EAAK,MAAI2B,E1C7FrCjF,QAAQC,IAAIC,E,U0CiGZ,iBACuB,MAAAxB,KAAK,M,GAAL,QAAyB,YAA5C,MAAmB,EAGnB,EAAiB+N,GAAL/N,EAA2BuG,EAAM,KAAGA,EAAM,M,GAClDyH,IAAgB,IAChBhO,KAAK,MAAmB,K1CnDomD,KAxD/nD,O,IACL,EAC4B,iC0C0GegO,EAAY,OAAK,EAAK,MAAIzH,E1CxGrEjF,QAAQC,IAAI,E,U0C6GZ,iBAEuB,MAAAvB,KAAK,M,GAAL,QAAyB,YAA5C,MAAmB,EACnBA,KAAK,MAAmB,KtCOuB,MAAL,KAAK,MsCNpC,EtCUX,GAAL,EAFE,G,GsCRc,QAA4C,YAAvD,MAAW,E,GACa,IAApB+E,EAAK,MAAkB,Y,G1C9D6lE,KAxDvnE,M,IACL,EAC4B,sB0CuHA,EAAY,MAAIA,EAAI,KAAGwB,E1CrHnDjF,QAAQC,IAAI,E,C0CsHRvB,KAAK,MAAL,GAA0B+E,E,SAI9B,iBAEiC,MAAzB/E,KAAK,MAAL,C,G1CxE65E,KAxDh6E,M,IACL,EAC4B,yB0C+HQA,KAAK,MAAiB,MAAIuG,E1C7H9DjF,QAAQC,IAAI,E,C0C8HJvB,KAAK,MAAmB,I,kCAUhC,4D,+FInIJA,KAAK,KAAOqB,EAGZrB,KAAK,KAAa,IAAAiO,GAAsB,GAALjO,OACnCA,KAAK,KAAU,IAAAkO,GAAmB,GAALlO,OAC7BA,KAAK,KAAc,IAAAmO,GAAiB,GAALnO,O,KAG/BW,G,iBAA6D,K,mBAAE,OAAoBoB,E,OAAmB,G,8BAOtG7B,EAAQ8J,YAAchK,KAAK,K,YA9Bd,IAAI,EAAJ,O,GAAA,iC,CAgCR,CAALA,MAAgB,GAAOE,G,YA7BV,IAAI,EAAJ,O,GAAA,8B,CA8BR,CAALF,MAAa,GAAOE,GACf,GAALF,MAAiB,GAAOE,GAExBA,EAAQ8J,YAAc,C,8BAOjB,GAALhK,MAAiB,GAAqBuG,E,mEClE9C,gE,mCAAA,+C,qCAAA,kB,KAAA,uD,OAAA,0C,kECgBQ,MAAgBvG,KAAK,MAAK,MAAsB,UAAsC,UACtFE,EAAQgK,UAAkBpE,EAAY,EAAU,E,iGCgBrB,I,SAAV9F,KAAK,MAAK,O,KAGvB,E,EAAS,a,WAGT,E,EAAU,a,mBANd,Q,oBAWAE,EAAQ8E,UAzB+B,U,KA0BvC9E,EAAQiF,KApByB,aAqBjCjF,EAAQqF,UJCs29O,SIA929OrF,EAAQkF,SAAgBsI,EAjChC,IAE+C,KAgCvCxN,EAAQqF,UJDm38O,O,8FKd338O,I,EAAA,EAA6B,UACX,EAAAU,GAALjG,EAA2B8F,GAAnCZ,EAAa,EAAb,KAAGJ,EAAU,EAAV,KAGR,EAAY5E,EAAQ8J,YACMhK,KAAK,O,OAhBiB,IAgBNiK,G,EAAiCA,EAA3E/J,EAAQ8J,YAAc,EACtB9J,EAAQgK,UAAkBpE,EAAYZ,EAAQJ,GAC9C5E,EAAQ8J,YAAcC,C,8BAOtB,MAA6B,UAEvB,EAAA1D,E,GAGF,iB,GACQvG,KAAK,MAAW,Y,GAGpBA,KAAK,MAAiBoO,GAALpO,EAAe8F,EAAOS,EAAM,KAAGA,EAAM,MlDA/C,KA3BN,M,IACL,EAC4B,qBkD0BAvG,KAAK,MAAU,KAAGuG,ElDxB9CjF,QAAQC,IAAIC,E,UkD4BZ,iB,IACSxB,KAAK,MAAW,Y,GAGrBA,KAAK,MAAiBoO,GAALpO,EAAe8F,EAAOS,EAAM,KAAGA,EAAM,OACjDvG,KAAK,OlDCD,KAtCR,M,IACL,EAC4B,6BkDmC4BuG,ElDjCxDjF,QAAQC,IAAI,E,UkDqCZ,iB,IACSvB,KAAK,MAAW,Y,GlDAhC,KA1CY,M,IACL,EAC4B,qBkD0CDuG,ElDxC3BjF,QAAQC,IAAI,E,CkDyCRvB,KAAK,OAAY,E,YlDWogB,KA5CphB,MAILsB,QAAQK,KAFoB,qBkDiEhC,I,SACiB,EAAK,MAAK,O,KAGvB,E,EAAW,EAAK,MAAK,MAAK,kB,WAG1B,E,EAAY,EAAK,MAAK,MAAK,kB,mBAN/B,QAQA,EAAUpB,OAAO8N,SAASC,KNbwF,sBMKhH,EAUKC,OAAQ,OAAOb,GAVpB,EAWKa,OAAQ,MAAMC,GAFrB,IAIA,EAdsB,oCNVnB,E,G5CbulC,KAxDjlC,M,IACL,EAC4B,sBkD8FRC,ElD5FpBnN,QAAQC,IAAI,E,CkD6FT,MAAPhB,OAAOmO,KAAKD,EAAW,UAAU,MAA1B,KAA0BE,O,CAnDpBC,CAAL5O,K,SAIJ,kBACIA,KAAK,OAAY,ElDD6B,KAlD7C,OAILsB,QAAQC,IAFoB,sB,iDCtBpC,WAgEiD,EAATmB,SAAS2L,SAAU,QAAV,EAAU,KAAV,EAAUQ,S,EAAU,MAAV,EAAU,K4C1B+uB,E1CmKtvB,gBFzItB,O,EAA0C,MAAb,EAAa,QAAb,EAAuB,SAAV,YAA1C,IDzDc,KAyBzC,MAILvN,QAAQK,KAFoB,mB,SC8Ba,EAAU,E,IA3D3DpB,OAAA,SAAkB,GAClBqC,KAEA,S,EAAgB,c,2CAAhB,E,uEwDhB8B,IAAvB,YAAW,SAClB,YAAW,OAAU,YACjB,OAAY,MAAL,GAA4B,MAAf,EAAC,WAAsB,EAAC,UAAU,YAAe,UAAS,UAAU,S,QAFvE,IAAd,KAAI,OACb,KAAI,KAAQ,cACV,OAAa,WAAJ,IAAuB,MAAJ,IAAmB,MAAJ,IAAmB,EAAJ,GAAU,C,4MCuC3D,OAZD,SAAmC,KACnC,EAAQ,GAAK,KAAM,G,eAmCqB,OAApC,QAAK,KAAO,G,GAAK,mBAAe,I,iBAGZ,OAAxB,EAAU,EAAS,K,eAGiC,OAAhD,QAAK,KAAO,GAAoC,KAAJ,I,2BCu9uBxD,O,0BA9NA,EAAO,EAAO,GACd,MAAY,EACI,mB,OAAhB,EAAgB,IAAX,MAAW,K,GAAA,SACN,IAAF,EAAE,GAAQ,GAAG,EAAO,EAAO,KAC3B,EAAQ,GAAK,GAAS,GAEnB,QADI,GAAP,EAAqB,EAAS,E,CAKtC,OAFI,GAAS,GAAK,EAAQ,GAAO,EAAO,EAAO,GAC/C,EAAO,EAAO,GACP,C,CAoNA,GAAO,KAAiB,EAAW,EAAQ,EAAS,EAAO,EAAW,GAAW,U,4BvDpmoBxF,O,0BAtBA,EAAO,EAAO,GACd,MAAY,EACI,Q,OAAA,QAAX,MAAW,M,IACN,IAAF,EAAE,GAAQ,GAAG,EAAO,EAAO,KAC3B,EAAQ,GAAK,GAAS,GAEnB,QADI,GAAP,EAAqB,EAAS,E,CAKtC,OAFI,GAAS,GAAK,EAAQ,GAAO,EAAO,EAAO,GAC/C,EAAO,EAAO,GACP,C,CAYA,GAAO,KAAiB,EAAW,EAAQ,EAAS,EAAO,EAAW,GAAW,U,gCADrF,oBAA4D,MAA5D,aAAwF,IAAxF,aAAoH,IAApH,cAAqI,GAArI,cAAoK,OAApK,cAA8M,MAA9M,iB,kBwDt8DH,OAAW,EAAO,EAAc,EAAkB,C,kBA7ElD,OAAW,EAAO,EAAc,EAAkB,C,wBClzClC,G,+BAAhB,W,2ICRsF,OAA1C,IAAM,EAAO,aAAmB,GAAF,E,+B1DuD9E,IA2HoB,EA3HpB,OA2HoB,YAAX,MAAW,M,G0DnJ4D,GAYilG,EAZ9kG,KAAO,G1DmJ5D,CAAoB,EAAO,E,SACrD,EAAO,I,C0DpJoF,OAA7B,C,2EAxHlE,KAkFiC,eAoCS,c,2EnBpEK,O,iCA0JtB,OAAb,EAAK,IAAO,EAAC,C,sBAxMsB,yC,8KeQ/B,I,EAAA,EAAc,EAAI,GAAS,EAAQ,M,GAC/B,S,EAAmC,M,CAEnC,I,EAAA,EAAkB,W,GACC,MAAf,E,EAAqB,OAAgB,EAAS,O,CAC9C,MAAW,EAAQ,S,EACf,SAAgC,OAAgB,EAAS,GACzD,OAAgB,OAAgB,EAAM,GAAU,E,KAN5D,Q,qCK8D+B,qB,2DAgDvC,MAAU,EACV,EAAW,IACJ,C,MACG,EAAI,KAAJ,yB,GAAA,QAAgC,OAAO,EAA7C,EAAM,EACN,O,mBAKuB,OAA3B,QAAI,EAAQ,MAAQ,E,kBAsBhB,OCyHkD,IAAV,GAlGG,GDvBhB,GAAR,GAA0B,EAAG,KAAG,C,kBA9D3D,YACA,W,kBAhEA,Y,QAEqC,gBAA8C,EAAQ,KAAgB,EAA1E,W,gBArCiB,W,eE0C6B,O,yOCpC/E,OAAO,GAAI,GAAI,EAAG,GAAK,GAAI,EAAG,GAAvB,EAA2B,E,kBAXlC,MAAU,EAAI,EAAd,EACA,OAAW,GAAO,EAAG,EAAS,EAAM,EAApC,C,4BCmQ2B,cACa,W,SXyJU,KAAW,IA1ZjC,GA0Z6C,IAAvB,KAAW,IAxZjD,GAwZ6D,K,ECva5E,KAAI,SAAY,KAAI,IAAK,EAAG,IAAO,E,uBW2BxB,UAAK,EAAO,EAAO,EAAG,GAAG,EAAc,GAAU,IAAS,IAAW,EAA/B,I,GDkSE,EAAM,GAAS,G,mFA3SnE,I,sBCsCmD,qB,6CAhC/C,cANA,YACA,YACA,YACA,YACA,YACA,YjDUY,IADX,UAAK,UACV,UAAK,UAAK,WAIF,MAAM,GAAiC,GiDPE,2DxB2H/B,Q,GAAd,EArH+D,G,GAqHjD,QwBxHG,gBxBwHjB,EArH+D,G,sByBiD9B,iBAAS,EAAG,E,kCAhCM,aAAe,EAAO,EAAc,E,oBChBb,cAAjB,YACzB,YACD,UAAI,UAAO,EAAG,GAAS,EAAU,GAAS,EACjD,UAAI,UAAS,EAAW,S,mFCoCpD,KAQoB,IAAR,EAAW,MAAa,GAA0B,0B,GAClD,IAAY,UAAW,MAAa,GAA0B,0EAM9C,YAKD,U,yBLnDvB,EAAO,E,EAAS,GAAS,EAAK,EAAS,EAAM,GAAiB,EAAK,EAAO,GAA7B,M,MAC7C,EAAO,GACC,MAAa,GAA0B,iB,EAD/B,GAAS,EAAK,EAAS,EAAM,GAAiB,EAAO,EAAxB,GAA8B,GAA9B,C,CAEhD,Q,CKgD0B,CAA0B,EAAO,EAAc,GAK/C,W,uECjBN,MAAb,EAAqB,IAAO,EAAU,IACtC,UCgQgB,iB,EDhQhB,ICgQ2B,GAAY,E,YC5TL,OAA7B,aAAuB,GAAvB,EAAuB,U,CD4TsC,WDhQtC,IAAO,GACnC,gBAAmB,KAAO,EAAP,KACX,IAAe,GAAR,G,uBGkJf,oBAAQ,IAAO,OAAO,E,IACrB,EAAY,OAAO,EAExB,MAAqB,GAAL,GAChB,EAAuB,GAAN,GAEjB,QAAO,oBAAa,KAAc,G,OCpNgB,G/BoB4N,GAAqlR,GAA9jR,c+BpBvO,IDoN5B,OCpNgB,G/BoB4N,GAAknR,GAA3lR,c+BpBvO,I,oBZgmChB,MAH1C,mB,sBA5CD,oBAA2D,GAA3D,cAAoF,G,kBACvF,OAAW,GAAc,mBACrB,KAAQ,EAAQ,EAAY,MAAQ,GAApC,M7D5vB8o/B,EA7Htj/B,QA6Hok/B,EAAQ,E,C6D0vBrq/B,S,CA6CC,GAAQ,EAAR,EAA4B,EAA5B,IAA2C,EAE3C,KAAQ,EAAO,EAAG,MAAQ,GAA1B,OAAyC,C,0BA/K7C,I,IAAA,EAAmB,E,cJjJnB,OAAsB,OAAgB,EAAM,GAAI,E,CIoJ5C,CAAW,GAAX,EAAwB,OAA2B,GAAT,EAAuB,K,EAFtD,GAAX,EAAyB,G,EAAa,GAAT,EAAsB,Oap8BvD,OAAS,EAAO,I,Gbw8BZ,oBAAkB,mB,CACJ,+B,GAAA,EAAd,MAAc,KAAd,GAAc,GAAd,E,GAAK,MAAS,E,GAAA,QACA,GAAN,EAAoB,EAAG,EAAM,EAAa,GAAN,GAAc,GAClD,OAAO,C,OAFf,IAAc,E,MAKA,+B,GAAA,EAAd,MAAc,KAAd,GAAc,GAAd,E,GAAK,MAAS,E,GAAA,QACA,GAAN,EAAwB,EAAG,EAAM,EAAa,GAAN,GAAc,GACtD,OAAO,C,OAFf,IAAc,E,CAKlB,OAAO,C,8BAjBH,sBAAmH,GAAnH,e,gBAjlBmB,OAAV,GAAL,GAAc,EAAC,C,6BA0blB,EAAc,GAAO,EAAa,GAAO,GAAkB,GAAL,GAAc,EAA3B,IAAuC,GAAoB,GAAN,GAAe,EAA7B,GACjF,OAAO,EAGG,Q,GAAd,EAAsB,E,GAAjB,MAAS,E,GAAA,SACoB,GAAzB,KAAK,EAAa,EAAlB,GAAgC,KAAM,EAAc,EAApB,GAA4B,GAC7D,OAAO,C,OAFf,EAAsB,GAItB,OAAO,C,+BzBlvB+B,YACX,c,4EjCtDyB,Q,gBAE3C,Q,gBA0CJ,OAHK,aACF,GAAc,EAAM,KACZ,I,4EAyCZ,W,gBAtFR,KAGI,W,gBAmGyB,OAAlB,OAAQ,E,+BwEhH+B,KAAM,OAAN,GAA9C,U,ElCKqF,CAAM,EAAN,M,6BmCYrF,YACA,W,4KCqCqB,sBAGA,qBAGE,YAGD,Y,sEC1CtB,YAA8C,IpCG7C,EoCHiC,QpCGqB,EACrC,UAGQ,GACpB,E,wBoCAN,ECtB2C,GDuB3C,EAAe,EAAW,IACnB,EAAS,KpCM6E,EoCLvE,KAAK,EAAS,KACpC,OAAO,C,eE/BgF,a,gBC8GpE,YAEO,YAKD,Y,eA/GwD,cACnD,W,6CCMQ,YAGb,W,eAqB6C,a,4BAezC,a,eA5CsD,cAwC/C,eA+CS,c,eChGmC,a,qDJM7B,EAAR,GKSO,UAAK,G,yBAZkC,cAAlC,WACrB,W,oDCQpB,YAAiB,a,qCA8BwB,WAAvD,WACI,OAAmB,EACnB,OAAgB,EAAY,I,CAMT,CAAK,Q,oBAAL,G,6CAUuC,QrEoBnC,GAAmB,GAtD1C,MAAM,GAAiC,GqEoCN,8BAA4B,I,KrEqBrE,GACQ,GA1DA,MAAM,GAAiC,GqEqCX,6BAA2B,I,yDAsBQ,c,yCCrDR,WAA3D,WACI,OAAM,GAAgB,EAAiB,E,CAGA,CAAK,EAAiB,EAAtB,G,kCC6DpB,WAAsB,OAAS,GAAY,I,GAA3C,QAAoD,OAAO,KAA9E,MAAmB,E,GACf,eASA,OAAa,GAD0B,EAC1B,EAAiB,GAR9B,MAAgC,E,OAC5B,OAAS,GAAO,EAAM,KAAK,GACpB,EAEA,I,iC/ByCR,uBAsmCX,EAAgB,IAAX,MAAW,K,GAAA,IAtmCL,EAsmCK,E+BtoCW,OAAS,GAmE41/B,EAnE/0/B,KAAK,G/BsoC5B,CAAoB,EAAO,E,SACrD,EAAO,I,C+BvoCqD,OAAxD,C,kBA8DA,MAAmB,OAAW,GAC9B,YAA4B,IAAjB,EAA4B,KAAU,C,4BA1DjC,aAE2B,UAAb,OAAa,KAAK,QAC7B,aAEa,eACd,aACE,aACqB,c,gBA9GR,YAEH,oBACT,W,gDCfzB,YAS2B,W,yBCbY,GAAM,EAAN,GAAvC,W,wFCAA,W,oBA+BA,aAAc,GAFd,YACA,W,sBAcgC,aAAoB,QAClB,mB,sEA1ByB,aAAc,G,MhDJzB,EAAnB,EAAmB,WAAyB,EAAX,MAAd,EAAc,KAAd,EAAc,WgDKiB,W,6CCoD3E,O,SCrDkG,EAAvC,GAAiB,MA6DwvB,GA7DvuB,M,EDqDvE,GAAtB,E,qBAtEiF,Y,gBAGS,MrB0T9C,iB,EqB1T8C,IrB0TnC,gB,qBqBpTuC,mC,gBAGV,kC,gBAGG,kC,gBAGN,kC,gBAGM,kC,gBAGG,kC,gBAGD,qB,gBAGC,kC,gBAGQ,yB,gBAGS,qB,gBAGH,qB,gBAGF,qB,gBAGI,qB,gBAGN,qB,gBAGF,qB,gBAGU,qB,gBAGG,qB,4BjD1DlF,OiDClB,mBAA8D,MAAM,I,MjDI3E,OiDDU,mBAAiE,SAAS,IAGzE,e,MjDEmF,QiDCnF,mBAAmE,UAAU,I,MjDIvD,OiDDzB,mBAA+D,OAAO,I,MjDK7D,OiDFR,mBAAgE,QAAQ,I,MjDM9D,OiDHZ,mBAA8D,MAAM,I,MjDQ7D,OiDLL,mBAAgE,QAAQ,I,MjDWrF,OiDRc,mBAAiE,SAAS,I,MjDWE,MiDR7E,mBAAkE,QAAQ,I,MjDQmJ,OiDL5N,mBAAiE,SAAS,I,MjDKsS,MiDF7W,mBAAmE,YAAY,I,MjDEgc,MiDC5gB,mBAAsE,eAAe,I,MjDD4lB,YiDIprB,mBAAyE,YAAY,I,MjDJiwB,UiDOt1B,mBAAuE,YAAY,I,MjDPq6B,WiDUv/B,mBAAyE,aAAa,I,MjDVmkC,WiDa3pC,mBAAuE,WAAW,I,MjDbuuC,MiDgBxzC,mBAAmE,YAAY,I,MjDhBu4C,aiDmBr9C,mBAA2E,aAAa,I,MjDnBuiD,aiDsB9nD,mBAA4E,cAAc,G,uDEzDjH,OAAW,MAAY,QAAQ,G,YAQwD,I,SAAT,EAAS,Q,KACvF,E,EAAK,GAAW,EAAS,I,WACzB,E,EnDCY,K,gBAEH,OmDDZ,Q,CAXO,CnDGH,GmDDG,GnDEyC,E,mBmD6CzC,IAAW,OAAc,OnDfusC,UmDiBpuC,I,EAAA,EnDjB4xC,EmDiB1vC,W,GAEX,MAAZ,EAAY,C,SACQ,MAAvB,EAAS,SAAc,CACvB,MAAa,OAAiB,GAC9B,WAAsB,E,EACtB,C,QAEA,EAAS,S,EANY,C,QASzB,OAAiB,GATrB,Q,mECzCuB,UAAK,I,uBAEC,eAAgB,IAAZ,EAAuB,EAAa,E,oBrBqCrE,E/BjB40D,GAArtB,GAA4uB,c+BkBn2D,OAAW,EAAU,OAAS,EAAG,EAAU,KAAU,E,gBzE4Qb,W,0B+FhP6B,OAArE,KAAkB,EAAY,EAAO,EAAa,EAAQ,E,kBCjEW,OAAnB,EAAc,EAAK,C,gBAiEjE,OtD9CqyF,OAAa,aAAa,E,sBsDsD5xF,YAMA,gBAKS,gBAKA,gBAKD,gBAKA,gBAKJ,gBAKA,gBAMJ,YAMD,Y,uDAtI1C,KAEqB,U,2OCRY,YAAkB,W,gBLOd,MAAM,MAAN,EAAM,QAAN,GAA0B,OAA1B,QAAqB,OAArB,C,kBMFvB,QAAG,IAAM,OAAO,EAAb,E,GAAb,GAAU,E,GAAL,MAAK,UACN,EAAM,GAAK,C,OADf,IAAU,GAGV,OAAO,C,4BA8BK,W,eClCR,O,KAAA,C,eAEA,O,KAAA,C,eAEA,O,KAAA,C,eAEA,O,KAAA,C,4BzD4BoT,GAAY,EAAK,KyDSxR,EAClC,GAAJ,IAGX,KAAW,GAAK,EACT,Q,KAtCH,IAsCyB,IAAK,KAAS,MAA3C,E,iCAhDc,gBAAY,GzDIqB,uBAAa,M,EAAM,EAG1C,iBAAa,MAAb,I,EAAkE,iBAAW,M,EAHnC,EyDGlE,KAAW,IAAK,EAChB,EAAmB,IAAf,KAAS,GAAS,EAAO,E,E1DsBtB,E,E0DpBa,EAAI,M,4BCXb,GAAS,GAAT,C,MCD2D,E3DC1E,EAES,WAAW,G,Q2DOZ,EAAY,E,GAAZ,G,OAA8B,EAAY,O,EAC1C,MAAM,GAA0B,sBAAoB,G,cCOW,O,cAZwC,OhDhBtG,GAAK,IAAM,E,CiD4XmC,CAzV/C,GAAY,IAsPkC,MAlQI,E,MFA1C,CAAL,E,QDTH,KAAE,GAHN,Q,gBA4BgD,uBAAX,C,gBAlBrC,OAAW,GAAS,G1DLwD,EAG9E,O0DKM,EAAE,I,gBIhBuF,O,EAA/B,K,EAAM,I,EAAK,I,EAAzB,E,EAAA,K,EAA6B,GhDqhvB1E,O,EgDrhvB6C,OhDqhvB7C,EAA6D,MAA7D,aAAyF,IAAzF,aAAqH,IAArH,cAAsI,GAAtI,cAAqK,OAArK,cAA+M,MAA/M,EgDrhvBuC,EhDqhvBvC,a,iCgDrhvB4E,UAAS,E,2BC6BpF,EAAI,E,GAAK,O,GACT,EAAI,E,EAAK,O,GAET,IAAM,G,SACQ,IAAN,E,EACA,M,KAEA,E/DZX,E+DYoC,E,EACrB,I/DZJ,E+DY2B,EACvB,EACO,EAAK,GACZ,EAEA,C,YAKZ,GAAM,EACE,GAAM,EAAG,EAAO,GAEhB,EACX,Q,kBA1BA,OAHG,EAAI,GAAK,EACT,EAAI,EAAK,EACD,C,qBCuBmC,yBAGL,GAArC,CACD,MAAW,GALU,WAKE,KAAW,SAAqB,GACvD,EAAiB,IpD7DrB,OoD8DI,QAAmB,EACnB,cAAwB,EACxB,OAAa,eAAe,EARe,uBAQsB,E,CAErE,OhEnBiqB,sB,gBgEbpqB,OAJQ,MAAL,EAAc,O,YpCoPwD,QAApC,GAAU,IAAM,EAAkB,E,CoCnPpE,CAAW,GAAO,QhEN8B,EAAE,U,mBgEkBvC,MAAP,EACA,OAAO,EAEE,I,gBAAS,G,IACjB,S,EAAgB,mBAAuB,EAAI,SAAY,EAAI,WAAiB,GAAkB,G,UAC9F,W,EAAa,GAAkB,G,UAC/B,S,EAAW,GAAkB,G,UAC7B,U,EhEzBgE,EgEyBtB,EAAO,E,gBAC1C,GAAkB,OAAa,IAL3C,Q,gBAwBA,MAAW,EAED,IAAG,EADK,EAAI,OACF,EAAP,E,GAAb,GAAU,E,GAAL,MAAK,UACN,MhE1Bo5B,EgE0Bp3B,WAAW,GAC3C,EAAO,IAAO,IAAK,EAAnB,C,OAFJ,IAAU,GAIV,OAAO,C,yBApEK,MAAR,EACe,MAAR,EAEC,MAAR,IAImB,iBAAV,GAA+C,mBAAjB,EAAK,OACpC,EAAK,OAAQ,GAGrB,GAAS,EACF,GAAS,EAGG,iBAAV,GAAwC,iBAAV,EAChC,IAAS,IAAkB,IAAT,GhEJuB,EgEIO,GhEJkB,EgEIO,GAE7E,IAAS,E,kBAwDqB,MAAjC,MAAY,kBACZ,MAAY,kBAAkB,EAAU,GhEpCiuC,EgEsCzwC,OAA+C,IpDrFnD,OoDqFmD,K,oBAenD,MAAY,KAAK,G,oBAKZ,GAAwB,EAAQ,WAAhC,C,SAE8B,MAAX,EAAW,C,SAEX,OAAZ,GAEA,MAAO,MAAP,EAAO,KAAP,EAAO,W,EAAP,aAAqB,EAArB,C,aAGA,E,WAED,EATP,W,CAWC,GAAwB,EAAQ,WACjC,QAAc,GAElB,OAAa,OAAS,eAAe,GAAO,YAAY,I,CApBxD,CAAiC,EAAO,EAAS,E,kBA9DjD,OhERsC,OAAS,eAElD,GAAG,eAAe,E,sBiEA6D,OAAxB,MAAL,E,WAP/C,MAAM,I,CAOoD,G,EAAiB,EAAC,C,eAX5E,MAAM,I,sB3DDiC,gCAKA,gCAMA,YAMD,Y,yDA1B1C,KAGI,cAFA,WACA,U,e4DgXI,O,KAAA,C,eAEA,O,KAAA,C,eAEA,O,KAAA,C,eAIA,O,KAAA,C,eAEA,O,KAAA,C,0BAvSA,KAAW,GACX,OAAO,EAGX,MAAc,MACd,EAAqB,GAAN,GAEf,OACI,IAAY,GAAY,GACvB,GAAW,EAAY,EAER,GAAhB,KAAS,KAAuB,EACxB,C,uBAOZ,MAAU,QAAU,GAApB,EACA,EAAmB,MAAT,MACV,EAAU,QAAS,GAAnB,EACA,EAAkB,MAAR,MAEV,EAAU,EAAM,MAAU,GAA1B,EACA,EAAyB,MAAf,EAAM,IAChB,EAAU,EAAM,MAAS,GAAzB,EAGA,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EAYV,OAFA,GAFA,MADA,GAFA,MADA,GAFA,MADA,KAAO,GANiB,MAAd,EAAM,KAMhB,QACgB,GAAhB,OAEO,EAAM,EAAb,QACgB,GAAhB,OAEO,EAAM,EAAb,QACgB,GAAhB,OAEO,EAAM,EAAb,KAEO,QANP,GAAc,QAMO,IATrB,GAAc,QAQd,GAAc,QAC4B,IAH1C,GAAc,O,kBAM+C,O,KAAvB,KAAI,EAAM,K,0BAG5C,MACA,OAAO,K,GACM,GAAN,GACP,OAAO,K,GAGP,KAAW,MACX,OAAiB,GAAN,GAAe,KAAe,K,GAC5B,GAAN,EAAiB,MACxB,OAAW,MAAS,KAAe,K,GAGnC,MACA,OAAiB,GAAN,GACE,GAAT,MAAwB,GAAN,IAEO,GAAhB,GAAT,MAAkB,I,GAET,GAAN,GACP,OAAgC,GAAzB,KAAe,GAAN,K,GAIhB,KAAS,OAAsB,GAAN,EAAe,MACxC,OAAO,GAAW,MAAmB,GAAN,IAMnC,MAAU,QAAU,GAApB,EACA,EAAmB,MAAT,MACV,EAAU,QAAS,GAAnB,EACA,EAAkB,MAAR,MAEV,EAAU,EAAM,MAAU,GAA1B,EACA,EAAyB,MAAf,EAAM,IAChB,EAAU,EAAM,MAAS,GAAzB,EACA,EAAwB,MAAd,EAAM,IAEhB,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EAqBV,OAnBA,MADA,IAAO,IAAM,GAAb,KACgB,GAAhB,KACA,GAAc,MAKd,GAHA,MADA,IAAO,IAAM,GAAb,KACgB,GAAhB,QAEA,GADA,GAAc,OACP,IAAM,GAAb,KACgB,GAAhB,KACA,GAAc,MAQd,GAHA,GAHA,MADA,IAAO,IAAM,GAAb,KACgB,GAAhB,QAEA,GADA,GAAc,OACP,IAAM,GAAb,KACgB,GAAhB,QAEA,GADA,GAAc,OACP,IAAM,GAAb,KACgB,GAAhB,KACA,GAAc,MACd,OAAO,IAAM,GAAM,IAAM,GAAlB,GAAwB,IAAM,GAA9B,GAAoC,IAAM,GAAjD,KAEO,OAAK,GAAQ,GAAM,GAD1B,GAAc,QACyB,GAAM,E,0BAInC,GAAN,GACA,MAAM,GAAW,oB,GACV,MACP,OAAO,K,GAGP,KAAW,MAAX,C,GACU,GAAN,EAAiB,OAAc,GAAN,EAAiB,MAC1C,OAAO,K,GACM,GAAN,EAAiB,MACxB,OAAO,KAGP,IACA,E,mBAiER,MAC0B,GAAZ,E,OACC,IAAX,EACO,EAEH,EAAU,GACH,OAAK,OAAQ,EAAU,OAAS,EAAa,SAAU,GAAK,EAAf,GAAvB,GAEtB,OAAK,EAAG,QAAS,EAAU,GAAnB,G,CAzEkB,C,mBA+EzC,MAC0B,GAAZ,E,OACC,IAAX,EACO,EAEH,EAAU,GACH,OAAM,QAAS,EAAV,EAAuB,QAAU,GAAK,EAAf,GAA0B,OAAS,GAE/D,OAAK,QAAU,EAAU,GAApB,GAA6B,OAAQ,EAAG,GAAO,E,CAxF5C,GAAW,GACJ,GAAI,GAAiB,G,OAChC,GAAP,EAAkB,MACD,GAAN,GAAoB,KAAS,KAG1B,GAAP,EADG,KAAe,GAAN,EAAe,IACZ,GAAI,G,IAGrB,GAAN,EAAiB,MACxB,OAAO,K,GAGP,MACA,OAAiB,GAAN,GACP,MAAS,GAAU,GAAN,IAEO,GAApB,MAAS,GAAI,I,GAEJ,GAAN,GACP,OAA2B,GAApB,KAAU,GAAN,K,IAQf,MAAU,KACV,EAAU,EACC,GAAJ,EAAuB,IAAnB,C,IAGP,MAAuB,GAAJ,GAAuB,GAAN,GACpC,EAAc,KAAO,IAAI,EAAK,KAAO,MAAM,IAI3C,EAAW,KAAO,KAAK,KAAO,IAAI,GAAW,KAAO,KACpD,EAAgB,GAAQ,GAAI,EAAS,KAAO,IAAI,EAAK,EAAO,IAI5D,EAAgB,GAAW,GAC3B,EAA0B,GAAV,EAAmB,GAClB,GAAV,IAAoC,GAAV,EAAsB,IAGnD,EAAsB,GADtB,EAAY,GADZ,GAAW,GAEoB,GAKrB,GAAV,KACA,EAAY,MAGhB,EAAU,GAAJ,EAAQ,GACd,EAAU,GAAJ,EAAa,E,CAEvB,OAAO,C,gBA7QiE,O,KAmWxC,WAnWL,M,YAEiE,O,KAAnD,OAAO,EAAG,MAiWnB,WAjWyD,K,CAFrC,G,kBAmE0B,O,KAAtC,QAAQ,EAAM,KAAQ,QAAO,EAAM,G,0BA5DvE,EAAQ,GAAK,GAAK,EAClB,MAAM,GAAW,uBAAqB,G,GAGtC,MACA,MAAQ,I,GAGR,O,GACI,KAAW,MAAX,CAGA,MAAgB,GAAQ,GACxB,EAAU,KAAI,GACd,EAAkC,GAApB,GAAJ,EAAa,GAAoB,GAAM,KAEjD,OAAW,GAAJ,EAAiB,GlEKgL,EAAgB,SAAS,E,CkEHjO,MAAQ,IAAY,GAAT,MAAsB,E,KAMzC,MACa,IAAT,EAAc,GACd,GAAS,GAAM,EACf,GAAS,GAAM,EACf,GAAS,GAAM,EACP,EAEZ,EAAmB,GAAW,KAAO,IAAI,EAAkB,IAE3D,EAAU,EACV,EAAa,KACN,CACH,MAAa,EAAI,GAAI,GAErB,EADiB,GAAJ,EAAoB,GAAP,EAAgB,IAAe,KlEhBw2B,SAAS,G,GkEoBl6B,GADR,EAAM,GAEF,OAAO,EAAS,E,KAET,EAAO,OAAS,GACnB,EAAU,IAAK,EAEnB,EAAS,EAAS,C,iBA8Q0C,O,KAArC,OAAK,EAAW,EAAQ,GAAG,EAAQ,E,gBArQ7B,O,KAAR,MAAO,C,gBAFU,O,KAAb,IAAR,OAAoB,IAAP,K,gBAIA,O,KAAD,IAAL,EAAR,M,gBANa,O,KAAZ,M,kBAU+B,O,KAAlB,KAAQ,GAAS,C,2BAwQnD,ICrV4C,EDsV5C,OAAO,K,SACA,IAAS,mBAChB,OAAO,K,GACA,EAAQ,GAwBa,mBAvB5B,O,KA+BA,E,GA9BO,EAAQ,EACf,OAA0B,GAAnB,IAAY,IAEnB,MAa4B,WAZ5B,OAAO,OACH,GAAY,EAAU,EAAW,GACjC,GAAY,EAAQ,EAAU,G,kBAhRqB,O,KAAlB,KAAQ,GAAS,C,kBAES,O,KAAnB,KAAQ,IAAU,C,0BAgSnD,GAAQ,G,EAET,GAAQ,G,EAEJ,IAAQ,G,EAEN,QAAK,EAAI,Y,EAET,OAAK,GAAG,Y,EAEN,GAAQ,U,gBN7XsD,OAAxC,gBAAW,EAAE,K,YAgB5D,OAHG,EAAI,WAAc,WAClB,GAAI,YAAe,WACX,GAAY,EAAG,E,CAf+C,CAAY,E,gBAUpC,OAAV,GAAQ,E,oBQwB5C,WAAY,EACZ,OAAO,GAAU,EAAO,EAAO,EAAO,EAAO,EAAO,E,uClBQK,MAG3D,M,EAA6C,MAE3C,MlDhD8C,EkDgDD,MAAkB,M,EALvB,KlDrC+B,E,2B4BmBvE,OAAO,GAAgB,QAAQ,EAAM,EAAY,EAAqB,EAAmB,EAAc,E,4BAcvG,MAAO,ChBjDD,KAAM,EAAM,WAAY,EAAM,YAAsB,cAAT,GAAuB,OAAK,EAAW,WAAY,GAAc,GAAI,oBAAqB,EAAqB,kBAAmB,EAAmB,aAAc,EAAc,cAAe,EAAe,cAAU,EAAW,gBAAiB,CAAC,gBAA8B,IAAlB,SAA+C,IAAf,GAAkD,IAAtB,EAAU,QAAgB,uBAAwB,I,gBgB0Qja,O5B5Ny2M,MAAY,QAAQ,E,kB4BiJl3M,QAAI,Y,OAAJ,SACJ,GADI,EACkB,E,qBAxBzB,IAAS,EACT,OAAO,EAGX,MAAe,EAAK,WAEJ,MAAZ,GAAgD,MAA5B,EAAS,kBAC7B,kBAXE,ChBrKR,YAAY,EAAO,uBAAwB,KgBmLnB,I,EAAtB,EAAgC,MAAV,EAAU,KAAV,EAAU,gB,GAEF,MAAnB,GACF,EAAgB,YAAY,GAAuB,GAChC,MAAN,EAAM,WAAN,EAAoB,MAAd,EAAc,KAAd,EAAc,Y,GAApB,QAAmC,OAAO,EAA5D,MAAkB,E,IAChB,EAAgB,uBAAuB,E,MAEvB,SAAiB,GAAjB,EAAwB,MAAxB,EAAwB,KAAxB,EAAwB,Y,GAAxB,QAAuC,OAAO,E,EAChE,GADkB,EACW,E,CANjC,Q,gBA7CA,MAAe,EAAK,WAEJ,MAAZ,GAAgD,MAA5B,EAAS,kBAC7B,kBA0BE,ChBrKR,YAAY,EAAO,uBAAwB,KgB8InB,IAAtB,EAAgC,MAAV,EAAU,KAAV,EAAU,gB,GAET,MAAnB,G,IACkC,IAA9B,EAAgB,WAChB,OAAO,E,IAGQ,MAAT,EAAS,0BAAnB,EAAU,IAAL,MAAK,SAAS,EAAT,EACU,GAAhB,EAAsC,GACtB,GAAhB,EAAgC,GAAuB,G,EAInC,I,EAAA,KAAiB,GAAO,QAAxB,EAAwB,KAAxB,EAAwB,YAApD,EAAiE,MAAb,EAAa,K7B5C1D,GAmCT,G6BWS,IAAP,OAAwB,MAAjB,E,EAAiB,MACpB,GADG,EACa,GADb,EAEH,YAAa,E,E7BVd,G6BQI,QAGF,EAHE,C,gBA9BK,I,EAAA,EAAL,EAAK,WAAc,MAAd,E,EAAc,MACD,MADb,EACJ,gBADI,EAEJ,cAAqB,GAAL,I,EAFZ,EAIR,eAJG,QAAP,OAAO,QAKG,GAAL,GALE,C,kBAJP,yB,kBAnBA,E5BzD4tD,a4B0D1sD,IAAS,YAA3B,EAAkB,SAAwB,EAAxB,E,GACP,MAAe,G,CAGT,gBAAb,MAAa,EACb,cAAuB,E,EACvB,C,QAJA,EADJ,Q,CAiB4B,CAAL,KAAiC,C,kBAL7B,MAAO,MAAP,EAAO,KAAP,EAAO,uB,GAAP,QAAiC,YAA5D,MAA2B,EAC3B,OAAa,OAAO,yBAAwB,E,gBAJd,kBAA0E,OAA/D,MAAX,EAAW,K5BpEu+D,OAAa,eAA9B,E,gB4BgO//D,QAAO,GAAU,K5BhOm9M,E4BgOz7M,M,gBAd3C,cAFyB,G,IAGpB,S,IACA,S,IACA,U,IACA,W,OAAa,E,eACN,GAAa,EAAK,Q,gBAmB8D,QAA7C,GAAU,IAAsB,iBAAhB,EAAE,M,gBACW,OAAhC,GAAa,EAAG,U,gBACkB,OAAjC,GAAa,EAAG,W,gBAC+C,QAAhE,GAAa,EAAG,cAAsC,cAAhB,EAAE,M,gBACR,OAAjC,GAAa,EAAG,W,gBACqB,OAAnC,GAAa,EAAG,a,gBAEyB,QAA1C,GAAU,IAAsB,cAAhB,EAAE,M,gBADmB,OAAnC,GAAa,EAAG,a,wBAjR9D,OAAO,GAAgB,YAAY,EAAM,EAAY,EAAqB,EAAmB,OAAc,E,0BAW3G,OAAO,GAAgB,SAAS,EAAM,EAAY,EAAqB,EAAmB,EAAc,E,gByCmDpG,MAAkB,OACC,MAAf,GAAuB,IAAgB,GACP,GAAhC,iBAAmC,GAA+B,GAEtE,Q,kCArE8B,YACZ,YACS,YACC,eACG,eACM,e,IAEC,YAAoB,gBAApB,EAAoB,KAApB,EAAoB,KAId,c,qCCqJ/C,6BAAD,EAA0B,MAAzB,EAAyB,KAAzB,EAAyB,KAAqB,OAA/C,QAA2C,EAA3C,C,oBAPC,OAcM,a,wDAAS,gBAlBmB,EAkBnB,IAAc,EAAd,K,8BAAA,gBAAc,EAAd,IAAc,EAAd,K,yBrClK8B,KAAM,OAAN,GAA9C,W,yKAc8C,GAAM,EAAN,GAA9C,W,sGAO8C,GAAM,EAAN,GAA9C,W,qGACiE,GAAM,EAAS,EAAf,GAAjE,W,mDAiD8B,G,+BAA9B,W,+DAC8C,GAAM,EAAN,GAA9C,W,gHAzE8B,oBAA9B,U,CAO8B,IAA9B,W,0BAC8C,GAAM,EAAN,GAA9C,W,4CANiE,KAAM,EAAS,GAAhF,U,CAOiE,CAAM,EAAS,EAAf,GAAjE,W,mDA+B8B,G,+BAA9B,W,+DAC8C,GAAM,EAAN,GAA9C,W,wHAZ8C,GAAM,EAAN,GAA9C,W,qGAyB8B,G,+BAA9B,W,sEA6B8B,G,+BAA9B,W,sEAxB8B,G,+BAA9B,W,yFAgC8C,GAAM,EAAN,GAA9C,W,+FsCnF2C,O3DtBtC,EAAW,C,kB2D4B4C,O3D5BvD,aAAoB,C,inFrDwBb,UAqrDc,SAAW,GAAO,M,KAC5B,MAtrDJ,KAsrDI,W,GiH7rDmD,GjH6rDnD,MiH7rDyD,GjH6rD/C,CAAoB,GAAO,E,QACrD,GAAO,C,CiH9rD2E,OAArB,C,2CjHc/D,OAypD4B,MAAW,GAAO,M,KAC5B,MA1pDlB,EA0pDkB,YAAX,MAAW,M,IiHrqDG,OAoBmwtD,GjHipD3vtD,CAAoB,GAAO,E,SACtD,GAAO,C,CiHtqD0B,OAApB,C,4BAE8B,OAAD,IAAR,Q,mCAIjC,OAFiC,QAAc,KAAM,IAAK,IAAzB,Q,EAA6B,K,YAC3D,OAAI,IAAO,EAAO,oBAA2B,GAAH,E,GADZ,I,uCAQ+B,OAArB,GAAgB,K,8ECyEhD,EAAQ,GAAK,GAAS,EACtB,MAAM,GAA2B,UAAQ,EAAK,WAAS,E,kCAKvD,EAAQ,GAAK,EAAQ,EACrB,MAAM,GAA2B,UAAQ,EAAK,WAAS,E,oCAKvD,EAAY,GAAK,EAAU,EAC3B,MAAM,GAA2B,cAAY,EAAS,cAAY,EAAO,WAAS,G,GAElF,EAAY,EACZ,MAAM,GAA0B,cAAY,EAAS,eAAa,E,iCActE,MAAe,EACL,gBAAL,MAAK,M,EACK,KAAK,GAAY,EAAG,MAAH,EAAG,QAAH,GAA5B,EAAW,GAAiB,QAAiB,EAAjB,GAA5B,C,CAEJ,OAAO,C,kCAIH,EAAE,MAAQ,EAAM,IAAM,OAAO,E,IAEjC,MAAoB,EAAM,IACb,e,IAEL,GAFK,MACO,EAAc,KAE1B,OAAO,EAGf,OAAO,C,gExDTsD,EAAN,EAAM,OAAK,MAAL,EAAK,QAAL,G,EAAA,QAAmB,EAAnB,EAA2B,EAAjC,EAAiC,OAAO,MAAP,EAAO,QAAP,GAAyB,OAArD,GAA4B,QAAqB,EAArB,E,8BACV,OAAf,GAAL,EAAO,MAAG,IAAL,GAAL,EAAY,K,wCAElE,uBACG,KAAE,KAAO,EAAM,OAAO,KAAE,KAAS,EAAM,K,4DA5HlD,QAA6B,MAAtB,QAAc,G,iCAOjB,mBAA2B,OAAO,EACtC,MAAU,EAAM,KAChB,EAAY,EAAM,KAClB,GyDkN4C,GAhNlD,KAgNkD,IAAnB,KAAmB,SAhN9C,G,SzDAM,KAAS,IAKG,MAAZ,KyD4NwC,GA9NS,KA8NT,IAAnB,KAAmB,SA9NqB,G,qCzDgB7D,IAAU,KAAM,OAAO,E,GACvB,mBAAqB,OAAO,E,GAC5B,WAAQ,EAAM,IAAM,OAAO,E,S1DiB/B,MAAN,EAAM,K,MA+mDA,OAAsB,MAAW,GAAO,M,KAC5B,oBAAX,MAAW,M,I0D/nDe,QA6FkhmD,G1DkiDthmD,CAAoB,GAAO,E,SACtD,GAAO,C,E0DhoDH,OAAqB,C,8BAGe,cAAc,GAAW,OAAL,MAApB,EAAoB,KAApB,EAAoB,I,mCAQX,OAAV,GAAR,U,4BAEY,OAAD,IAAR,Q,4BACS,OAAZ,UAAQ,G,mCAgCgD,OAA7C,GAAR,UAAsB,KAAM,IAAK,IAAzB,Q,EAA6B,K,YAAE,YAAS,E,GAAxC,I,mCAE8D,OAAjD,QAAS,EAAM,MAAQ,IAAK,QAAS,EAAM,K,uE0DzE1F,MAAe,EACC,gBAAX,MAAW,M,EACZ,EAAa,EAAS,MAAT,EAAS,QAAT,GAAb,KAAa,QAAuB,EAAvB,GAAb,C,CAEJ,OAAO,C,uCAIH,EAAE,MAAQ,EAAM,K7EHtB,EAkP+G,EAlPjG,E,gEAb2D,QAAnC,qBAAoB,EAAM,G,mCACtC,OAAD,C,mCACM,MAAF,I,4BAEH,OAAD,C,4BACO,OAAJ,C,8BAEmD,OAAlB,EAAS,G,2EAEpC,MAAM,GAA2B,+CAA6C,EAAK,I,4BAIjE,O,sFAxBnB,OAAL,C,4BAIH,MAAM,I,mE8EgBA,OAAT,S,gR1D+DiC,OAAJ,I,gCAC0B,OAAP,C,8BACG,OAAP,C,8BACN,OAAJ,I,mCACvB,OAAD,C,mCACyB,MAArB,uB,oFActC,MAAU,OACH,CACH,QAAI,KAAJ,GAAY,G,GAAM,MAAlB,EnBsCoR,OAAxB,EmBrC5P,MAAW,EAAI,K,KACX,iBAGA,OAAO,KAAK,GAFZ,EAAM,C,iCAQmC,OAAjD,EAAU,UAAK,GAAK,EAAS,GAAY,U,iCAG3B,MAAd,aAAQ,GnBwBgsB,OAAO,UmBvB/sB,MAAc,UAAK,GAAS,GAC5B,OACI,IAAY,UAAQ,KACpB,SAAqC,UAC7B,OAAgB,EAAS,U,kCA8B0D,OAA/F,OAAS,MAAS,iBAAkC,GAAN,KAAgB,W,kBAb9D,MAAU,IACH,C,IACE,KAAS,EAAI,MAAU,OAAO,EACnC,MAAW,EAAI,K,KACX,iBAGA,OAAO,QAAS,EAAT,IAAS,EAAT,MAFP,EAAM,C,EAQgE,CAAN,EAAkB,K,mCAE3B,OAA/B,GAAL,WAA0B,GAAR,WAAkB,C,mCAKxD,MAFN,IAAK,QAAK,GAAI,IAEV,G,0EA1HqD,OAAjB,UAAS,E,8BAC0B,OAAlC,IAAQ,MAAQ,YAAe,C,kFAxCX,gB,wKI0Qc,OAAhC,UAAc,GAAS,E,6BASF,OAA3B,UAAc,I,gGA/HC,QAAD,IAAf,QAAS,G,sFC3H9C,MAAQ,UACR,GAAW,IAAO,EAAd,EACJ,UAAI,UACJ,UAAI,UACJ,UAAI,UACJ,MAAS,UACT,UAAI,EACJ,EAAK,EAAO,GAAM,EAAQ,EAAQ,GAAO,EACzC,UAAI,EAEJ,OADA,oBAAU,OAAV,EACO,EAAI,UAAX,C,8BAIiC,O,cDkUW,OAAhD,KAAU,GAAK,EAAV,GAAL,IAAyC,GAAV,IAAc,E,CClU/B,CAAV,UAAwB,E,kICmBkB,OAAZ,UAAQ,S,kCAIK,OAD3C,qBAAsB,WAAa,EAAM,MACzC,YAAS,EAAM,MAAS,YAAQ,EAAM,K,mCAGI,OAAtC,UAAW,EAAS,KAAK,WAAQ,UAAK,C,mCAEG,OAAb,UAAK,KAAG,S,mGCvCH,OAAP,S,6BAG9B,MAAY,U,GACR,IAAS,W,IACJ,UAAS,MAAa,KAC3B,WAAU,C,MAGV,oBAAQ,UAAR,C,CAEJ,OAAO,C,qHC8E2H,OAA1C,OAAe,EAAY,EAAU,E,0DA5BjD,OAAzC,OAAuB,UAAO,UAAM,U,4BAQM,OAAxC,UAAO,EAAG,UAAQ,UAAU,UAAQ,S,kCAIR,OADjE,qBAA4B,WAAa,EAAM,MAC/C,YAAS,EAAM,MAAS,YAAQ,EAAM,MAAQ,YAAQ,EAAM,K,mCAGJ,OAApD,UAAW,EAAS,KAAM,KAAK,WAAQ,UAAnB,GAA2B,UAAK,C,mCAEuD,OAA7E,UAAO,EAAK,UAAK,KAAG,UAAI,SAAO,UAAa,UAAK,WAAS,UAAI,UAAe,GAAN,U,+LhCzCjG,mBACA,UAAoB,GAAX,UAAW,GACpB,UAAc,M,MAGX,UAAP,sBAAO,EAAP,I,6BAG8D,QAA9B,iB,mCAEsE,OAAxE,UAAuB,GAAN,WAAuB,iC,iHjCGzD,OAAN,C,8BASyB,OAAzB,GAAc,E,gEAOmE,OAAhD,iBAAoB,aAAa,EAAM,K,mCAChC,OAAV,GAAV,U,mCACwB,MAApB,WAAS,UAAS,G,kGApCjD,GAAoB,GAAN,GACL,cAAS,GAAK,I,+CA3EnC,O,aAAA,Q,sFAAA,iC,kKyEiCgE,MAAlB,IAAE,UAAK,KAAG,UAAM,G,6BAjC9D,gB,6BAAA,gB,gCAAA,kB,oCAAA,mE,mCAAA,wF,qCAAA,kB,KAAA,uD,QAAA,4C,wQ2CsB0C,MAAX,a,sD1C0C3B,gB,6BAGA,gB,6BAGM,gB,6BAGA,gB,4bG5CF,U,IACA,OAAe,EACC,gBAAX,MAAW,MACR,OAAI,KAAU,GAAW,E,CAEjC,OAAO,C,iCAwBiC,OAAd,KAAK,S,8ICyEe,OAAZ,UAAQ,a,gCAGjC,SAAW,MAAM,K,IACf,YACP,OADO,gBAAP,UAAO,EACA,YAAI,U,mEAvGf,OAFA,UACA,QAAI,SAAM,IACH,C,4BAgCwD,OAAd,Y,6BAEoB,OAArB,QAAQ,IAAY,C,8BAGtD,QAAG,W,GAAjB,GAAc,E,GAAT,MAAS,E,GAAA,QACN,UAAI,GAAU,GACd,OAAO,C,OAFf,IAAc,GAKd,OAAO,C,yCAmCH,IAAU,QACV,qBAEgB,OAAc,KAAM,E,mCAMqB,OAArB,OAAgB,K,2GC5CqB,OAAvB,UAAc,G,4BACC,OAAxB,UAAc,IAAO,I,2DAnDvB,gB,6BAKP,OAAN,S,8BAO1B,MAAe,KAAK,KAEpB,OADA,UAAc,EACP,C,mCAGuC,OAAnB,QAAc,K,mCACQ,OAAnB,QAAc,K,kCACoB,OAAxB,QAAY,KAAM,E,kEAMW,OAAtB,QAAc,E,4GAeb,MAAM,GAA+B,+B,gGAKH,OAApB,aAAY,E,iHAI9D,OAAO,OADa,eAAQ,I,4BAiB2B,OAA5B,UAAwB,G,6BAEuB,OAAxC,UAAwB,I,+FAGtE,OAhCa,MAAT,YACA,UAAQ,cA+BA,GAAL,U,oJC5EP,IAAU,QACV,qBACe,QAAU,KAAM,E,mCAM2B,OAAvB,QAAkB,K,0GCmBb,OAAV,SAAM,M,mCAEH,S,cAiHxC,OADgB,OAAkB,EAAO,O3CfgC,C,C2CjG3B,MAAW,IAAY,sBAA7B,EAA6B,I,6BASlE,U1CVwnB,S0CWtmB,KAAK,GACvB,gBACA,OADA,iBACO,C,gCAIP,U1CjBmyB,S0CkBjxB,O,cAoGrB,OADgB,OAAmB,EAAO,O3CdL,C,C2CrFT,MAAoB,GAAQ,EAAG,GACxD,+B,gCAIA,UACI,EAAS,IAAW,OAAO,EAE/B,I,IAAA,KoCPmB,EpCOnB,KoCPmB,IAAkB,E1CxCyB,GAmDtE,G0CinDI,E9E/oD07lE,E8E+oDl6lE,OAAO,GpCrnD3B,QACA,gBACA,OADA,iBACO,C,8BAsD0D,O,iB5Bi2CtD,MAAX,EAAW,CACG,uB,GAAd,GAAc,E,GAAT,MAAS,E,GAAA,QACS,MAAf,EAAK,GACL,OAAO,C,OAFf,GAAc,E,MAMA,uB,GAAd,GAAc,E,GAAT,MAAS,E,GAAA,QACN,KAAW,EAAK,IAChB,OAAO,C,OAFf,GAAc,E,CAMlB,OAAO,C,C4B92C8C,CAAN,SAAc,E,mCAIf,OAApB,GAAc,S,6BAkBpC,MAAO,GAAS,MAAM,KAAK,S,kFAKvB,SAAY,MAAM,I,wGqCvIqD,OAAhB,KAAU,E,8BAExB,MAAO,MAAP,EAAO,QAAP,GAAsB,OAAtB,QAAqB,EAArB,C,uGpCEY,MAAM,GAA+B,kC,mGAKK,OAAnC,UAAa,GAAc,E,4BAEG,OAAtB,eAAY,G,4BAUpC,OAAjB,UAAa,G,oGAkD4B,OAAzB,UAAY,GAAS,E,6BAUhE,OAHgB,MAAZ,YACA,UAAW,WAEA,GAAR,U,6BAG2E,OAAV,Y,8BAEb,OAApB,UAAY,GAAI,E,gCAEY,OAA3B,UAAY,GAAI,EAAK,E,4BAIf,OAAhB,UAAY,G,gGCpD9C,OAAc,MADJ,UAAI,GAAI,EAAS,K,6BAYsD,OAAxB,UAAI,GAAY,E,4BAEvB,OAAb,UAAI,G,4BAE2B,OAAnB,UAAI,KAAK,G,4BAIhB,OAAR,UAAI,G,+FC+E9B,OAFa,IAAT,YACA,U,eAnBgB,MAAhB,QAAwB,Q,IACxB,E7C7Fy7G,O6C6F/2G,OACpE,I,GAAA,cAAF,EAAE,SAAY,EACd,OAAO,C,CAGT,Q,GAAA,cAAF,EAAE,SAAW,OAAK,QAClB,OAAe,YAAW,OAAK,S,MAC/B,E,EAAU,OAEV,OAFA,sBACA,OAAY,EACL,C,CAGP,OADA,OAAe,KACR,C,CAMC,QACI,IAAT,S,gCAIF,SAAW,MAAM,K,IACtB,EAAoB,U7CrH2wI,U6CsHtuI,W7CtHm1I,U6C4H54I,OAFA,UAAiB,EACjB,WAAQ,EACD,C,2DAjJ2B,gB,4BAGrC,gB,gCAIL,MAAe,UAAS,GAAY,GACpC,EAAmB,QAAsB,G,GACrB,MAAhB,EAEA,UAAW,GAAY,OAAY,EAAK,O,IAEpC,iBAEA,I,EAAA,EAA+B,E,GAC3B,UAAS,GAAO,EAAM,KAAK,GAC3B,OAAO,EAAM,GAAS,GKTmD,EAetC,GAAO,OAAY,EAEvE,ILNiB,UAAW,GAAY,EACvB,gBACA,OADA,gBACO,I,CAIX,MAAuC,EACvC,EAAkB,GAAN,EAAM,KAAiB,G,GACtB,MAAT,EACA,OAAO,EAAM,GAAS,G7CPskB,E6CS9kB,KAAK,OAAY,EAAK,G,CAGhD,gBAEA,OAFA,gBAEO,I,8BA0CmD,QAAJ,MAAjB,QAAS,G,8BAEnB,cAAS,GAAW,OAAL,MAAf,EAAe,KAAf,EAAe,I,4BAsB1C,OAAO,Y,gJC1GiB,OAAhB,UAAS,I,8BAKjB,MAAU,KAAK,K,GAEX,SACI,UAAc,M,IAElB,IAAQ,KAIA,MAAM,GAAuB,mBAHjC,eACA,UAAS,GAAW,EAEV,C,gCAMd,iBAEA,OADA,UAAS,KACF,KAEX,I,EAAA,EAAa,KAAK,K,GAEd,S,EAAsB,S,IACtB,gBAA4B,MAAM,EAAO,K,EACjC,C,CAHZ,Q,yPEpCU,gB,kCAOV,OAAO,iBAA0B,aAAU,EAAM,K,mCAItB,kBAAY,MAAZ,EAAY,QAAZ,GAA2B,OAA3B,QAA0B,EAA1B,C,mCAI3B,MAAQ,SAAO,S,6EAkBX,mBACS,yBAAN,KAAa,IAAU,YAAmB,EAAM,I,6BAGH,OAAf,S,8GAQhC,gB,6BAKG,MAAM,GAA+B,8C,kCAES,OAAd,IAAU,I,mCAEtB,OAAD,C,4GAYk5C,MAAM,GAA8B,qC,kCAH35C,OAAd,IAAU,I,mCAEtB,OAAD,C,kEA7CtB,gB,uMClBT,gB,6BAGA,gB,6BAGA,gB,6BAGA,gB,6BAGA,gB,6BAGA,gB,6BAGA,gB,6BAGA,gB,6BAGA,gB,6BAGA,gB,6BAGA,gB,6BAGA,gB,6BAGA,gB,6BAGA,gB,6BAGA,gB,6BAGA,gB,6BAGA,gB,6BAGA,gB,6BAGA,gB,6BAGA,gB,yCAIW,I,IAAA,OAAoB,G,GAApB,S,IACH,EAAa,OjD3Bg5D,SiD2Bh1D,WAAS,G,EACrD,E,YAAE,MAAkB,mBAAT,GjD5B4/D,EiD4Bv9D,SAAW,C,IjD5B2/D,KiD6B3jE,GAAS,E,EACrC,C,QAJG,EAAP,Q,y1DG3CiC,OpDIhC,UoDJ0B,M,kC4BKgB,Y,KAAiB,GAmG5C,GAnG4C,GAmG9B,OAnGuC,MAAM,GAClF,UACI,EAAK,aAAW,UAAM,K5BJ2E,O4BqGrD,KAnGmB,E,8B5BI5D,OADA,2BAAU,GACH,I,6BAKP,OADA,oBAAgB,GAAN,GACH,I,8BA2CP,OADA,oBAAgB,GAAN,GACH,I,8BAqCP,I,EAAA,K,EAAA,UAAe,IACf,OADA,UAAe,QAAU,OAAV,GACR,I,mCAiP6B,OAAN,S,+cE1RlB,IAAe,K,6mBCzE0C,O,cQDjB,I,gBAAS,G,IAChE,S,EACmB,iBAAP,EACL,GAAgB,EAAG,GACvB,gBACI,GAAgB,EAAG,EAAE,MAErB,GAAmB,EAAG,G,UAG7B,S,IAAU,U,EAAY,GAAmB,EAAG,G,8BAO/B,OAAd,EAAE,GAAU,E,CALJ,CAA2B,EAAG,GACzC,Q,CRZoD,CAAR,UAAkB,EAAM,K,sGAEV,OAAd,OAAS,C,mCAES,OSgEf,GThEU,K,mCAExB,OAAJ,S,0DC+BkB,QAAnB,YAAS,UAAM,O,+BACd,YAAS,UAAM,OAA0B,MAAM,MAAyB,WAA7C,gBAAoD,OAApD,gBAAN,UAAM,E,2DlDvBpC,gB,2DAyCwD,OAAd,QAAQ,E,iGAuBK,OAApB,QAAW,GAAN,G,8BAGD,OAAV,QAAI,E,8BAewB,OAArB,QAAY,GAAN,G,8BAGG,OAAf,QAAS,E,8BAekB,OAArB,QAAY,GAAN,G,8BAGG,OAAf,QAAS,E,8BAkBE,OAAb,QAAO,E,6BA0ED,OAAV,yB,6BAgDW,OAA3B,QAAK,UAAW,S,6BAOH,OAAH,Q,6BAEwB,OAApB,S,6BACY,OAAV,Q,kCASN,OAAV,S,kCAEqD,OAAlC,iBAAiB,QAAW,E,mCAE3B,O,EAAL,K,K4D7QX,EAAE,IAAQ,EAAE,I,wC5D+QsB,OAAxB,GAAL,KAA0B,G,6F+DlRI,OAAF,GAAR,U,6BAKlD,I,EAAA,Y,GAAA,S,ItEIwC,uBAAkC,MAAlC,EAAkC,KAAlC,EAAkC,GAAsB,MAAxD,UAAiE,KAAjE,EsEFpB,UAwDM,E,EtEevB,C,QsEzEH,EAEuC,Q,8BAGvC,I,EAAA,EAAc,K,G5GSF,aAFsC,G,EAcjC,S,OAZL,E,iBAaA,M,K4GrBZ,M5GsBC,E4GrBD,EAA0C,GAAP,KAG5B,C,ItEYT,IAE6B,MAApB,EAoBJ,EApBoD,KAAc,GAoBlE,EApB6H,KAoB7H,EAnBV,KAmBU,EAjBP,KAAY,G,IAES,MAed,EAf4B,K,GAE5B,IAGV,KACiB,YAA2B,EAAgB,EAA4B,EACvF,I,UAC6F,EAAgB,KAAyB,ECrC/D,C,CDwCzB,GAIrC,GAFwC,MAE5B,GAAZ,EAAN,M,KAIO,iB,IAIc,MAApB,G,MrCCuB,KAAhB,GDnBY,KA0CmB,EAAzB,GA1CqB,GCkBkD,EAxBtF,GAAkB,GAAmB,I,YA0BzC,ID9BgB,KA2CS,EA3CM,EC6BuD,EAlClF,GAAkB,GAAe,I,CqC2CG,W,CAZ5B,EAAU,E,wHsE2Ba,MAAM,GAA8B,wC,8B/FwCtB,MAAM,GAA8B,wC,kF+FxCT,MAArC,uC,+EC8EV,MAAb,UAAmB,MAAM,U,MAC7B,MAnBgB,mBtEvJsB,EAoC8+K,WsEkH3gL,EACoB,UAAU,WACtC,UAAK,GAAmC,UAAU,U,kGAiBlC,MAAb,UAAmB,MAAM,UAC7B,OAAO,W,oyCWhKX,MrErBR,OAAM,OAAQ,MqEyBN,OAFA,MAAgB,SACC,EAAS,OACnB,C,ICRe,kB,EtDoFE,E,wD5BxER,G,IAAe,S,EAEtC,U,UAAqB,S,EAAe,GAAY,EAAG,KAE9C,EAAoB,UACH,U,UAAqB,U,EAC/B,U,UAEF,W,MA1BuC,EA4BjD,E,OADsB,cACpB,EAAY,Q,0BAEK,G,EAEX,e,MACkB,G,EAGf,e,MAA+B,G,EAAmC,e,MAA+B,G,EAAoC,e,MAAgC,G,EAAkC,e,MAA8B,G,EAAmC,e,MAA+B,G,EAAoC,e,MAAgC,G,EAAqC,e,MAAiC,M,oBAAgD,G,EAAkC,c,CAAyD,MAAkB,OAAa,eAAe,GAAG,Y,EAA+D,IAAgB,OAAiC,UAAiC,IAAgB,MAAgC,UAA+I,GAAxC,E,KmDWp4B,OnD7BpB,C,wBmFXL,aAAO,GAAP,GAAO,KAAP,I,8BhEqmCY,qBAAqE,GAArE,S,qM4B5mCuC,GAAM,EAAS,EAAf,GAAnD,W,mDDOyD,UAAK,EAAL,M,6EbRQ,KAAM,EAAS,GAAhF,W,uDA0B8B,G,+BAA9B,W,gZG4Ja,OAAkB,EAAY,EAAU,EAAO,QAC5D,MAAgB,EAAW,EAA3B,E,GACa,OAAkB,EAAmB,EAAoB,EAAzD,EAAoE,EAAY,QAEzF,EAAkB,IAAgB,EAAkB,GAAlB,C,IAClC,EpCtJ02J,EoCsJx0J,SAAS,EAAY,GpCtJ62J,EoCuJ54J,IAAI,EAAU,E,SAElC,IAAW,GAAe,GAAqB,GACjC,Q,GAAd,EAAsB,E,GAAjB,MAAS,UACV,EAAY,EAAoB,EAAhC,GAAyC,EAAO,EAAa,EAApB,E,OAD7C,EAAsB,E,MAIR,QAAY,EAAZ,E,GAAqB,GAAnC,E,GAAK,MAAS,WACV,EAAY,EAAoB,EAAhC,GAAyC,EAAO,EAAa,EAApB,E,OADV,GAAnC,E,0BgDvK+G,O,GAA7C,MAAuB,EAAK,IAAU,C,8B9GyG+o9C,GAAW,GA1Gtw9C,MAAM,GAAiC,GwGuuClB,2BAAyB,EAAO,MACzD,O,oBzC5tCA,ErCF+L,EAAO,MAAM,EAAG,QqCsBzL,IAnBR,EAmBL,SAnBa,EAoBlB,OApBU,EAoBS,QAnBvB,MAAiB,EAAO,O,GACpB,EAAU,E,IrCL4U,EqCMtV,OAA4B,EACrB,EAAQ,IAAgB,gBAAP,EAAO,GAAW,C,CAE9C,OAAO,C,CyCqtCA,CAAgB,EAAM,EAAS,K,iDvH59BtC,OAAW,GAAS,GAAK,GAAS,MAAW,IAAI,GAAY,I,uBuCrO6C,OAArD,EAAS,OAAO,EgF2B9D,OhF3BiE,GAAuB,I,+BvCunG3F,OACA,MAAa,GAAa,EAAK,IAAO,EAAS,IAAlC,GAGb,OAFA,EAAO,EAAO,GACd,EAAO,EAAO,GACP,C,CAEP,M,8C6E/qG+E,EAAjB,GAMd,GMDC,UAAc,G,kCnF0qGlD,CAAa,GAE1B,O,oB8HzlGE,EACF,IAAiB,OAAO,IAAO,G,IAE3B,OAAsB,EACT,gBAAR,MAAQ,MACL,IAAI,KAAO,GAAS,E,E9HmlGzB,CAAP,EAAc,GACP,C,kG+HrpGH,iB,SAEW,EAAI,GAAS,KAAK,MAAd,C,MAAoB,EAAI,GAAQ,M,oBAAZ,M,QAA6B,KAAhE,Q,CAGJ,OAAW,OAA4B,E,GAAK,mBAAe,I,8BAOvD,gBACW,EAAI,GAAS,KAAK,OAA6B,MAArB,EAAI,GAAQ,MAAjD,KAA2F,KAEpF,OAA4B,EAAvC,KAAuE,I,iK5H2DxB,KAAnD,KAA6B,EAAU,ID/E3B,KA2CS,EAAb,KChDR,KAAkB,GAAe,I,uBsGRiD,OAAvC,OAAa,UAAU,SAAS,KAAK,E,uBRcnF,OAJiD,S,2FYjC9C,O,KAHA,MAAa,EACb,MAAa,EACb,eAAsB,E,EpEE6D,E,uBoEanF,O,KAsBI,GAtBgD,GAA0B,MAAV,EAAgB,EAAO,GAc3F,OAZ6B,IAAzB,EAAM,WAAW,SpEKF,EAAM,WoEJQ,KAAK,GAEL,MAAzB,EAAM,gBACN,kBxCoIF,ChBrKR,YAAY,EAAO,uBAAwB,IwDmCZ,GAArB,EAAM,iBAAN,YAAqC,EAGjB,GAAH,GAArB,EAAM,iBAAwC,IAG3C,C,CpE3BoF,CAErF,EAAY,EACpB,G,KoEIE,aAAmB,EACnB,cAAkB,EACX,E,sGRJsE,OAA/B,gBAAW,EAAO,GAAW,E,0DsBFlE,Q,yBnEu7CT,OAAW,EAAO,EAAc,EAAkB,C,yBAtBlD,OAAW,IAAO,GAAP,EAAqB,EAAkB,C,yBAmGlD,OAAW,EAAO,EAAc,EAAkB,C,0CAqG9C,EAAe,EAAc,MAAM,GAA0B,kDAAgD,EAAY,yBAAuB,EAAY,K,OAC5J,EAAO,EAAqB,EAC5B,EAAO,EAAqB,EACzB,C,8BAjBH,EAAe,EAAc,MAAM,GAA0B,kDAAgD,EAAY,yBAAuB,EAAY,K,OAC5J,EAAO,EAAqB,EAC5B,EAAO,EAAqB,EACzB,C,8BAjBH,IAAe,GAAf,EAA6B,MAAM,GAA0B,kDAA1B,GAA0E,GAAY,yBAAtF,GAA6G,GAAY,K,OAC5J,IAAO,GAAP,EAA4B,EAC5B,IAAO,GAAP,EAA4B,EACzB,C,2JsB3kD4E,OAA3B,OAAe,E,sB4BPpB,MAAM,I,sBAFzD,MAAM,I,uBAJN,MAAM,GAAsC,qBAAmB,EAAI,4B,qC/BiCH,OAAhB,OAAK,EAAM,E,mpCqD0SpD,qBACqB,GADrB,cAE0B,GAF1B,+B,oBC5SP,aAAW,GAUH,GAAe,QAAc,YAOiB,eAAgB,K,kBCoCxD,YAAwE,cAA1C,W,kBAS9B,YAAiF,cAA9D,YAGL,YAAiC,K,gBAtCvC,YACU,aAAO,UAAU,O,kBA5BtC,2B,kBCyJX,aAAwB,GAA+B,EAAe,E,kBAUtE,aAAoB,GAAwB,GACX,aAAN,EAAmC,KAAM,K,kBA1GpE,aAAqB,GAAe,EAAe,E,kBAWnD,aAAqB,GAAwB,GACZ,aAAN,EAAmC,KAAM,K,8BC3F/D,O,WAAmB,OAAQ,iBAA3B,C,yBCasC,ID6EP,OAAW,C,MAAmB,O,GAAuC,gBAAvC,EAAuC,S,SAAA,EAAY,Q,8BAsG/E,GAAR,EAAiB,G,gDAZvC,GAYJ,EAXQ,KACA,OAA4B,iDAUpC,EAVQ,I,MAU2C,Q,gBA8FtC,sB,GAAA,QAAgB,OAAO,KAApC,I,EAAA,EAAa,EEnS4E,EAgBy8W,OAAkB,GFqRpjX,MAAa,EAAO,IACD,GADC,EAEkB,EAFlB,QAKpB,OADA,OAAe,EACR,C,sBASkB,gCAAD,EAA0C,MAAzC,EAAyC,KAAzC,EAAyC,GAA8B,G,GAAxE,QAAiF,WAAzG,MAAwB,EACxB,OACA,KAAO,E,oBrHpLw/Y,MAAC,oEAAkE,EAAO,iBAA1E,GAAyF,GAD/iZ,MAAM,GAA8B,GAAR,G,qCwH6MU,e,OHpG7B,Q,KA1O5B,E,GA0OG,EAAK,KAAU,uBA1OlB,EAEF,GAwOuD,OAAO,E,WAzO5D,EA0OD,OAAO,E,QrH1Ga,MAAM,GAA8B,mB,CqH4PzE,IAAa,Y,cCnPrB,MAAe,EAAK,KACpB,EAlHmC,IAkHhB,E,IACd,GAAgB,iBAA8C,GAAL,KAAqC,GAAX,Q,CAEpF,MAAiB,EAAS,KAC1B,EAAc,EAAS,KACnB,EAAW,GAAiB,GAC5B,EAAW,GAAS,EAAS,G,YAwBrC,MAAqC,U,GACjC,EAAU,KAEV,EAAU,GAAmB,O,CAGN,EAUjB,IAA+B,G,QATjC,KAAO,QAAyB,GADb,EAeJ,O,2CAfnB,EAsBA,KAAwB,K,SAtBD,EAwBb,IAA+B,E,GApDrC,G,MAKJ,KAAO,EAAU,E,CDuOjB,GAAS,E,0BAqBZ,OAXG,kBAKY,GAAX,IAA8C,MAAd,GACf,MAAlB,MAA2B,kBAA0B,kBAAsD,MAAd,EAHzF,EAMA,GAAsB,EAAgB,uBAAyB,EAAgB,EAA/E,a,0BG2JyrF,e,GHpc9oF,aAmTrC,I,GACF,mBACI,MAAa,KAAa,EAAO,EAAgB,EAAY,EAA6B,M,IACrF,OAAO,uBAAc,EAAO,GAArB,CAA8B,I,QAG1C,OAFA,MACA,KAAe,GACf,G,IAEJ,iBAMQ,EAAM,MAEN,QACA,OADgB,MAAhB,I5F5R+lc,KAAtB,EAA6C,EAAM,MA9Chpc,K4F2UoB,G,CAIZ,KAAoB,E,2BA3BpB,oBAG4C,MAH5C,W,kBrHpRm2hB,MAAC,6CAAD,GAA4C,GAD12hB,MAAM,GAA8B,GAAR,G,gBqHyVhE,OAAc,M,kBA3cvB,aAAkB,GAFlB,YAOyD,UAAT,UAAS,KA4BjC,aAhDE,GA2DL,a,oBAEyB,c,eAmeV,a,wGAqB3B,aAEqC,MAFrC,aAGqD,MAHrD,aAI8B,MAJ9B,cAK+B,MAL/B,qB,qEACT,YACA,YACA,YACA,YACA,W,+BAbA,cADA,W,uEIhhBU,cAES,GAFT,e,yDACV,YAGuB,aAAO,E,oBAiBP,QAAvB,aAAuB,QAAS,GAAuB,gBAAc,EAAY,2BAA1D,EAAqF,GACrF,cAAO,E,wBtImKjB,EAAgB,GAvN/B,G,GAwNM,S,MsIjKyjK,GArDvjK,GAqDujK,sB,EApDzhK,MAAlB,EAAwB,OAA0B,EAAI,GAAqB,C,QAC/E,GAmDqlK,GAnDrlK,KACjB,OtIkNG,C,sBsIvNK,oBAC2C,MAD3C,O,kBAoBL,YACA,W,2BAPI,iBtII4B,K,IAClC,KACU,EAAM,M,EAsEN,GAAO,GAAc,G,MAtEiB,K,IAE9C,sB,EA2DQ,GAAO,E,CsIhEe,Q,gBCSxB,6B,iCAFwB,eAE1B,G,+BANJ,kB,sBCRI,Y,uBAAoC,MAApC,ElGa4C,OAFtC,EAEV,GAAgB,EAAS,GAAuB,G,gCkGP5C,OADA,GAA6B,G,EAA0B,M,EAAjB,GAQQ,ElGaiE,GAAkB,uDAGxH,IkGvBT,I,gBAGJ,GAA6B,EAAS,E,0RCoEC,OAA/B,EAA+B,uB,eA9EP,cAIT,sBAOF,aAMyC,c,sBAwF5C,gB,yDCnHuD,GAAiB,EAAS,EAA1B,M,6BAeD,GAAM,EAAS,EAAf,M,kOZ+hBnE,OAAU,MAAM,M,ea+sBjB,O,KAAA,C,eAGC,O,KAAA,C,eAED,O,KAAA,C,eAEA,O,KAAA,C,eAOA,O,KAAA,C,eAIA,O,KAAA,C,gBAEY,W,8BAoDM,a,eAXQ,a,kBAnQT,YAA0B,C,gBADR,OAAvB,OAAkB,I,gBA+CsB,OAAvB,GAAqB,E,oBAl6BzB,IAEzB,EAFyB,yBAAzB,EAAqE,MAA5C,EAA4C,KAA5C,EAA4C,KAIjE,EAAgB,EAAM,KACtB,MAAiB,EAAM,GAAW,GAClC,E,mBAgCA,EAAW,K,GAEP,EAAM,M,IAucW,EADuC,KAtcpC,OAuc5B,OAAyB,QAvcU,EAucC,KAAX,EADiE,KAtcvD,E,CAC/B,OAAO,I,c7IuCC,MAgKR,EAhKQ,YAAX,MAAW,M,K6I1HC,aA6FuC,I7I6B9B,CAAoB,EAAO,E,SACrD,EAAO,I,I6I7ByB,MADU,EACJ,OADI,EAEtC,MAAY,IAAW,G,GACnB,iB,a7I0BQ,MAsKF,EAtKE,YAAX,MAAW,M,G6I1HC,IAiGsD,GAjGtD,gB7I0HS,CAAoB,EAAO,E,SACrD,EAAO,I,I6IzBiC,MADU,EACJ,OADI,C,CAG9C,OAAO,C,CApDc,GAAkB,EAAO,GACxB,MAAd,G,mBAuDJ,EAAW,KAAQ,EAAG,W,IAC1B,O,EAA4C,EAAW,IC7PS,GAAQ,IDmQxE,EAA4B,EACV,gBAAb,IACD,EADc,QAEV,IAAc,GAAa,IAAc,GACzC,kBAAuC,EAAe,EAAI,E,OAlEtC,GAAwB,EAAY,GAJhE,MAKI,EAGJ,EAEsB,MAAlB,GAEA,IAAmB,EAFO,EAIlB,GAAuB,GAAvB,KAgBZ,OAbsB,MAAlB,IACc,KAAa,IAAmB,KAAmB,MACnD,aAAsC,GAAtC,EAAsC,UAInD,GAAe,KAAa,GACjC,KAAqB,GAEJ,OAAO,uBAAc,EAAkB,GAAX,IAG7C,KAA0B,EAAO,GAC1B,C,oBAkEP,aAAc,MAAd,IrGrJm0U,EAAmC,KAA8E,WA9Cx7U,KqGuMiB,6BAAb,EAAiD,MAApC,EAAoC,KAApC,EAAoC,K,GAK7C,gB,IAEI,EAAM,OAAO,E,2CAEb,KAA4B,OAA4B,mCAAiC,EAAK,QAAM,EAAxE,G,MAG1B,MAAN,EAAM,KAAM,MAAN,G,oBA0CV,MAA4B,KEjM5B,EAU+6W,EAV/5W,MACT,KASw6W,IATx6W,C,GACC,iBF9DF,Q,IAgQE,EAAK,OANiB,E,2CAQtB,OAAW,MAAX,EAAW,KAAX,KrGpNoqa,EAAa,OAA4B,mCAAiC,EAAI,QAAvd,EAAsZ,GArG7ra,I,EuGsHQ,EAAM,EAAI,I,CFwMd,QAAW,MAAX,IrGzNmyZ,EAA2iB,GAAjB,GA9Cj0a,KqG0PwC,G,CAvCpB,CAAN,EAAM,EAAiB,E,qBAMjC,KAAa,G,IAoCb,MAA4B,KEjM5B,EAU28T,EAV37T,MACT,KASo8T,IATp8T,C,GACC,iBF9DF,Q,IAgQE,EAAK,OAtC2B,E,2CAwChC,OAAW,MAAX,EAAW,KAAX,KrGpNoqa,EAAa,OAA4B,mCAAiC,EAAI,QAAr8D,EAAo4D,GArG7ra,I,EuGsHQ,EAAM,EAAI,I,CFwMd,QAAW,MAAX,IrGzNqzW,EAAyhE,GAAjB,GA9Cj0a,KqG4NI,KAAa,E,qBAYT,OAAmB,OAAO,EAM9B,MAAqB,aAArB,GACA,EAAa,O,OAEE,OAAX,GAAmB,SACZ,IAIJ,EAAO,GAAe,IAAU,C,kBAkCjC,Q,OACF,gBACQ,EAAM,KA04BA,EAz4BL,OAAO,uBAAc,EAAO,OACjC,OAy4BS,IAFC,EAp4Bd,gBACS,OAAO,uBAAc,EAAO,EAAM,OACvC,OAo4BS,IAFC,EACA,C,4BAxwB4B,OAAvB,EAAK,OAAU,GEtVo8lB,EAtH1+lB,GAsHy/lB,GArHz/lB,GAAO,GAFW,GAAO,EF6cpB,C,kBAIL,MAAW,OACX,EAAiB,EAAM,KAAU,EAAU,OAAiB,GAC5D,OAAO,uBAAc,EAAO,E,kBAK5B,EAAM,GAAc,QAEpB,MEnWoknB,EA/JrinB,KFogB/B,OAAO,uBAAc,EAAO,E,kBAmLiC,I,KAC7D,MAD6D,gBAC7D,OAAiB,I,EAAA,I,GAAA,S,EAhBjB,OAgB0B,EAhBU,KADsD,KAiBhE,E,QAAT,E,YACY,MAApB,GAAoB,GAApB,EAAoB,IAApB,EAAoB,UAChC,Q,kBAoDsE,I,EAAA,IAAM,K,GAAN,SAC7D,I,EAAA,I,GACF,gB,EAAY,W,MACZ,iBA9rB8B,MAAM,GAA8B,GAosBnD,2BAAyB,IAHpC,KAAwB,G,EACxB,I,YAP2D,EAUlE,Q,oBAOU,WAA2B,G,GAA3B,QAAqC,OAAO,EAAvD,MAAW,EAEX,EAAiB,OAAU,GAAM,EAAO,G,QACnC,OAAO,uBAAc,EAAO,KAEjC,KAAiB,EAAM,IAChB,E,2BAmDH,oBAQC,iBAAkB,kBAAqB,iBAA6B,gB,gBAkB9D,WAA2B,G,GAA3B,QAAqC,OAAO,KAAvD,MAAW,EAIK,yBAAhB,EAAgB,QAAuB,OAAU,GAAM,EAAO,MAA9C,EAEhB,EAAkC,K,GG11Bso0C,EAAU,KAAc,OAAO,K,GAAiE,MAAyB,GAA+T,IAAc,IAA8B,OAAO,uBAAc,EAAO,GAAY,OAAO,KAAqR,MAAoB,EAAU,KAA0B,yBAA4C,MAA5C,IxGyI34I,EAAU,GAA5D,EAAkF,MA9CjqtC,KA8CyytC,MAAV,EAAU,KwGzIi6I,EH42Blp2C,ErGnwBlB,KAAV,EwG1GrB,IHg3Bc,MAAjB,IrGtuB4+tC,KAAiB,EqGsuB7/tC,GrGpxBJ,KqGsxBI,M,cAWA,I,EAAA,yB,GAAA,SAAmC,MAAN,EAAM,K,EAAM,MAAN,EAAM,QAAN,E,QAAnC,EAAoD,Q,CAXxC,GAAW,G,OACV,MAAT,GAAiB,KAAgB,EAAW,EAAO,GAC5C,KAEJ,KAAuB,EAAW,E,CA3ClC,GAA0B,EAAO,G,wBA3jBnC,OAAO,uBAAc,EAAc,GAAP,MACjC,KAAa,MACb,KAAqB,GACrB,KAA0B,EAAO,IAC1B,E,CAgjBC,GAAuB,EAAO,GAEvB,EAEJ,KAZA,I,0BAqE8F,sB,SAC5F,EAAM,K,GPv4BsE,EAgBg93C,OAAgB,EAAM,EAAO,EAAO,GOu3Bjj4C,SACJ,EAC0C,EAFtC,UAIxB,KAAgC,OAAO,EAC3B,MAAM,GAAN,G,GAAA,QAAqB,OAAO,EACrC,EADS,C,uBAiBhB,MAAU,EEtvBurvC,EA7JjqvC,MFo5BV,EEvvBgsvC,EA9JvrvC,K,YFu5B3B,EEzvBuzvC,EA/J5xvC,MAEC,K,IFw5BxB,gBAAwB,OAAO,E,GAC/B,gBAAiB,OAAO,IAFT,C,kBAoH0B,QASpD,OARG,gBACI,EAAM,KAAiB,aACvB,EAAM,KAAiB,aACd,SAEb,kBAAqB,EAAM,KAAW,SAAc,MACpD,gBAA8B,YACrB,W,oBAOT,YAI4B,aAAO,GAKV,YAAO,GAKA,YAAa,K,sBAgE7C,cAJA,YACA,YACA,YACA,W,gBA//BiB,YAAiB,EAAQ,M,KAypC1C,IAvpCwB,YAAqB,K,gBAioC+C,O,KAAtD,kBAAoB,OAAmB,GAAW,C,eAsKpD,a,gBAnExC,W,gBAiFA,cADA,W,gBATA,cADA,YAGuB,aAAO,E,gBAjE9B,cADA,W,qBAzGoC,6BAAD,EAA+B,MAA9B,EAA8B,KAA9B,EAA8B,KAAa,OAA5C,QAAwC,EAAxC,C,gBAFN,W,gBA8L7B,cADA,W,gBA5JwC,cAAW,GAC5C,QAAc,GAYoB,U,kBAOpB,gCAAD,EAAoC,MAAnC,EAAmC,KAAnC,EAAmC,K,GAApC,QAA2C,OAAO,E,IAAlE,MAAgB,IACT,C,GACC,EAAU,KAAkB,OAAO,E,MAC1B,EAAU,KAAV,yBAAD,EAA8C,MAA7C,EAA6C,KAA7C,EAA6C,K,GAA9C,QAAqD,OAAO,EAAxE,EAAY,C,EAVqB,M,0BAvCZ,OAAQ,sB,EAGE,OAAQ,+B,EAEpB,OAAQ,oB,EAEN,OAAQ,sB,EAOpB,OAAQ,U,EAEL,QAAM,G,EAEH,QAAM,G,eI7wCe,a,qCCFnB,a,gGCqOrB,O,KAAA,C,eAGA,O,KAAA,C,kDA0Ia,uC,gBAxEjB,cACqB,YAAO,GACL,W,eAjEG,cAYL,YAAa,K,0BAlBnB,OAAQ,Q,EAGL,OAAQ,W,eCrOrB,O,SzDciG,EAAvC,GAAiB,MAf5E,GAe6F,M,EyDdxE,GAApB,E,oBAS6B,eAEN,YAEJ,YACsC,c,mDCT1D,EAAK,OAAU,EAAO,MAAM,C,eCH3B,O,WAAW,OAAQ,QAQC,OAAQ,iBAQjB,OAAQ,SAhBnB,C,qBCOQ,EAAe,GAAK,G,EAAQ,E,cACrC,MAAU,EAAQ,KAClB,EAAqB,UAAe,G,GAChC,SACA,OAAgB,IAAY,EAAoB,UAC3C,EAAQ,EADb,EAIJ,YAAiB,GAAjB,GAAiB,EAAjB,IAAiB,EAAjB,IACA,E,kBA2DoE,c,IAC3D,OAAT,EAAe,OAAO,K,GACtB,IAAS,EAAY,OAAO,E,KAC5B,iBAA4B,OAAO,EACzB,MAAP,OAAO,G,EA/D+B,IAAhB,EAAgB,IAAhB,EAAgB,IAA0B,G,GAgC/D,IAAsB,EAuCgF,MAClH,GACA,GAvCgB,+FAEuB,EAAiB,uBAAqB,EAF7D,0KAaR,OAAkB,MAAd,EAAoB,EAAW,EAAQ,EAA3C,C,MAEU,OAAV,CxI4BK,MAAC,0DAEiC,OAFjC,mCAMoC,EANpC,sEAgCmC,MAAM,GAA8B,GAAR,G,gEyI5FjE,W,qFAAA,c,yEA+DoC,uC,2DC8SpC,2B,mCA/ZZ,uC,kBA4XI,YAEgB,W,gBC3UqF,W,qEAAA,Y,yEAoD1F,uC,wECdA,2B,qBhE5D2F,EAAvC,GAAiB,MAxB3D,IAwB4E,MiEtB1E,YACJ,YACA,W,8BCIf,O,KAAA,C,eAGC,O,KAAA,C,oBAwQO,I,UAAA,aACZ,IAA6B,I,EAAA,IAhEzB,EAAmB,GAgE4B,EAAQ,G,GA/DnD,OAAW,GAAiB,QAC5B,OAAS,EACT,OAAa,KACb,OAAW,GAAS,OAAS,G,eAEJ,OA8EjC,EAAqC,U,GAG1B,EAAU,KAjFb,EAmFJ,KAnFsB,EAAlB,EAoFJ,KAAa,EACb,EAAU,GArFN,O,CxBHgiF,EAtB9hF,IAA+B,G,UwB4CrC,EAlBa,EAkBH,c,GACC,MAAP,GAAgB,EAAI,KAMxB,GAAO,M,CALH,I,EAAA,EAAY,EAAI,KApBP,EAqBT,GArByB,EAqBI,G3J1LhB,KA0CmB,EAAhC,GAAO,GAkLR,ICvH0gF,EA3GjhF,GAAkB,GAAmB,I0JkM7B,GAAO,C,KAvBE,ICpKurL,EAAilC,KAAjlC,EAA+lC,KAA/lC,EAA6nC,KAAa,GAAk9B,GAVhqP,KzB0Ko6E,EAjBjhF,O,2CAlBrB,EAyBE,KAAwB,K,SAU4gF,EAR1hF,IAA+B,E,iBwBsErC,KAAW,G,MACtB,Q,wBANM,oBAE6C,MAF7C,S,kBAhQH,axBuBW,GwBzBX,YACA,YAI4B,eAIE,WAAsB,UEpBoB,GFkDzB,YAAa,K,0BA7CxC,OAAQ,a,EAGA,OAAQ,oB,exBSzB,Q,gBA0BX,cADA,W,gBAJoG,OArB7D,IAqBA,GAdI,IAcwB,C,eA9BxD,Q,oBA4JX,I,EAAA,EAAY,OACZ,EAAgB,KAAqB,G,GACP,MAAb,EnImEnB,K,EA5IU,GAAO,GA8IlB,Q,CAAgB,K,IACL,OAAuB,G,EAxJvB,GAAO,E,CmIkFf,Q,GAEI,GwBqCD,4BCzJsxN,OAAc,OAA8B,OAAa,GAAxjD,GAVtpK,G,MzB+HxH,EAAS,GAAW,E,gB2B5IkB,W,kBApBlD,aAAqB,GAAS,GAAM,GADpC,W,gBCHkB,W,0BCWb,oBAE2C,M,kCAGO,GAAnD,KAA6B,EAAU,IhKMA,KgKN0B,KhK+D7D,QgK/DyG,G,gDAsB7G,GAvBM,EAuBN,G,MArBH,Q,CANI,S,kCAcD,MhKQwB,KgKRV,KhKsDV,QgKtDU,Q,gDAad,GAdM,EAcN,G,MAZH,Q,kBAgBG,O,oBAUJ,MhKiBM,KAmBkC,EAAhC,GAAO,GAnBM,IgKlBrB,EAAW,GAAkB,GACvB,C,CAVF,K,6C5B/C+C,a,kBAkB9C,mBADS,EACI,EAAO,G7FDR,E6FEO,OAAO,E,+BwBwBqC,OAAV,K,eAzB7D,MAf6B,oBAiBG,WAChB,MAAb,WACuB,MAAvB,UAAU,gBAnBgB,IAoBjB,UAAU,gBApBO,IAqBjB,UAAU,UAAU,OAC7B,UAAU,UAAU,MAAO,e,KAtBD,oBASjB,QAA8C,MrHKa,aqHd1C,IrHiBF,OqHRmE,iB,kBKP3F,E1HFqC,E0HGzB,oB,GADZ,S,I3HCc,SAAiB,GCAuB,E0HClD,oBAgDo9B,E,E3HmCj9B,C,Q2HrFP,EAGC,Q,CLKU,CAAP,QAVsB,oBAYjB,cAZiB,IAYiB,QAAQ,U,yCAgBnD,MAAe,UAAmB,GAClC,OAAW,IAAyB,WAAgD,MAArC,WAC3C,KAAuB,WAAa,C,kBM/BxC,QAAQ,MAAM,E,eCFF,Q,gBAawC,MAAY,GAAZ,GAAY,KAAuB,OAAnC,QAA2B,UAA3B,C,oBAThD,E5HJ2C,E4HIb,gBAM9B,MAL0B,iBAAb,IACT,EAAW,IAAF,EAAE,E5HHqB,E4HIhC,gBAAmC,IAGhB,MAAf,GAAe,iBAAf,IAAe,e,sBCTsB,eAGsB,W,mBAE1C,iBAAiB,WAAS,GACQ,c,yDAgB/D,cAFA,YACA,YAGI,UAAI,UAAmB,KAAU,OAAiB,WAAU,E,eCrB/B,a,oBCWjC,GAAsB,EAAS,EAA/B,MADA,Y,iCCgC6B,a,6DAMM,a,sBA3C7B,YAA8B,cACK,W,EAAA,K,kBAAE,O,oBAFE,cAajB,sB,eAsGO,cAClB,aACO,Y,gBAvHiB,OAA9B,GAAX,EAAW,kCAAuB,I,gBAoDgB,cAA3B,W,gBAamC,cAA9B,YACR,iBAAmB,U,sBAkBoB,cAA9B,YACH,8BAGtB,UAAO,iBAAkB,W,EAAU,K,mBAC3B,EAAM,QAAU,QAAU,EAAM,MAAQ,SACxC,EAAM,kBACN,O,YAEL,E,8CChGP,GAAuB,4CAAvB,MADA,Y,6BCM8E,SAAQ,EAAR,C,kBAL9E,YACA,YAIwD,UAAf,UAAe,GAAK,EAAG,IACX,c,e5BmJtB,a,eAlJI,eACA,eACY,Y,iC6BZ6D,OAAT,C,eCD3E,c,q8H5CkDF,gB,6BAKgD,OAAP,S,6BAEV,OAAR,qBAAN,K,2FAqB+C,OAA9B,SAAe,gB,8BAI/D,gBACA,QAAY,EAAM,KAAO,EAAM,MAE/B,cAAY,GAAZ,EAAY,KAAZ,I,8BAOJ,MAAY,QAA0B,GAAP,EAAO,S,GAClC,IAAU,KAA6B,WAC3C,QAAY,E,8BAG0D,OAAtB,QAAgB,E,8BAGhE,GAAyB,UAAS,E,6BAId,iB6B3DwC,M,O7B2DxC,QAAsC,qBAAN,MAC5C,IADY,EACI,KAAW,qBAAN,K,kCAa7B,KAAM,EAAO,EAAU,K,kH1E8DnB,IA2iaQ,EA3iaR,UA2iaQ,eAAhB,EAAgB,IAAX,MAAW,a2Exmawr9b,EA/B7q9b,KAAO,I,+BAGW,S,sFAC0B,MAAhC,2BAAyB,UAAK,G,kHAIxD,W,6BAAA,gB,GAAA,6B,8BAKQ,eAAkB,C,6BADR,OAAf,UAAU,I,iCAIL,MAAT,GACA,MAAY,UAAa,GAAuB,G,GACnC,MAAT,GACA,UAAa,GAAe,GAG5B,gBAAU,MAAV,KAAU,I,UAEgC,IAAvC,eAAkB,2BAAqB,C,Q/HyC4J,YoDqE7M,iBAi2VI,KAAa,UAAnB,mBA+UP,EAAa,IAAR,I,EAAA,EAAQ,SA/UN,EA+UM,E2E7xWsC,EAMuwhY,EANvwhY,K3E8xW/C,EAAY,EAAI,E,CpDtvWgO,I,EAAA,EoDuvW7O,ErDt2WK,KA2CS,EAAb,GA3CmB,GCL3B,KAAkB,GAAe,G,+JT8Q7B,EAAkB,OAAkC,GAjSP,GAiSmC,MAMhF,EAAY,K,IwIvPA,QAAgB,EAAV,UAAU,OAAhB,EvC5C+C,GAAiB,MA6D+oC,GA7D9nC,MuC4CjF,U,EAAA,IACR,EAAe,UAAU,GACzB,EAAS,K1FwDqB,I,EAAA,cA0B6+U,G8F/It7U,E7FiCspC,EyFCppC,EA6BnF,KAAS,EAAS,GAAmB,GADtB,E1FOpB,E0FVS,KAAsB,EAAtB,O,KAAZ,I,EAAA,EAAY,EAOZ,EAAe,YAAwB,G3EqF/B,mBAikaZ,EAAgB,IAAX,MAAW,SAjkaJ,EAikaI,E2Exmawr9b,EA5Cpr9b,GAAc,E,QA4C+nS,EAzCppS,KAEL,EAAS,MIjEwE,E7FyBq0G,EyF+EmwL,EArCppS,GAAwC,IxIyOjD,EAAY,I,8HwIzRZ,e,UAAW,K,yCAA0C,IAAzB,GArBgD,GAqBvC,YAAgB,Y,oSC2JrD,OADA,GAAyB,UAAS,IAC3B,C,6GAWM,GAAb,UAAuC,K,uHA5GV,UAA2B,qBAA3B,EAA2B,G,4GAc3C,GAAb,UAAuC,K,+JCvF5B,gB,6BAOC,gB,6BA2C6B,OAAZ,UAAO,I,mCAIS,UAAsB,0B,6BAiBtD,e,GAAA,QACN,WADP,MAAa,EAKT,YAEA,EAAO,KACP,e,6BA+B8B,OAAL,S,oCAI8C,kBAtBnD,CAAuB,aAuBzC,I,GACF,kBrHAqC,MAAM,GAA8B,iB,GqHCzE,gBAA6B,W,GAC7B,iB,GrHD2sD,EAAM,KA9CrtD,MAAM,GAA8B,GqHgDD,gCAC3B,MAAa,EAAM,uBAAmB,EAAnB,S,GACf,UAAO,uBAAc,EAAO,GAE5B,OADA,EAAM,GAAe,KAAM,GAC3B,G,SAMA,UAAO,uBAAc,EAAO,GAAsB,EAAtB,eAA2C,EAA3C,KAC5B,U,CAIf,U,kCG+EqC,kBArF/B,C,IHpC4C,S,GAwDvC,mBAAwB,OAAO,EAEnC,MAAa,OAAsB,KAAM,EAAiB,aAA7C,I,GACR,UAAO,uBAAc,EAAO,G,CAEhC,6BAID,OAJ2B,MAA1B,I5FtBwoE,QAAhC,EAAsD,GA9CvqE,K4FsEQ,SACA,QAAe,YACR,C,CANmC,G,oDAVzC,MAAc,OAAO,E,MACT,OACjB,OADA,gBAAiB,EAAjB,KACkB,GAAqB,E,CAmBnC,MAAY,GAAQ,WACxB,QAAO,GAEP,Q,0CAuB0B,EAAQ,OAAO,G,gDAfrC,GAeJ,KAdQ,KACA,OAA4B,iDAapC,KAbQ,I,MAayC,Q,oCAI7C,EAAsB,E,2CAGtB,GACI,UACA,OAA4B,kDAAgD,KAA5E,G,+BASyB,OAAjC,EAAO,I,6BAwBP,MAAiB,S,mBG+EvB,e,OHxFwD,Q,KA1O5B,E,GAgOG,EAAK,KAAU,uBAhOlB,EACA,GA+NuD,OAAO,E,WA9NhE,EA+ND,OAAO,E,QrHhGe,MAAM,GAA8B,qB,CqHqHzE,OAqBA,OAXoB,MAAhB,WACA,SAOA,GACA,SAEG,KAGP,GAEA,SAEJ,MAAY,KAAK,K,GACb,gBAAiC,MAAM,GAAkB,EAAM,M,GAKpD,GAAX,WAAW,CACX,MAAU,mB,GACC,MAAP,IAAgB,EAAI,KAAL,CACf,MAAY,EAAI,KAEhB,MADA,QAAsB,EAAO,GACvB,GAAkB,E,EAGhC,OAAO,QAAoB,E,8BA0BiB,OAA5C,Q,oBlIrGS,EAAgB,GA/M7B,G,GAgNI,S,MsIjKyjK,GAhDl/J,G,EAgDk/J,mB,QA9C/iK,GAAuB,GA8C8jK,IA9CrlK,KACjB,OtI6MG,C,CkIqGsB,CAAP,GAAsB,UAAjC,O,gCAG6C,OAA7C,QAAW,EAAO,UAAY,E,kCAG9B,M,cA0DkE,OAA9D,gBAA0B,EAAa,OAAe,E,CA1DtC,GAAkB,GGwK5B,cA3VP,CHpC4C,aAyNrC,I,GACF,iB,GACQ,UAAO,uBAAc,EAAO,GAAgB,gB,GAEpD,gBAAoB,KAAsB,EAAS,O,IACnD,iB,GAMS,EAAM,MAAe,KAAsB,EAAS,GAMrD,iBAC4B,6BAA5B,QAAkB,EAA6C,MAAnC,EAAmC,KAAnC,EAAmC,K,CAEnE,U,IAEJ,iB,GAI+B,MAAvB,EAAM,MAAuB,KAAsB,EAAS,GAE5D,gBAA4C,W,GAC5C,EAAM,KAGN,OADA,QAAkB,EAAS,EAAM,MACjC,IAEJ,MAAa,EAAM,QAAqB,EAArB,wB,GACf,UAAO,uBAAc,EAAO,GAAS,U,SAQrC,gBAA4C,WAChD,MAAa,GAAsB,EAAuB,EAA7C,mB,GACT,UAAO,uBAAc,EAAO,GAAS,U,gCAkHxC,gB,GAAA,QAAgB,WAAhB,EACN,KACP,c,8BAW0F,O,sBG+D+sI,e,GHpc1vI,aAsVrC,I,GACF,mBACI,MAAa,KAAa,EAAO,EAAgB,OAAY,EAAgB,G,IACxE,OAAO,uBAAc,EAAO,GAArB,CAA8B,I,QAE1C,OADA,MACO,I,QAEX,iBAC6B,MAAd,GAAsB,EAAM,OAAqB,EAExD,KAKO,I,EAgCvB,MAAc,GAAuB,GAAvB,KAAgD,KAAuB,K,8BAKrF,QAAe,U,sCAIN,UAAT,kBAAS,EAAT,KACA,QAAW,GAAe,MAAJ,EAAI,KAAJ,EAAI,QAAe,EC/dlC,ED+d+D,UAAtE,O,8BAUM,I,KAAA,aACF,I,MAA4B,EAAM,K,gBAAN,K,QACpB,oBACX,Q,8BAKK,2BAAN,KAA2B,GAA+C,OAAvC,MAA7B,EAA6B,KAAM,GAAnC,EAAyD,U,mCAIsB,OAAlF,UAAa,IAAY,GAAT,WAAyB,OArc5C,OAD8C,EAscC,KAtcD,OAC9C,SAAoB,SACpB,gBAA6B,YACpB,aAmc8D,MAAG,S,IAtc5B,C,6BAyctB,MAAvB,yB,oMAQoC,MAAN,Q,8FA8BzB,gB,6BAEA,gB,6BACA,gB,6BAEwC,QAAJ,MAAf,U,gCAG3B,gBAAe,MAAf,I5F/ak+nB,EAAK,GAA1B,EAAgD,GA9CjgoB,K4F8dI,gBAAgB,MAAhB,I5FhboioB,EAAK,GAA3B,EAAkD,GA9CpkoB,I,sC4F/GJ,wB,0CAAA,kJ,mCAAA,iL,mCAAA,kO,qCAAA,kB,KAAA,sD,SAAA,6G,6JA4jBQ,UAAe,E,sFAE+D,MAAvD,kBAAyB,GAAR,WAAwB,IAAE,SAAU,G,+IIphB/D,gB,6BAI0B,OAAd,UAAS,I,6BAC0B,OAAnC,UAAS,wBAAc,GAAO,E,mCACC,OAAxB,SAAe,IAAE,UAAK,G,uEAgBM,OAAnC,UAAS,wBAAc,GAAO,E,qHAhE/D,yF,mCAAA,oE,qCAAA,kB,KAAA,sD,QAAA,4C,4ICmE+E,OAAJ,C,8BA2FzB,OAA1C,OAAuB,KAAM,E,+BAOZ,aAAjB,GAAiB,EAAjB,KACW,I,mCAkBiD,OAA5B,SAAe,IAAE,Q,gLqC5E3C,I,SAAA,W,KACF,EAAiB,GAAN,EAAgC,EAAU,EAApC,Q,iBACjB,EAAgB,GAAN,EAAqB,EAAU,G,iBACzC,G,yBC9CR,ECvDy5D,E,UlBwC93D,EAAW,K,E/CgDX,mBtEvFmB,EAoCu1B,GsEkDx3B,EAlCgE,EAYrD,GAZiB,EAoC/B,GApCmE,EAYrD,E,uC7GhBH,KA0CmB,EAAhC,GAAO,OClBM,EA9BrB,GAAkB,GAAmB,I4KiBjC,I,gBAJJ,Q,GAMI,IAAU,KAAV,C,M5KciF,sBDrCzE,KA2CS,EAAb,GA3CmB,GCqCkC,EA1C7D,GAAkB,GAAe,G,I2KmEH,CAAN,EAAiC,EAAU,G,iBAC3D,E,yBACH,Q,6BAQ2C,OAAb,Q,iNnCvDnB,gB,GAAA,QAAmB,OAAO,EAAtC,IACW,EADC,EACK,K,OAAN,YACN,MACE,E,8BAeK,I,EAAA,Y,GAAA,S,InGoB2B,SmGnBI,UAL6B,E,EnGkBrE,C,QmGdS,EAAZ,EAEM,GAAQ,E,6BAO8B,OAApC,YAAY,MAAmB,KAA/B,C,6BAIA,kBAAiB,MAAjB,EAAiB,KAAjB,EAAiB,KAAe,OAAhC,U,8BAMR,uBAAY,KAAM,IACb,IAAY,WAAS,E,iCAI1B,uBAAY,KAAM,IACd,2BAAc,WAEd,WAEA,S,gIAiBI,I,EAAA,YAAI,K,GAAJ,S,InGaV,E+HvI6C,O5B0HG,UAAI,GAlDsB,G,EnGkBrE,C,QmGgCK,EAAmD,Q,0bXugBzB,OAAJ,I,2DAY4B,OAAL,C,mCAMH,MAAnB,qB,6EakoBV,gB,6BACgB,OAAJ,I,mCAC2C,MAA7C,UAAY,UAAW,SAAc,OAAM,G,0FAmDnC,OAAJ,C,6BACC,OAAJ,I,kCrGtrC8ib,OqGtGjlb,EA+xCG,GAAQ,SA/xCX,EAgyCG,GAAO,GAhyCV,EAiyCG,GAAQ,M,IACR,OAAY,EE9qCZ,EAU8xyD,KAV9wyD,MACT,KASuxyD,OATvxyD,C,GACC,iBF9DF,QA4uCE,EAAO,GAAQ,EApyC1B,EAoyCqC,GAAQ,MApyC7C,EAqyCO,GAAO,E,CE9qCP,EAAM,EAAI,I,CFirCjB,OAxyCA,EAuyCG,GAAQ,KrG3wCL,EyIoUqC,U,mCpC28BY,OAAhD,KAAO,QAAW,UAAoB,2BAAN,K,gGAxB/B,gB,GAAA,0B,6BACkC,OAAJ,C,6BACE,OAAJ,I,6BACQ,OAApB,UAAI,GAAW,K,mCACuC,OAAnD,SAAe,IAAE,SAAU,QAAW,GAAJ,WAAe,G,kGA5RhE,gB,8BAOQ,eAAsB,C,6BADR,OAAnB,UAAc,I,8BAMT,eAAmB,C,6BADR,OAAhB,UAAW,I,6BASkC,OAA3B,WAAqB,I,6BACA,QAAJ,MAAb,U,6BACsB,OAAJ,MAAb,S,8BAKnB,I,EAAA,EAAS,S,GACrB,Q,EAAQ,U,GACR,oB,IrGl7BqihD,OqGhGp/gD,EAkhCR,EAAI,G,ErG7+BlD,C,WqG8+BK,iB,CACc,MAAC,YAAD,GAAW,GAxgCC,MAAM,GAA8B,GAAR,G,GAugCnC,qB,CAHvB,QAMA,EAAgB,KAAK,KACrB,IAGA,OAHW,MAAX,IrGv7Bk0hD,EAAK,GAAI,EAA1B,GA9CzzhD,KqGs+BiC,MAArB,GAA6B,KAAqB,IAAW,EAAK,EAAI,GAC1E,QAAmB,MACZ,C,8BAKP,MAAgB,KAAK,K,GACJ,MAAb,EAEA,OADA,QAAiB,GACjB,I,GAEA,IAAc,EAAW,WACvB,MAAS,S,GACX,QAAQ,QAAmB,Q,GAC3B,oB,GACQ,IAAc,EAAI,W,IrGx8BumjD,OqGtG5ojD,EAgjCmB,EAAI,GAhjCvB,EAijCmB,EAAI,GAFR,QrGnhCT,E,WqGyhCK,iB,CACc,MAAC,YAAD,GAAW,GApiCC,MAAM,GAA8B,GAAR,G,EAmiClC,aAA4B,GAA5B,EAA4B,OAAI,E,oCAQuE,MAA9H,wBAAsB,UAAY,gBAAc,UAAY,eAAa,UAAS,gBAA4C,GAA9B,UAAgB,UAAQ,UAAI,G,mFAlNjI,MAA0B,GAAV,G,GAEC,MAAb,GAAqB,KAAgB,EAAO,EAAW,GAAiB,WAE5E,MAAiB,KAAuB,EAAO,GAC/C,KAAgB,E,CA2NL,CAAP,UAA0B,UAAO,UAAO,U,4JAtmCW,W,8BAyG1C,eAAsB,C,6BADR,OAAnB,UAAc,I,iCAWR,MAAV,EAEA,OADA,cACA,IAEJ,EAAO,KACP,MACa,EAAO,GAAY,MAChC,QAAe,GAEX,YACA,EAAO,KACP,c,iCNgJkC,kBAhJnC,CMrEkB,a,KAiFb,iBAAwB,OAAO,EACnC,EAAM,GAAQ,K,8BAclB,MAAY,KAAK,KACjB,QAAO,qBAAuB,EAAM,I,mCAGe,UAAoB,0B,oCAVhE,CACG,IA2MA,UADV,KA1MU,M,GAmmCQ,IAv5BV,EAAS,OAAO,E,GAw5BP,IAv5BT,EAAQ,OAAO,C,2DAiCjB,I,EAAA,EAAY,KAAK,K,GACnB,iBAAsB,MAAN,EAAM,KAAN,EAAiB,MAAX,EAAW,aAAX,EAAqC,SAAe,kB,GAA1D,QAtVc,MAAM,GAA8B,GAuVpD,+BAA6B,O,EAD3B,C,SAEhB,kBAxV8B,MAAM,GAA8B,GAwV1C,+BAA6B,O,EACrD,gBAAyC,QAAZ,EAAM,KAAM,aACjC,OAA2B,SAAe,0BAA0B,KAAM,K,CACrF,Q,gCAGD,I,EAAA,yB,GAAA,S,IAuRyB,EAvRsC,E,EAuR/D,OAAyB,QAvRS,KAuRE,KAAX,EAvR+C,EAAtC,K,QAAlC,EAA6E,Q,oCADvE,oBAAyD,MAAzD,Y,8BA0B+E,OAArF,SAAkC,GAA2B,EAAgB,E,sCAS7E,M,yBAqDe,GACX,MAAC,aAAD,GAAC,EAAD,K,EAAA,QACO,OAAmB,GAD1B,C,MAGC,6BAAD,EACM,MADL,EACK,KrGtWwloB,E,EqGqW9loB,QAEO,OAAmB,GAF1B,C,CAJJ,QASA,OADA,OAAW,EACJ,C,CA9Da,MAAS,EAAS,K,GAzR5B,MA0RV,KA1RU,KA2RA,I,GACF,gB,GACQ,EAAM,M,GAEF,UAAO,uBAAc,EAAO,GAAO,OAAO,OAE9C,QAAuB,O,IAE/B,mB,IAmCQ,GAAqC,6BAAV,GAAR,EAAqD,MAAnC,EAAmC,KAAnC,EAAmC,K,CAC5E,W,CAnCA,MAAW,EAAM,K,GACL,MAAR,EACA,QAAwB,aAAxB,GAAwB,EAAxB,S,CAEA,MAA4B,KAC5B,O,GACI,GAAgB,kBGtcontB,OAAlU,EAAY,EAAM,OkC2B90C,aAD98pB,KlC1B+ntB,EAAM,M,KAAiL,QAAc,EAAO,EAAM,GAA3B,CAAkC,I,WAAiM,MAAb,EAAmB,OAAO,EAA2K,EAAS,E,OHsdrwuB,MAAb,EAGA,OADI,GAA2B,GAAR,EAAiB,GACjC,E,GAEH,QAAc,EAAO,EAAM,GAAO,OAAO,C,wCAhU1D,CACG,MA6ZV,KA7ZU,K,KA8ZA,aACF,I,OAKA,MANE,GAMF,GANE,EAMF,KAEsB,MAAd,EAAM,MAAc,EAAK,KAC7B,KAEI,I,GATA,IAAU,EAAM,W,GAEhB,UAAO,uBAAc,EAAO,MAAe,U,8BAkBN,OAAL,C,6BAO0B,MAAjB,mB,8BAiBzD,QAAW,E,qCAaP,mBACG,QAAW,IAAU,S,8BAY5B,I,EAAA,EAAuB,K,SACnB,YAGA,E,qBA3eG,CACG,MAigBV,EAjgBU,K,GAkgBF,oBAAwB,iBAAsB,EAAM,KAEpD,OAAO,K,IAGX,EAAiB,KAAkB,EADd,GAAuB,KAAqB,IAA5C,M,GAEjB,IAAe,KAAkB,OAAO,C,EA9B/B,MAAqB,MACf,QAEnB,IAAe,OACf,E,kBA4DJ,MAAsC,O,GA1iB5B,MA2iBV,EA3iBU,KA4iBA,I,GACF,iB,GAEY,EAAM,KAAU,OAAO,KAE3B,MAAoB,EAAM,K,GAEb,MAAT,IAAkB,GACG,I,EAAA,I,GAAA,S,IrGvkBoh9B,OAAqB,GqGukB/+8B,EAvqB1C,E,ErGqCtD,C,QqGkoBsC,EAArB,QACA,EAAM,GAAmB,E,CrGxkBwy9B,MAAN,EAAM,KqG6kBz09B,EAF8B,ErG3mBR,KAAV,EqG8mBZ,OADiB,MAAjB,IrG7kB869B,KAAiB,EAAM,KAA9C,GA9Cv69B,KqG4nBuB,I,IAEX,mBAgBQ,OAAO,KAdU,I,EAAA,I,GAAA,S,IrGllBqq+B,OAAqB,GqGklBho+B,EAlrBlC,E,ErGqCtD,C,QqG6oB8B,EAArB,Q,IACI,EAAM,K,CAKN,MAAiB,KAAkB,EAAO,GAAuB,GAAvB,M,GAEtC,IAAe,M9HxmB6zhC,MAAC,oBAAD,GAAmB,GAD10hC,MAAM,GAA8B,GAAR,G,I8H0mBjD,IAAe,MAAoB,I,QAC3B,OAAO,C,IAPf,KAAkB,EAAO,GAAiB,OAAO,I,EApFpD,MAAe,IAG5B,IAAe,MACf,IAAe,K,GADsB,EAErC,IAAe,K,GAAsB,GAEjC,QAAgB,G,GAChB,GANR,E,gCA8ByB,QAAuD,OAAhF,OAAyB,QAAW,UAAX,EAA2C,EAAO,K,6BAI3E,I,EAAA,EAAY,KAAK,KACK,I,GAClB,gB,EAAgB,EAAM,U,GACtB,gB,EAA6B,EAAM,S,IACnC,mBAAuB,MAAC,6CAAD,GAA4C,GA7nBrC,MAAM,GAA8B,GAAR,G,GA8nBlD,I,CAJZ,QAMO,EAAC,aAAD,GAAC,EAAD,KAAP,OAAO,QAAyC,OAA0B,iBAAgB,KAAY,GAAU,EAAW,MAApH,C,qCA1hBA,C,IA4oBH,EAAiB,QADrB,KA1oBU,KA2oBoC,G,GAEtC,IAAe,KACX,MAAM,GACD,OAAK,KAAL,mEAAD,GACkC,IA6EzC,SAAkC,OAAlC,G,EA7E0D,aA6E1D,WAAkC,KAAlC,EAAkC,O,GA3EnC,IAAe,KACP,OAAO,EADoB,G,OA2ElC,C,oCP/3BgF,EAgBgq9C,OAAgB,G,MO26Blw9C,SAAkC,GAAlC,EAAyE,EAAzE,QAAP,gBAAO,EAAP,G,8BAUA,MAAM,C,2DA0BiD,OAAL,C,6BASE,OAAJ,C,8BAYwB,OAAL,C,+FAuBnC,OAA7B,UAAgB,IAAE,Q,6BAGoD,OAArC,UAAa,IAAG,KAAY,WAAO,G,6BAKnB,OAAf,Q,6BA4IrC,MAAY,KAAK,K,G9H9kCjB,MAgDq9qD,GAhDr9qD,GAgDq9qD,EAhDr9qD,IAEA,MAAM,GAA8B,G8H6kCL,mC,GAC3B,gBAAiC,MAAM,EAAM,KACjD,OAAa,GAAN,E,uJAsLF,gB,6BAEmC,OAAL,C,mCACiD,OAAlD,KAAO,UAAK,GAAW,OAAiB,GAAN,K,sEA+EpC,OAAH,S,8BACqC,OAA7B,UAAS,GAAgB,U,iFACgB,OAAzB,UAAI,GAAe,E,wGATpE,UAAS,uBAAc,EAAG,IAAI,UAAe,E,gKAlES,OAArB,UAAe,E,sMAmFpD,UAAM,GAAgB,UAAM,GAAiC,W,8JA7JvB,OAAJ,C,6BAW7B,gB,qGI3vCyB,gBAAwD,OAAxD,QAA4B,SAAe,IAAE,SAA7C,C,6BAe9B,I,EAAA,EAAuB,U,GACnB,OAAS,EAAM,MAAQ,mB,MAEjB,EAAK,I,0CACgC,I,QAC3C,OAHJ,EAGgC,6BACzB,I,yMCvD8D,OAAL,C,gCAIhE,MAAmB,M,uBACC,MAAhB,EAGA,OADA,QAAuC,EACvC,IAEJ,MAAM,GAA8B,wM,mCAKiB,MAAtB,wB,kaC6V/B,UAAW,e,8CAEH,qB,sBAAsC,UAAU,Y,0FACpD,KA9WiF,UA8W9D,SACnB,UAAqB,K,8BAKjB,UAAe,eAAO,KAEtB,I,EAAA,Y,GAAc,MAAd,GAAc,GAAd,GAEgB,MAAZ,WAAoB,aAAY,W,4CACjB,UAAW,YA7XyB,U,EAAM,S,OA6X/B,U,OA7X8C,K,OA6XxE,UAAU,c,gCACV,UAAW,U,iCAGV,UAAK,K,0CACN,UAAK,Y,4FAlBjB,c,oDAsBI,aAAS,W,yBAtBb,sBAsBI,aAAS,WAtBb,E,0MAnE+B,S,gBAM/B,MAAkB,EAClB,EAAuC,EAAK,KHhTwob,EAAe,OAAO,K,GAAuC,MAAjB,IAAyB,KAAY,GAAe,OAAO,E,GAAqC,KAAY,GAAU,OAAO,E,GAAgF,YAAe,EAAiF,IAAL,GAAvD,EAAc,SAAwY,OAArF,OAAW,EAAc,EAAzB,GAA4F,E,IAA5Q,QAA6C,OAAW,EAA8P,EAAW,OADh6c,MGwUI,C,GAEO,MAAV,Q,I5Fy4ZQ,S4Fz4ZR,G5Fy4ZQ,QAAX,MAAW,M4Fx4ZA,MA+E22kb,KA/E32kb,I,IH1Uqoe,SAAY,EAA8I,OAA3E,OAAW,EAAc,EAAzB,GAAkF,EAA8H,EAAc,OAAyB,EAAW,OAD/9e,G,EG0SU,MAAY,KAAM,QAAS,KAAT,E,uCAyD/B,QAAa,G,mCAQA,2D,gFA4B0B,OAAf,M,8BACuD,OxD9XpB,GAAiB,MA6Dmke,GA7Dlje,K,mHwD0OzE,MAAhB,UAAO,OACX,eAAe,MACR,E,iGAKP,OADA,eAAe,KACR,I,oGZ+KiB,kBAnSrB,CY5DwD,a,GAuL1C,MAAT,EAAiB,W,GACjB,IAAU,KAAW,W,GACrB,IAAU,M,GACF,UAAO,uBAAc,EAAO,MAAU,gB,GAItC,UAAO,uBAAc,EAAO,MAArB,C,MhJ5HipN,wBgJ8HxpN,OjJ7OR,KA2CS,EAAb,QChDR,KAAkB,GAAe,IgJkPb,G,+B3GjI65P,OAAtF,GAAtB,UAAO,mBAAU,SAA4G,I,oC9C6J97P,EAAkB,OAAkC,GAjSP,GAiSmC,M,OAMhF,EAAY,KyJnBR,UAAO,uBAAc,KAgDV,KjJ5SP,KA2CS,EAAb,QCoEkjT,EApH1jT,GAAkB,IgJiQwB,IzJqBtC,EAAY,I,uG0J1SN,gB,6BAEA,gB,6BAoBN,I,EAAA,EAAqD,KAE/B,EAAe,U,GAC7B,S,I5GMb,UACU,G4GPqC,UAiCnC,E,E5GgBJ,C,e4GhDiB,WAAe,EAAS,Q,I5GU+C,KAAT,EAC1F,IACC,EAAS,S4GXoD,UA+B/C,E,E5GgBJ,C,Q4G7CS,E,IALR,IASA,EATA,IAQA,EAAY,U,SAEL,CACI,I,EAAA,IAAM,G,GAAN,S,I5GOnB,Y4GPuD,EAAM,GAuBlD,E,E5GgBJ,C,Q4GvCY,E,GAAP,KACA,UACa,EAAM,SAAM,EAAQ,IAC5B,aAAqC,GAArC,EAAqC,QAAe,MAAO,O,CAEpE,UAAY,EACZ,gCAlBJ,MAoBI,EAIJ,OADmB,OAJf,EAAoB,YAIxB,EAAmB,GAAU,GACtB,C,8BAMP,MAAqD,KAEjD,4BACA,EAAoB,UAED,IAAf,YAAkB,UAAY,G,IAJtC,IAYa,GAPR,aAAqC,GAArC,EAAqC,QAAW,MAOxC,eAAb,EAAa,IAAR,MAAQ,aAAS,I,EAAA,IAAM,MAAN,IlJzCd,KA2CS,EAAb,QCEkG,EAlD1G,GAAkB,GAAe,I,CiJgDV,MAAnB,KAAmB,IAAU,E,iCAIV,IAAf,UAAkB,WACtB,gB,GAAO,MAAP,Q,I7FqoaY,SA9la0B,GA8la1B,QAAX,MAAW,M6FpoaI,MAoC03/b,GApCp3/b,EAoCo3/b,E,6JG3B53/b,UAAV,EAAU,E,+NCzDV,uD,sLAEW,UAgEV,UAhEoB,UAAV,S,qKAFX,qD,sMAAA,wC,MAAR,kBAAQ,UAAR,S,qPA+D4C,2D,oLC+SxC,KAAoB,OAAc,eAzYuD,W,4DA2YvE,eAAd,UAAc,S,gCADlB,Y,6CAGI,UAAc,KAEd,0B,sBAAsC,eAAU,Y,mHALpD,sBAGI,UAAc,KAHlB,E,gNAFI,yD,iKA/ZZ,qC,gCAAA,K,iNAAA,2D,4PCmDyG,uD,qMAXxF,MAa+E,UAbxF,C,kBAoEuB,UApES,GAawD,UAbxD,S,qFAAjB,Y,mKAWkF,2C,oMAAA,yB,MAZjD,eAYyC,GAAQ,UAAR,S,sPAoDlF,2D,6DCuDf,MAlEQ,aAiEqD,EACvD,OAEN,K,+HAtEI,UAAmB,U,KAsDhB,KAGL,kB,2BAxDE,UAuE6C,GAAQ,UAAR,S,kHAE7C,GAF6E,UAE9D,W,oFArEX,eAAW,KAAM,MAAM,GAAwB,iC,MAC5C,a,qBAAA,O,8KCrFkC,OAAZ,YAAQ,S,8BAGjC,UAAS,WAAQ,EACjB,WAAQ,UAAO,EAAR,IAAe,UAAS,OAAO,EAA/B,GACH,YAAQ,W,YAmBZ,MAAkB,OAAS,OAE3B,EjER2D,GAAiB,MiEO1D,GAAgB,GjEP2D,M4BCzD,SAGzC,SAo1BwI,WACvI,GAAU,EAt1BS,EAq1B4E,EAC/C,EAAY,GAr1BtC,aAIlB,SAAS,OAAO,OAAhB,EAA6C,SAi1BjD,GAAU,EAr1ByD,EAq1BtC,EADuF,EACxD,GqCv0BxD,OAAW,EACX,OAAO,EACP,OAAO,C,CAjCW,M,gCAKd,YAAQ,UAAM,OAAO,KACzB,MAAc,UAAS,WAGvB,OAFA,UAAS,WAAQ,KACjB,WAAQ,UAAO,EAAR,IAAe,UAAS,OAAO,EAA/B,GACP,EAAO,KAAP,G,2FCLM,gB,6BApBd,qB,6BA4Ba,gB,6BA0CL,QAAiD,MAA1C,UAAiC,K,iCtB+BrC,kB,GsBkBJ,SAxCgB,KAAkB,U,6BAUjC,UACA,I,EAAA,G,EAAA,KA7BQ,KAAiC,gBAAwC,GAAzE,EAAyE,KA6BhD,MAAjC,KAAiC,I,kCtB8Gd,kBA9ChB,CsBnCJ,a,GAgCS,IAAU,K,IAGV,oB,I9IX4rE,UAAiC,uBAAc,EAAO,MA1G1vE,MAAM,GAAiC,GAfzB,wB8IsIF,OAAO,C,CAEG,MAAC,sBAAD,GAAqB,GArDhD,MAAM,GACW,GAAR,G,IA8CY,UAAiC,uBAAc,KAAkB,GAAe,OAAO,I,mCtBgFjG,kBA9EH,CsBnCJ,aAkDW,I,GACF,Y,GACQ,UAAiC,uBAAc,KAAkB,GACjE,OAAO,M,IAEf,mBAAgB,OAAO,E,GAGf,UAAiC,uBAAc,EAAO,MACtD,OAAO,C,+BAOvB,MAAY,UAGZ,OADA,UAAS,KACF,C,6BAIK,OAAJ,I,8BAGR,MAAc,UAAa,KAC3B,EAAmB,GAAP,EAAO,Q,GACf,UAAW,GAAiB,GAC5B,UAAS,EACT,UAAa,KACb,UAAW,GAAS,EAAS,U,KAEJ,OAmGjC,EAAqC,U,GAG1B,EAAU,KAtGb,KAwGJ,KAxGsB,EAAlB,KAyGJ,KAAa,EACb,EAAU,GA1GN,U,CxBkBgiF,EAtB9hF,IAA+B,G,QyB1Iq2J,KAAK,KAAS,UAAsC,UAAa,GAAW,GAX71J,IzB2K26E,EAjBjhF,O,2CAjCpB,KAwCC,KAAwB,K,SAU4gF,EAR1hF,IAA+B,E,mCwBuBrC,iBACA,EAAW,KAAe,E,8BAM9B,MAAU,mB,GACC,MAAP,IAAgB,EAAI,KAAL,CACf,I,EAAA,EAAY,EAAI,KAGhB,OAFA,QAAsB,EAAO,G3J1LhB,KA0CmB,EAAhC,GAAO,GAkLR,ICvH43G,KA3Gn4G,GAAkB,GAAmB,K0JkMtB,C,CAEX,OAAO,C,8BC7L8wN,UAAc,UAA8B,UAAa,GAAW,GAVztN,G,mCDyN1D,MAArE,0BAAwB,UAAU,KAAiB,GAAb,WAA6B,G,gHxBzNvD,gB,8DAkBH,aAAV,GAAU,EAAV,KAAU,G,8BAUT,6BAAwC,OAAL,MAAnC,EAAmC,KAAnC,EAAmC,I,6B8CnEoC,I9CuExE,QACA,EAAiC,K,UAEd,UAAf,kBAAe,EAAf,IACA,EAAmB,EAAS,KyB1BqsB,GAA3C,EAAS,KAAgD,EAAa,MAAwB,EAAY,UAAoF,EAAgB,QAAqB,GAAsR,EAA2B,MAAb,GAAgC,GAAX,WAA8B,WAAkB,K,GAAgC,MAAP,GAAgB,EAAI,K,GAA8P,MAAb,G,M5JDnhD,KA0CmB,EAAhC,GAAO,GAmC0E,ICjB1F,EAlEC,GAAkB,GAAmB,G,YAmEhC,UAAoB,GDvEb,KA2CS,EAAb,GA3CmB,GCsEqE,EA3EhG,GAAkB,GAAe,G,K2JgBixC,CAAqC,I,EAAA,EAAY,EAAI,KAA+C,QAAsB,EAAO,G5J6N54C,SAAe,KAlJO,GAlCrB,EAAhC,GAAO,GAAc,I4JzCi7C,EAAuoK,GAAkB,G,+CzBmD/lN,G,mBnI6CJ,KAAe,I,EAhEX,O,2CAkEJ,K,EAzDI,GAAO,M,CmIYP,MnI0CR,EmIzCQ,QAAqB,EAAuB,GAAP,G,oCAuBvB,OAAd,GAA2C,OAArB,EAA2B,WAKzC,IACZ,EAAa,OAAyB,+CAA6C,KAA7C,8FACoE,GAF9F,QAAa,EAAb,IAGZ,GAAyB,KAAK,KAAS,KAAS,E,wG2B5G3C,gB,mCAE6E,MAAnD,mCAAiC,UAAgB,G,kEAjB1B,OAAJ,C,6BACpB,gBAAoB,OAAN,MAAd,EAAc,KAAd,EAAc,I,8BAIxB,GAAd,GAAN,WAA0C,GAAc,EAAO,WAA3C,O,8BAKpB,UAAM,GAAW,GAAc,EAAO,W,4GClBG,MAAV,IAAE,UAAM,G,kPKH/B,gBAAwC,OAAxC,QAA0B,UAA1B,C,6DAqBH,gB,8BAE6E,OAAjB,S,gCACgC,OAAjC,UAAS,GAAS,EAAS,E,mCAE7D,gBAA6C,OAA7C,QAA0B,UAAS,WAAnC,C,yHCXlC,MAAM,GAA+B,0C,CAbqC,E,mHCWT,OAAtB,2BAAN,MAAiB,SAAO,S,kCAGoD,OAD7G,IAAU,SACN,iBAAqC,EAAM,SAAW,cAAW,KAAM,KAAO,aAAO,KAAM,MAAS,W,yCAExG,EAAC,EAAU,GAAH,GAAP,eAAuB,IAAS,GAAJ,WAA7B,EAA+C,IAAM,eAAO,MAAP,EAAO,QAAP,GAAuB,OAA5E,GAAqD,QAAqB,EAArB,GAAuB,C,kHC2B5E,QAAQ,SAAS,UAAa,K,yGAM9B,WAAW,UAAa,KAAc,E,+GAzClC,c,6BAIA,WAAW,UAAc,E,kHAc7B,UAAa,GAAQ,E,gCASrB,I,MnC1BqF,EAQosB,OmCkB5wB,Y,EAAW,E,EAAA,K,kBjIDuD,EAErF,UAoBE,I,MiIrBiF,GAAW,KAExF,EAAa,GAAoD,E,kHA0FjE,QAAQ,GACH,YACD,WAAY,EACZ,U,iCjIO4C,gBAGtC,I,GAAd,EAAsB,E,GAAR,QiIFY,gB,GAAA,QAAuB,WAAvB,EACN,I,OjICpB,EAAsB,E,SiIEV,UACA,WAAY,EAEZ,S,uGAzFR,aAAa,U,8BAIb,S,sFAGqD,MAAtB,gBAAc,UAAM,G,uGAMiC,OAApB,UAAM,GAAQ,E,wCAG9E,UAAO,Y,EAAW,E,EAAA,K,kBjIFrB,EAGH,UAjBE,I,MiIgB2E,GAAW,G,8GA0BlF,QAAQ,aAAc,M,EAAK,K,mBAAE,O,mCAI7B,UAAO,YAAY,UAAc,I,qQzCydrC,E2CxjBI,E/CUsF,O,OI8iBhF,OAAV,E2CvjBI,E3CujBJ,WAAU,GAAV,G2CtjBQ,YAAwB,IACxB,QAAa,GACb,UAAsB,GAE1B,UAAU,GAAK,EAAL,E,2K5BRS,gB,6BAIiB,OAAL,S,6BACK,OAAL,S,6BACS,OAAR,S,8BAGhC,MAAW,KAAK,KAChB,OAAa,KACb,OAAa,EACb,OAAa,EACb,UAAa,C,6BAUb,OAAO,S,gCAKH,UAAU,OAAO,EACrB,MAAW,KAAK,KAChB,EAAW,KAAK,KAIhB,OAHA,OAAa,EACb,OAAa,EACb,WAAW,GACJ,C,qCAIH,YAAU,OACd,QAAQ,IACD,E,wCAIF,MACL,QAAQ,IACD,E,6G8BvDW,UAAU,qBAAV,EAAU,G,8BACL,UAAa,C,q+CxCeD,E,GAmBH,E,EAND,E,EAtBN,E,EgCVX,E,GAEe,E,sCViFtB,sD,wBzBjDA,sD,4BkDduD,IA4O9D,EAAgB,OAAe,EAAM,KAAS,G,2CrEpKvB,mBtEvFmB,EAoCqmE,GsEkDtoE,EATsE,EAAU,GAApD,EAW/B,GAXyE,EAAU,E,6CgEsBzF,U,CAHJ,Q,GAiBI,IAAW,K,CACf,MAtCO,EAsCK,GAAmB,G,GAC3B,IAAU,K,IACH,gBAEyB,MAAhB,EAAM,KAAgB,GAAkB,EAAM,KA1C3D,EA0CkE,MAFzE,EAOU,GAAN,E,MARuC,EAAO,I,MAFd,EAAO,KArC3C,OAAO,C,CKgLO,CAAV,EAAoC,EAAW,E,2BCxJ/C,oBAAiB,W,QA2B0B,E3LgL3C,EAAkB,OAAkC,GAjSP,GAiSmC,M,OAMhF,EAAY,K,K2L9MR,+B,EAgC86S,EA/Bz6S,K,EAuBkC,8C,iBvBtG3B,UAAgB,gBAA5B,EAA4B,G,CuBsGqD,GAA1C,GAvBpB,GAAyB,EA+Bk4S,G3LgLl7S,EAAY,I,gCyIjPb,6C,kBAKH,MAAiB,KAAoB,GACrC,EAAoB,EAAM,KACtB,OAAsB,EAAY,GAClC,OAAqB,GAAqB,GAE9C,OADA,EAAU,GAAM,EAAO,EAAW,GAC3B,C,CAVJ,S,gCAnCA,6C,kBAKH,MAAiB,KAAoB,GACrC,EAAoB,EAAM,KACtB,OAAwB,EAAY,GACpC,OAAoB,GAAqB,GAE7C,OADA,EAAU,GAAM,EAAO,EAAW,GAC3B,C,CAVJ,S,iDgB4IwE,QAAc,OAA5B,OAAc,QAAS,KAAT,E,sBMqL9C,OAA7B,OAAkB,EAAM,K,sBCtU3B,OHgEU,S,iC6B2K6D,OAApE,OAAiC,MAAhB,WAAsB,EAAa,M,EAAU,KpDsG3D,MoDtG2D,KpDsG3D,EAAuB,M,YAAuC,OAAf,OAAQ,E,CAAvD,O,kEsDzXHkM,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAarP,QAGrB,IAAIC,EAASiP,EAAyBE,GAAY,CAGjDpP,QAAS,CAAC,GAOX,OAHAuP,EAAoBH,GAAUI,KAAKvP,EAAOD,QAASC,EAAQA,EAAOD,QAASmP,GAGpElP,EAAOD,OACf,CCnB0BmP,CAAoB,K,MDF1CD,C","sources":["webpack://SuckerPuncherReimuSan/webpack/universalModuleDefinition","webpack://SuckerPuncherReimuSan/../../../../../Trace.common.kt","webpack://SuckerPuncherReimuSan/../../../../../AtomicFU.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/Async.kt","webpack://SuckerPuncherReimuSan/../../../../../CancellableContinuation.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/Game.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/Logger.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/Main.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/Platform.kt","webpack://SuckerPuncherReimuSan/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/text/string.kt","webpack://SuckerPuncherReimuSan/../../../../../commonMainSources/libraries/stdlib/common/src/generated/_Collections.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/Resources.kt","webpack://SuckerPuncherReimuSan/../../../../../commonMainSources/libraries/stdlib/src/kotlin/util/Result.kt","webpack://SuckerPuncherReimuSan/../../../../../commonMainSources/libraries/stdlib/src/kotlin/coroutines/Continuation.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/Size.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/TouchEvent.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/battle/BattleJudgement.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/battle/BattleScenario.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/battle/anim/BattleAnim.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/battle/BattleScene.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/battle/BattleSceneState.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/battle/BattleSceneStateResult.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/battle/BattleStateManager.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/battle/BattleStatusSnapshot.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/battle/BattleTurn.kt","webpack://SuckerPuncherReimuSan/../../../../../commonMainSources/libraries/stdlib/src/kotlin/util/Preconditions.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/battle/MoveKind.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/battle/MoveSnapshot.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/battle/NpcMoveSelector.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/battle/anim/AbilityPopupAnimHandler.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/battle/anim/CharacterDamageAnimHandler.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/battle/anim/CharacterEnteringAnimHandler.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/battle/anim/CharacterExitingAnimHandler.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/battle/anim/CharacterHeldItemAnimHandler.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/battle/anim/CharacterStatDownAnimHandler.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/battle/anim/CharacterStatUpAnimHandler.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/battle/anim/CharacterStatusBarEnteringAnimHandler.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/battle/anim/CharacterStatusBarExitingAnimHandler.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/battle/anim/CharacterStatusBarHpUpdatingAnimHandler.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/battle/anim/ParallelAnimHandler.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/battle/anim/SerialAnimHandler.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/battle/components/AbilityPopup.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/battle/components/BattleBackground.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/battle/components/BattleSceneComponents.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/battle/components/Character.kt","webpack://SuckerPuncherReimuSan/../../../../../commonMainSources/libraries/stdlib/src/kotlin/util/Lazy.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/battle/components/CharacterStatusBar.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/battle/components/MessageFrame.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/battle/components/MoveMenu.kt","webpack://SuckerPuncherReimuSan/../../../../../commonMainSources/libraries/stdlib/src/kotlin/collections/Collections.kt","webpack://SuckerPuncherReimuSan/../../../../../commonMainSources/libraries/stdlib/src/kotlin/util/Standard.kt","webpack://SuckerPuncherReimuSan/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/dynamic.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/result/ResultScene.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/result/ResultSceneArgs.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/result/components/ResultBackground.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/result/components/ResultMessage.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/result/components/ShareButton.kt","webpack://SuckerPuncherReimuSan/../../../../../runtime/long.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/battle/anim/BackgroundFadeInAnimHandler.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/battle/anim/BattleAnimHandler.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/battle/anim/DelayAnimHandler.kt","webpack://SuckerPuncherReimuSan/../../../../src/main/kotlin/net/aridai/suckerreimu/battle/anim/MessageAnimHandler.kt","webpack://SuckerPuncherReimuSan/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/math.kt","webpack://SuckerPuncherReimuSan/../../../../../<js-code>","webpack://SuckerPuncherReimuSan/../../../../../commonMainSources/libraries/stdlib/src/kotlin/coroutines/CoroutineContext.kt","webpack://SuckerPuncherReimuSan/../../../../../commonMainSources/libraries/stdlib/common/src/generated/_Arrays.kt","webpack://SuckerPuncherReimuSan/../../../../../commonMainSources/libraries/stdlib/common/src/generated/_Ranges.kt","webpack://SuckerPuncherReimuSan/../../../../../commonMainSources/libraries/stdlib/common/src/kotlin/ExceptionsH.kt","webpack://SuckerPuncherReimuSan/../../../../../commonMainSources/libraries/stdlib/src/kotlin/collections/AbstractMap.kt","webpack://SuckerPuncherReimuSan/../../../../../commonMainSources/libraries/stdlib/src/kotlin/coroutines/CoroutineContextImpl.kt","webpack://SuckerPuncherReimuSan/../../../../../commonMainSources/libraries/stdlib/src/kotlin/text/Strings.kt","webpack://SuckerPuncherReimuSan/../../../../../commonMainSources/libraries/stdlib/src/kotlin/coroutines/intrinsics/Intrinsics.kt","webpack://SuckerPuncherReimuSan/../../../../../commonMainSources/libraries/stdlib/src/kotlin/internal/progressionUtil.kt","webpack://SuckerPuncherReimuSan/../../../../../commonMainSources/libraries/stdlib/src/kotlin/random/Random.kt","webpack://SuckerPuncherReimuSan/../../../../../commonMainSources/libraries/stdlib/src/kotlin/random/XorWowRandom.kt","webpack://SuckerPuncherReimuSan/../../../../../commonMainSources/libraries/stdlib/src/kotlin/ranges/PrimitiveRanges.kt","webpack://SuckerPuncherReimuSan/../../../../../commonMainSources/libraries/stdlib/src/kotlin/ranges/ProgressionIterators.kt","webpack://SuckerPuncherReimuSan/../../../../../commonMainSources/libraries/stdlib/src/kotlin/ranges/Progressions.kt","webpack://SuckerPuncherReimuSan/../../../../../commonMainSources/libraries/stdlib/src/kotlin/text/Appendable.kt","webpack://SuckerPuncherReimuSan/../../../../../runtime/typeCheckUtils.kt","webpack://SuckerPuncherReimuSan/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/reflect/JsClass.kt","webpack://SuckerPuncherReimuSan/../../../../../commonMainSources/libraries/stdlib/src/kotlin/text/Char.kt","webpack://SuckerPuncherReimuSan/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/text/char.kt","webpack://SuckerPuncherReimuSan/../../../../../runtime/rangeTo.kt","webpack://SuckerPuncherReimuSan/../../../../../src/kotlin/exceptions.kt","webpack://SuckerPuncherReimuSan/../../../../../commonMainSources/libraries/stdlib/src/kotlin/util/Tuples.kt","webpack://SuckerPuncherReimuSan/../../../../../jsMainSources/libraries/stdlib/js/runtime/primitiveCompanionObjects.kt","webpack://SuckerPuncherReimuSan/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/collections.kt","webpack://SuckerPuncherReimuSan/../../../../../runtime/kotlinHacks.kt","webpack://SuckerPuncherReimuSan/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/collections/AbstractMutableCollection.kt","webpack://SuckerPuncherReimuSan/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/collections/AbstractMutableList.kt","webpack://SuckerPuncherReimuSan/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/collections/AbstractMutableMap.kt","webpack://SuckerPuncherReimuSan/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/collections/AbstractMutableSet.kt","webpack://SuckerPuncherReimuSan/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/collections/ArrayList.kt","webpack://SuckerPuncherReimuSan/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/collections/HashMap.kt","webpack://SuckerPuncherReimuSan/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/collections/HashSet.kt","webpack://SuckerPuncherReimuSan/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/collections/InternalHashCodeMap.kt","webpack://SuckerPuncherReimuSan/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/coroutines/SafeContinuationJs.kt","webpack://SuckerPuncherReimuSan/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/coroutines/cancellation/CancellationException.kt","webpack://SuckerPuncherReimuSan/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/reflect/KClassImpl.kt","webpack://SuckerPuncherReimuSan/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/reflect/primitives.kt","webpack://SuckerPuncherReimuSan/../../../../../builtins/Library.kt","webpack://SuckerPuncherReimuSan/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/reflect/reflection.kt","webpack://SuckerPuncherReimuSan/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/text/StringBuilderJs.kt","webpack://SuckerPuncherReimuSan/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/text/stringsCode.kt","webpack://SuckerPuncherReimuSan/../../../../../builtins/Char.kt","webpack://SuckerPuncherReimuSan/../../../../../builtins/Enum.kt","webpack://SuckerPuncherReimuSan/../../../../../runtime/arrays.kt","webpack://SuckerPuncherReimuSan/../../../../../runtime/bitUtils.kt","webpack://SuckerPuncherReimuSan/../../../../../runtime/charSequence.kt","webpack://SuckerPuncherReimuSan/../../../../../commonMainSources/libraries/stdlib/src/kotlin/CharCode.kt","webpack://SuckerPuncherReimuSan/../../../../../runtime/numberConversion.kt","webpack://SuckerPuncherReimuSan/../../../../../commonMainSources/libraries/stdlib/unsigned/src/kotlin/UShort.kt","webpack://SuckerPuncherReimuSan/../../../../../runtime/collectionsHacks.kt","webpack://SuckerPuncherReimuSan/../../../../../runtime/compareTo.kt","webpack://SuckerPuncherReimuSan/../../../../../runtime/coreRuntime.kt","webpack://SuckerPuncherReimuSan/../../../../../runtime/hacks.kt","webpack://SuckerPuncherReimuSan/../../../../../runtime/longjs.kt","webpack://SuckerPuncherReimuSan/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/numbers.kt","webpack://SuckerPuncherReimuSan/../../../../../runtime/reflectRuntime.kt","webpack://SuckerPuncherReimuSan/../../../../../src/kotlin/coroutines_13/CoroutineImpl.kt","webpack://SuckerPuncherReimuSan/../../../../../src/kotlin/coroutines_13/IntrinsicsJs.kt","webpack://SuckerPuncherReimuSan/../../../../../src/kotlin/jsOperators.kt","webpack://SuckerPuncherReimuSan/../../../../../commonMainSources/libraries/stdlib/src/kotlin/collections/AbstractCollection.kt","webpack://SuckerPuncherReimuSan/../../../../../commonMainSources/libraries/stdlib/src/kotlin/collections/AbstractList.kt","webpack://SuckerPuncherReimuSan/../../../../../commonMainSources/libraries/stdlib/src/kotlin/collections/Maps.kt","webpack://SuckerPuncherReimuSan/../../../../../commonMainSources/libraries/stdlib/src/kotlin/collections/AbstractSet.kt","webpack://SuckerPuncherReimuSan/../../../../../commonMainSources/libraries/stdlib/src/kotlin/collections/PrimitiveIterators.kt","webpack://SuckerPuncherReimuSan/../../../../../jsMainSources/core/builtins/src/kotlin/Unit.kt","webpack://SuckerPuncherReimuSan/../../../../../src/generated/_ArraysJs.kt","webpack://SuckerPuncherReimuSan/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/collections/EqualityComparator.kt","webpack://SuckerPuncherReimuSan/../../../../../commonMainSources/libraries/stdlib/common/src/generated/_Strings.kt","webpack://SuckerPuncherReimuSan/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/collections/InternalMap.kt","webpack://SuckerPuncherReimuSan/../../../../../commonMainSources/libraries/stdlib/common/src/kotlin/MathH.kt","webpack://SuckerPuncherReimuSan/../../../../../runtime/coroutineInternalJS.kt","webpack://SuckerPuncherReimuSan/../../../../../commonMainSources/libraries/stdlib/src/kotlin/collections/Iterables.kt","webpack://SuckerPuncherReimuSan/../../../../../commonMainSources/libraries/stdlib/src/kotlin/collections/MutableCollections.kt","webpack://SuckerPuncherReimuSan/../../../../../commonMainSources/libraries/stdlib/src/kotlin/coroutines/ContinuationInterceptor.kt","webpack://SuckerPuncherReimuSan/../../../../../Job.kt","webpack://SuckerPuncherReimuSan/../../../../../AbstractCoroutine.kt","webpack://SuckerPuncherReimuSan/../../../../../Await.kt","webpack://SuckerPuncherReimuSan/../../../../../Builders.common.kt","webpack://SuckerPuncherReimuSan/../../../../../CancellableContinuationImpl.kt","webpack://SuckerPuncherReimuSan/../../../../../DispatchedTask.kt","webpack://SuckerPuncherReimuSan/../../../../../CompletionHandler.kt","webpack://SuckerPuncherReimuSan/../../../../../AtomicFU.common.kt","webpack://SuckerPuncherReimuSan/../../../../../CompletionState.kt","webpack://SuckerPuncherReimuSan/../../../../../CoroutineDispatcher.kt","webpack://SuckerPuncherReimuSan/../../../../../CoroutineExceptionHandler.kt","webpack://SuckerPuncherReimuSan/../../../../../EventLoop.common.kt","webpack://SuckerPuncherReimuSan/../../../../../Exceptions.common.kt","webpack://SuckerPuncherReimuSan/../../../../../JobSupport.kt","webpack://SuckerPuncherReimuSan/../../../../../Concurrent.kt","webpack://SuckerPuncherReimuSan/../../../../../LinkedList.kt","webpack://SuckerPuncherReimuSan/../../../../../Synchronized.kt","webpack://SuckerPuncherReimuSan/../../../../../MainCoroutineDispatcher.kt","webpack://SuckerPuncherReimuSan/../../../../../Unconfined.kt","webpack://SuckerPuncherReimuSan/../../../../../StateFlow.kt","webpack://SuckerPuncherReimuSan/../../../../../AbstractSharedFlow.kt","webpack://SuckerPuncherReimuSan/../../../../../FlowExceptions.common.kt","webpack://SuckerPuncherReimuSan/../../../../../NullSurrogate.kt","webpack://SuckerPuncherReimuSan/../../../../../SafeCollector.common.kt","webpack://SuckerPuncherReimuSan/../../../../../Emitters.kt","webpack://SuckerPuncherReimuSan/../../../../../Share.kt","webpack://SuckerPuncherReimuSan/../../../../../Transform.kt","webpack://SuckerPuncherReimuSan/../../../../../Reduce.kt","webpack://SuckerPuncherReimuSan/../../../../../ArrayQueue.kt","webpack://SuckerPuncherReimuSan/../../../../../DispatchedContinuation.kt","webpack://SuckerPuncherReimuSan/../../../../../CoroutineContext.kt","webpack://SuckerPuncherReimuSan/../../../../../ThreadContext.kt","webpack://SuckerPuncherReimuSan/../../../../../Scopes.kt","webpack://SuckerPuncherReimuSan/../../../../../Symbol.kt","webpack://SuckerPuncherReimuSan/../../../../../Cancellable.kt","webpack://SuckerPuncherReimuSan/../../../../../Window.kt","webpack://SuckerPuncherReimuSan/../../../../../CoroutineExceptionHandlerImpl.kt","webpack://SuckerPuncherReimuSan/../../../../../Debug.kt","webpack://SuckerPuncherReimuSan/../../../../../Dispatchers.kt","webpack://SuckerPuncherReimuSan/../../../../../EventLoop.kt","webpack://SuckerPuncherReimuSan/../../../../../Exceptions.kt","webpack://SuckerPuncherReimuSan/../../../../../JSDispatcher.kt","webpack://SuckerPuncherReimuSan/../../../../../FlowExceptions.kt","webpack://SuckerPuncherReimuSan/../../../../../SafeCollector.kt","webpack://SuckerPuncherReimuSan/../../../../../StackTraceRecovery.kt","webpack://SuckerPuncherReimuSan/../../../../../ThreadLocal.kt","webpack://SuckerPuncherReimuSan/../../../../../CoroutineStart.kt","webpack://SuckerPuncherReimuSan/../../../../../Undispatched.kt","webpack://SuckerPuncherReimuSan/../../../../../ProbesSupport.kt","webpack://SuckerPuncherReimuSan/../../../../../commonMainSources/libraries/stdlib/src/kotlin/text/StringBuilder.kt","webpack://SuckerPuncherReimuSan/../../../../../CompletionHandler.common.kt","webpack://SuckerPuncherReimuSan/../../../../../SchedulerTask.kt","webpack://SuckerPuncherReimuSan/../../../../../CoroutineScope.kt","webpack://SuckerPuncherReimuSan/../../../../../Delay.kt","webpack://SuckerPuncherReimuSan/webpack/bootstrap","webpack://SuckerPuncherReimuSan/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SuckerPuncherReimuSan\"] = factory();\n\telse\n\t\troot[\"SuckerPuncherReimuSan\"] = factory();\n})(this, () => {\nreturn ",null,null,"package net.aridai.suckerreimu\n\nimport kotlinx.browser.window\nimport kotlinx.coroutines.CoroutineScope\nimport kotlinx.coroutines.Dispatchers\nimport kotlinx.coroutines.ExperimentalCoroutinesApi\nimport kotlinx.coroutines.Job\nimport kotlinx.coroutines.launch\nimport kotlinx.coroutines.suspendCancellableCoroutine\nimport kotlin.coroutines.CoroutineContext\n\n/**\n * Coroutineを起動する。\n */\ninternal fun launchCoroutine(context: CoroutineContext = Dispatchers.Main.immediate, block: suspend () -> Unit): Job {\n    return CoroutineScope(context).launch { block.invoke() }\n}\n\n/**\n * アニメーション更新処理を開始する。\n *\n * @param duration アニメーション期間 (ミリ秒)\n * @param onUpdated 更新用コールバック (引数には進捗率 0.0 ~ 1.0 が指定される。)\n * @param onFinished アニメーション終了コールバック\n */\ninternal fun startAnimUpdater(duration: Long, onUpdated: (Float) -> Unit, onFinished: () -> Unit): AnimCancellation {\n    //  アニメーション期間が0ミリ秒の場合\n    if (duration == 0L) {\n        onUpdated(1.0f)\n        onFinished()\n\n        return AnimCancellationImpl()\n    }\n\n    //  アニメーション開始段階のタイムスタンプ\n    var startingTimestamp: Double? = null\n\n    //  キャンセル用オブジェクト\n    val cancellation = AnimCancellationImpl()\n\n    //  アニメーション用のフレームが呼ばれたとき。\n    fun onFrameCalled(timestamp: Double) {\n        //  初回のタイムスタンプを記録しておく。\n        if (startingTimestamp == null) startingTimestamp = timestamp\n\n        //  アニメーションを開始してからの経過時間を求めて、進捗率を算出する。\n        val deltaTimeInMs = timestamp.toLong() - startingTimestamp!!.toLong()\n        val progress = (deltaTimeInMs.toFloat() / duration).coerceIn(minimumValue = 0.0f, maximumValue = 1.0f)\n        val shouldContinue = deltaTimeInMs < duration\n\n        //  更新用コールバックを呼び出して進捗率を通知する。\n        onUpdated(progress)\n\n        //  アニメーションが継続している場合\n        if (shouldContinue) {\n            //  次のアニメーションフレームを予約する。\n            cancellation.handleId = window.requestAnimationFrame(::onFrameCalled)\n        }\n\n        //  アニメーションが終わった場合\n        else {\n            //  アニメーション完了を通知して、次のアニメーションフレームの予約を行わないようにする。\n            onUpdated(1.0f)\n            onFinished()\n            cancellation.handleId = null\n        }\n    }\n\n    //  最初のアニメーションフレームを予約する。\n    cancellation.handleId = window.requestAnimationFrame(::onFrameCalled)\n\n    return cancellation\n}\n\n/**\n * アニメーション更新処理のループを開始する。\n *\n * @param duration アニメーション期間 (ミリ秒)\n * @param onUpdated 更新用コールバック (引数には進捗率 0.0 ~ 1.0 が指定される。)\n */\ninternal fun startInfiniteAnimUpdater(duration: Long, onUpdated: (Float) -> Unit): AnimCancellation {\n    val wrapper = AnimCancellationWrapper()\n\n    fun callback() {\n        val shouldContinue = !wrapper.isCancelled\n        if (shouldContinue) wrapper.cancellation = startAnimUpdater(duration, onUpdated, ::callback)\n    }\n    callback()\n\n    return wrapper\n}\n\n/**\n * アニメーション更新処理を開始する。\n *\n * @param duration アニメーション期間 (ミリ秒)\n * @param onUpdated 更新用コールバック (引数には進捗率 0.0 ~ 1.0 が指定される。)\n */\n@OptIn(ExperimentalCoroutinesApi::class)\ninternal suspend fun startAnimUpdaterAsync(duration: Long, onUpdated: (Float) -> Unit) = suspendCancellableCoroutine {\n    var animCancellation: AnimCancellation? = null\n    animCancellation = startAnimUpdater(\n        duration = duration,\n        onUpdated = onUpdated,\n        onFinished = { it.resume(Unit) { animCancellation?.cancel() } },\n    )\n\n    it.invokeOnCancellation { animCancellation.cancel() }\n}\n\n/**\n * アニメーションのキャンセル用オブジェクト\n */\ninternal interface AnimCancellation {\n\n    /**\n     * アニメーションのキャンセルを行う。\n     */\n    fun cancel()\n}\n\n//  AnimCancellationの具象実装\nprivate class AnimCancellationImpl : AnimCancellation {\n\n    //  最新のハンドルID (キャンセルすべきハンドルIDがない場合はnull)\n    var handleId: Int? = null\n\n    override fun cancel() {\n        //  キャンセルすべきハンドルIDがある場合、キャンセル要求をかける。\n        val id = this.handleId ?: return\n        window.cancelAnimationFrame(id)\n        this.handleId = null\n    }\n}\n\n//  AnimCancellationのラッパ\nprivate class AnimCancellationWrapper : AnimCancellation {\n\n    //  キャンセル済みかどうか\n    var isCancelled: Boolean = false\n\n    //  内部のCancellation\n    var cancellation: AnimCancellation? = null\n        set(value) {\n            if (!this.isCancelled) field = value\n        }\n\n    override fun cancel() {\n        this.isCancelled = true\n        this.cancellation?.cancel()\n        this.cancellation = null\n    }\n}\n",null,"package net.aridai.suckerreimu\n\nimport net.aridai.suckerreimu.battle.BattleScene\nimport net.aridai.suckerreimu.result.ResultScene\nimport net.aridai.suckerreimu.result.ResultSceneArgs\nimport org.w3c.dom.CanvasRenderingContext2D\n\n/**\n * ゲーム\n */\ninternal class Game {\n    companion object {\n\n        /**\n         * Canvasの描画横幅\n         */\n        const val CANVAS_WIDTH: Double = 1280.0\n\n        /**\n         * Canvasの描画高さ\n         */\n        const val CANVAS_HEIGHT: Double = 720.0\n\n        /**\n         * 描画時の拡大率\n         * (モバイル環境でのぼやけ防止用)\n         */\n        const val RENDERING_SCALE: Int = 2\n\n        /**\n         * ゲームのシングルトンインスタンス\n         */\n        val INSTANCE: Game by lazy { Game() }\n    }\n\n    //  対戦シーン\n    private lateinit var battleScene: BattleScene\n\n    //  結果シーン\n    private var resultScene: ResultScene? = null\n\n    /**\n     * 初期化処理を行う。\n     */\n    fun init() {\n        this.battleScene = BattleScene(this::onBattleFinished)\n        this.battleScene.init()\n    }\n\n    /**\n     * 描画処理を行う。\n     */\n    fun render(context: CanvasRenderingContext2D) {\n        this.battleScene.render(context)\n        this.resultScene?.render(context)\n    }\n\n    /**\n     * タッチイベントが発生したとき。\n     */\n    fun onTouchEventOccurred(event: TouchEvent) {\n        this.battleScene.onTouchEventOccurred(event)\n        this.resultScene?.onTouchEventOccurred(event)\n    }\n\n    //  対戦が終了したとき。\n    private fun onBattleFinished(args: ResultSceneArgs) {\n        Logger.d { \"対戦終了: $args\" }\n\n        //  結果シーンの初期化を行う。\n        val scene = ResultScene()\n        scene.init(args)\n        this.resultScene = scene\n    }\n}\n","package net.aridai.suckerreimu\n\n/**\n * ログ\n */\n@Suppress(\"unused\")\ninternal object Logger {\n\n    /**\n     * ログ出力が有効かどうか\n     */\n    var isEnabled: Boolean = false\n\n    /**\n     * VERBOSEログを出力する。\n     */\n    inline fun v(throwable: Throwable? = null, crossinline messageProvider: () -> String) {\n        if (this.isEnabled) {\n            val message =\n                if (throwable == null) \"[VERBOSE] ${messageProvider()}\"\n                else \"[VERBOSE] ${messageProvider()}\\n$throwable\\n${throwable.message}\"\n            console.log(message)\n        }\n    }\n\n    /**\n     * DEBUGログを出力する。\n     */\n    inline fun d(throwable: Throwable? = null, crossinline messageProvider: () -> String) {\n        if (this.isEnabled) {\n            val message =\n                if (throwable == null) \"[DEBUG] ${messageProvider()}\"\n                else \"[DEBUG] ${messageProvider()}\\n$throwable\\n${throwable.message}\"\n            console.log(message)\n        }\n    }\n\n    /**\n     * INFOログを出力する。\n     */\n    inline fun i(throwable: Throwable? = null, crossinline messageProvider: () -> String) {\n        if (this.isEnabled) {\n            val message =\n                if (throwable == null) \"[INFO] ${messageProvider()}\"\n                else \"[INFO] ${messageProvider()}\\n$throwable\\n${throwable.message}\"\n            console.info(message)\n        }\n    }\n\n    /**\n     * WARNINGログを出力する。\n     */\n    inline fun w(throwable: Throwable? = null, crossinline messageProvider: () -> String) {\n        if (this.isEnabled) {\n            val message =\n                if (throwable == null) \"[WARN] ${messageProvider()}\"\n                else \"[WARN] ${messageProvider()}\\n$throwable\\n${throwable.message}\"\n            console.warn(message)\n        }\n    }\n\n    /**\n     * ERRORログを出力する。\n     */\n    inline fun e(throwable: Throwable? = null, crossinline messageProvider: () -> String) {\n        if (this.isEnabled) {\n            val message =\n                if (throwable == null) \"[ERROR] ${messageProvider()}\"\n                else \"[ERROR] ${messageProvider()}\\n$throwable\\n${throwable.message}\"\n            console.error(message)\n        }\n    }\n\n    /**\n     * ASSERTログを出力する。\n     */\n    inline fun wtf(throwable: Throwable? = null, crossinline messageProvider: () -> String) {\n        if (this.isEnabled) {\n            val message =\n                if (throwable == null) \"[ASSERT] ${messageProvider()}\"\n                else \"[ASSERT] ${messageProvider()}\\n$throwable\\n${throwable.message}\"\n            console.error(message)\n        }\n    }\n}\n","package net.aridai.suckerreimu\n\nimport kotlinx.browser.document\nimport kotlinx.browser.window\nimport org.w3c.dom.CanvasRenderingContext2D\nimport org.w3c.dom.HTMLCanvasElement\n\nprivate fun main() {\n    //  ログの出力設定を行う。\n    Logger.isEnabled = !isReleaseBuild\n    Logger.i { \"スクリプト処理開始\" }\n\n    //  画面のリサイズコールバックを登録する。\n    //  (初回のコールバックは手動で呼び出す。)\n    window.onresize = { onResize() }\n    onResize()\n\n    launchCoroutine {\n        try {\n            //  リソースの読み込みを行う。\n            Resources.load()\n\n            //  ゲームを開始する。\n            startGame()\n        } catch (e: Exception) {\n            Logger.wtf(e) { \"システムエラー\" }\n            window.alert(\"システムエラーが発生しました。\")\n        }\n    }\n}\n\n//  ゲームの処理を開始する。\nprivate fun startGame() {\n    Logger.i { \"ゲーム処理開始\" }\n\n    //  ゲームの初期化を行う。\n    Game.INSTANCE.init()\n\n    //  ゲームループを開始する。\n    window.requestAnimationFrame { onAnimFrameCalled() }\n\n    //  Canvasのタッチイベントを購読し、ゲーム処理に通知する。\n    val canvas = findCanvas()\n    canvas.onpointerdown = { Game.INSTANCE.onTouchEventOccurred(TouchEvent.PointerDown.of(canvas, it)) }\n    canvas.onpointermove = { Game.INSTANCE.onTouchEventOccurred(TouchEvent.PointerMove.of(canvas, it)) }\n    canvas.onpointerup = { Game.INSTANCE.onTouchEventOccurred(TouchEvent.PointerUp.of(canvas, it)) }\n    canvas.onpointercancel = { Game.INSTANCE.onTouchEventOccurred(TouchEvent.PointerCancel.of(canvas, it)) }\n}\n\n//  アニメーション用フレームが呼び出されたとき。\nprivate fun onAnimFrameCalled() {\n    val canvas = findCanvas()\n    val context = canvas.getContext(\"2d\") as CanvasRenderingContext2D\n    context.clearRect(x = 0.0, y = 0.0, w = canvas.width.toDouble(), h = canvas.height.toDouble())\n\n    //  Canvasをスケーリングして固定サイズで描画できるようにする。\n    val scaleX = canvas.width / Game.CANVAS_WIDTH\n    val scaleY = canvas.height / Game.CANVAS_HEIGHT\n    context.scale(scaleX, scaleY)\n\n    //  ゲームの描画処理を行う。\n    Game.INSTANCE.render(context)\n\n    //  スケーリングを戻し、次のアニメーション用フレームの呼び出しを購読する。\n    context.scale(1.0 / scaleX, 1.0 / scaleY)\n    window.requestAnimationFrame { onAnimFrameCalled() }\n}\n\n//  DOMからCanvasを取得する。\nprivate fun findCanvas(): HTMLCanvasElement = document.getElementById(\"canvas\") as HTMLCanvasElement\n\n//  リリースビルドで実行されているかどうかを判定する。\n//  (NOTE: GitHub Pagesでホストするため、リリース環境では常にHTTPS化がされているものとする。)\nprivate val isReleaseBuild: Boolean get() = document.location?.protocol?.lowercase()?.contains(\"https\") ?: false\n","package net.aridai.suckerreimu\n\nimport kotlinx.browser.window\n\n/**\n * モバイル環境かどうか\n */\ninternal val isMobile: Boolean\n    get() {\n        val agent = window.navigator.userAgent.lowercase()\n        return mobileAgents.any { agent.contains(it) }\n    }\n\n//  モバイル環境のユーザエージェント名リスト\nprivate val mobileAgents: List<String> =\n    listOf(\"Android\", \"webOS\", \"iPhone\", \"iPad\", \"iPod\", \"BlackBerry\", \"IEMobile\", \"Opera Mini\").map { it.lowercase() }\n",null,null,"package net.aridai.suckerreimu\n\nimport org.w3c.dom.Image\nimport kotlin.coroutines.resume\nimport kotlin.coroutines.resumeWithException\nimport kotlin.coroutines.suspendCoroutine\n\n/**\n * リソース\n */\ninternal object Resources {\n\n    /**\n     * 画像リソース\n     */\n    object Images {\n\n        /**\n         * 背景\n         */\n        lateinit var background: Image; private set\n\n        /**\n         * れーむさんキャラクタ画像\n         */\n        lateinit var characterReimu: Image; private set\n\n        /**\n         * まりさちゃんキャラクタ画像\n         */\n        lateinit var characterMarisa: Image; private set\n\n        /**\n         * 能力上昇エフェクト画像\n         */\n        lateinit var statUpEffect: Image; private set\n\n        /**\n         * 能力下降エフェクト画像\n         */\n        lateinit var statDownEffect: Image; private set\n\n        /**\n         * 結果シーン画像 (勝ち)\n         */\n        lateinit var winResultScreen: Image; private set\n\n        /**\n         * 結果シーン画像 (負け)\n         */\n        lateinit var loseResultScreen: Image; private set\n\n        /**\n         * 共有ボタン画像\n         */\n        lateinit var shareButton: Image; private set\n\n        suspend fun load() {\n            Logger.v { \"画像リソース読み込み 開始\" }\n\n            this.background = this.loadImage(\"img/background.png\")\n            this.characterReimu = this.loadImage(\"img/character_reimu.png\")\n            this.characterMarisa = this.loadImage(\"img/character_marisa.png\")\n            this.statUpEffect = this.loadImage(\"img/stat_up_effect.png\")\n            this.statDownEffect = this.loadImage(\"img/stat_down_effect.png\")\n            this.winResultScreen = this.loadImage(\"img/win_result_screen.png\")\n            this.loseResultScreen = this.loadImage(\"img/lose_result_screen.png\")\n            this.shareButton = this.loadImage(\"img/share_button.png\")\n\n            Logger.v { \"画像リソース読み込み 終了\" }\n        }\n\n        //  画像を読み込む。\n        private suspend fun loadImage(path: String): Image = suspendCoroutine { continuation ->\n            val image = Image()\n\n            image.onload = { continuation.resume(image) }\n            image.onerror = { _, _, _, _, _ ->\n                Logger.e { \"画像読み込みエラー: $path\" }\n                continuation.resumeWithException(Exception(\"画像読み込みエラー: $path\"))\n            }\n\n            image.src = path\n        }\n    }\n\n    /**\n     * リソースの読み込みを行う。\n     */\n    suspend fun load() {\n        //  画像リソースの読み込みを行う。\n        Images.load()\n    }\n}\n",null,null,"package net.aridai.suckerreimu\n\nimport kotlinx.browser.document\nimport kotlinx.browser.window\nimport org.w3c.dom.HTMLCanvasElement\n\n/**\n * 画面のリサイズが行われたとき。\n */\ninternal fun onResize() {\n    //  画面のサイズを取得する。\n    val containerWidth = window.innerWidth\n    val containerHeight = window.innerHeight\n    val isMobile = isMobile\n    val canvas = document.getElementById(\"canvas\") as HTMLCanvasElement\n    Logger.i { \"画面リサイズ: $containerWidth x $containerHeight, モバイル=$isMobile\" }\n\n    //  モバイル環境で縦長表示である場合\n    val isPortrait = containerWidth < containerHeight\n    if (isMobile && isPortrait) {\n        Logger.v { \"画面サイズ モバイル縦長: $containerWidth x $containerHeight\" }\n\n        //  90度回転させた際に画面に収まるようなCanvasサイズを設定する。\n        val (canvasWidth, canvasHeight) = calculateCanvasSize(containerHeight, containerWidth)\n        canvas.width = canvasWidth * Game.RENDERING_SCALE\n        canvas.height = canvasHeight * Game.RENDERING_SCALE\n        canvas.style.width = \"${canvasWidth}px\"\n        canvas.style.height = \"${canvasHeight}px\"\n\n        //  中央揃えを行う。\n        canvas.style.position = \"absolute\"\n        canvas.style.left = \"${(containerWidth - canvasWidth) / 2}px\"\n        canvas.style.top = \"${(containerHeight - canvasHeight) / 2}px\"\n\n        //  90度回転させる。\n        canvas.style.transformOrigin = \"center\"\n        canvas.style.transform = \"rotate(90deg)\"\n    }\n\n    //  モバイル環境以外、もしくは、横長表示である場合\n    else {\n        Logger.v { \"画面サイズ 非モバイル縦長: $containerWidth x $containerHeight\" }\n\n        //  画面に収まるようなCanvasサイズを設定する。\n        val (canvasWidth, canvasHeight) = calculateCanvasSize(containerWidth, containerHeight)\n        canvas.width = canvasWidth * Game.RENDERING_SCALE\n        canvas.height = canvasHeight * Game.RENDERING_SCALE\n        canvas.style.width = \"${canvasWidth}px\"\n        canvas.style.height = \"${canvasHeight}px\"\n\n        //  中央揃えを行う。\n        canvas.style.position = \"absolute\"\n        canvas.style.left = \"${(containerWidth - canvasWidth) / 2}px\"\n        canvas.style.top = \"${(containerHeight - canvasHeight) / 2}px\"\n\n        //  回転をもとに戻す。\n        canvas.style.transformOrigin = \"center\"\n        canvas.style.transform = \"rotate(0deg)\"\n    }\n}\n\n//  Canvasサイズを計算する。\n//  (比率を保ったまま、最大サイズの制約に収まり、はみ出しが起きないようなCanvasのサイズを求める。)\nprivate fun calculateCanvasSize(containerWidth: Int, containerHeight: Int): Pair<Int, Int> {\n    //  領域がCanvas理想比率よりも横長である場合\n    val ratio = containerWidth.toDouble() / containerHeight\n    if (ratio >= CANVAS_RATIO) {\n        Logger.v { \"Canvasサイズ計算 理想比率よりも横長: $containerWidth x $containerHeight\" }\n\n        //  高さを基準にCanvasのサイズを決定する。\n        val canvasHeight = containerHeight.coerceAtMost(maximumValue = CANVAS_MAX_HEIGHT)\n        val canvasWidth = (canvasHeight * CANVAS_RATIO).toInt()\n        Logger.v { \"Canvasサイズ計算 理想比率よりも横長 Canvasサイズ: $canvasWidth x $canvasHeight\" }\n\n        return canvasWidth to canvasHeight\n    }\n\n    //  領域がCanvas理想比率よりも縦長である場合\n    else {\n        Logger.v { \"Canvasサイズ計算 理想比率よりも縦長: $containerWidth x $containerHeight\" }\n\n        //  横幅を基準にCanvasのサイズを決定する。\n        val canvasWidth = containerWidth.coerceAtMost(maximumValue = CANVAS_MAX_WIDTH)\n        val canvasHeight = (canvasWidth / CANVAS_RATIO).toInt()\n        Logger.v { \"Canvasサイズ計算 理想比率よりも縦長 Canvasサイズ: $canvasWidth x $canvasHeight\" }\n\n        return canvasWidth to canvasHeight\n    }\n}\n\n//  Canvasの最大横幅\nprivate const val CANVAS_MAX_WIDTH: Int = 960\n\n//  Canvasの最大高さ\nprivate const val CANVAS_MAX_HEIGHT: Int = 540\n\n//  Canvasの比率\nprivate const val CANVAS_RATIO: Double = CANVAS_MAX_WIDTH.toDouble() / CANVAS_MAX_HEIGHT\n","package net.aridai.suckerreimu\n\nimport org.w3c.dom.HTMLCanvasElement\nimport org.w3c.dom.pointerevents.PointerEvent\n\n/**\n * タッチイベント\n */\ninternal sealed interface TouchEvent {\n\n    /**\n     * ポインタID\n     */\n    val pointerId: Int\n\n    /**\n     * X座標\n     */\n    val x: Double\n\n    /**\n     * Y座標\n     */\n    val y: Double\n\n    /**\n     * 押下イベント\n     */\n    data class PointerDown(override val pointerId: Int, override val x: Double, override val y: Double) : TouchEvent {\n        companion object {\n\n            /**\n             * PointerEventから生成する。\n             */\n            fun of(canvas: HTMLCanvasElement, e: PointerEvent): PointerDown {\n                return PointerDown(e.pointerId, toScaledX(canvas, e), toScaledY(canvas, e))\n            }\n        }\n    }\n\n    /**\n     * 移動イベント\n     */\n    data class PointerMove(override val pointerId: Int, override val x: Double, override val y: Double) : TouchEvent {\n        companion object {\n\n            /**\n             * PointerEventから生成する。\n             */\n            fun of(canvas: HTMLCanvasElement, e: PointerEvent): PointerMove {\n                return PointerMove(e.pointerId, toScaledX(canvas, e), toScaledY(canvas, e))\n            }\n        }\n    }\n\n    /**\n     * 押上イベント\n     */\n    data class PointerUp(override val pointerId: Int, override val x: Double, override val y: Double) : TouchEvent {\n        companion object {\n\n            /**\n             * PointerEventから生成する。\n             */\n            fun of(canvas: HTMLCanvasElement, e: PointerEvent): PointerUp {\n                return PointerUp(e.pointerId, toScaledX(canvas, e), toScaledY(canvas, e))\n            }\n        }\n    }\n\n    /**\n     * キャンセルイベント\n     */\n    data class PointerCancel(override val pointerId: Int, override val x: Double, override val y: Double) : TouchEvent {\n        companion object {\n\n            /**\n             * PointerEventから生成する。\n             */\n            fun of(canvas: HTMLCanvasElement, e: PointerEvent): PointerCancel {\n                return PointerCancel(e.pointerId, toScaledX(canvas, e), toScaledY(canvas, e))\n            }\n        }\n    }\n}\n\n//  スケーリングされたX座標に変換する。\nprivate fun toScaledX(canvas: HTMLCanvasElement, e: PointerEvent): Double =\n    e.offsetX * Game.CANVAS_WIDTH / (canvas.width / Game.RENDERING_SCALE)\n\n//  スケーリングされたY座標に変換する。\nprivate fun toScaledY(canvas: HTMLCanvasElement, e: PointerEvent): Double =\n    e.offsetY * Game.CANVAS_HEIGHT / (canvas.height / Game.RENDERING_SCALE)\n","package net.aridai.suckerreimu.battle\n\n/**\n * 対戦の判定ロジック\n */\ninternal object BattleJudgement {\n\n    /**\n     * 試合状況を判定する。\n     */\n    fun judge(status: BattleStatusSnapshot, reimuMove: MoveKind, marisaMove: MoveKind): Pattern {\n        return when {\n\n            //  れーむさんがむそうふういんを選択し、まりさちゃんがマスタースパークを選択した場合 (れーむさんが負ける場合)\n            reimuMove == MoveKind.FANTASY_SEAL && marisaMove == MoveKind.MASTER_SPARK -> {\n                //  まりさちゃんが先にマスタースパークを打ち、れーむさんが負けるパターン\n                val updatedStatus = status.copy(result = BattleStatusSnapshot.BattleResult.LOSE)\n                Pattern.Lose(status, updatedStatus)\n            }\n\n            //  れーむさんがむそうふういんを選択し、まりさちゃんがわるだくみを選択した場合 (れーむさんが勝つ場合)\n            reimuMove == MoveKind.FANTASY_SEAL && marisaMove == MoveKind.NASTY_PLOT -> {\n                //  まりさちゃんがわるだくみを積むも、れーむさんがむそうふういんを打ち、れーむさんが勝つパターン\n                val updatedStatus = status.copy(result = BattleStatusSnapshot.BattleResult.WIN)\n                    .raiseMarisaCStatBy2()\n                    .consumeMovePp(MoveKind.FANTASY_SEAL)\n                Pattern.Win.FantasySealPassed(status, updatedStatus)\n            }\n\n            //  れーむさんがふいうちを選択し、まりさちゃんがマスタースパークを選択した場合 (れーむさんが勝つ場合)\n            reimuMove == MoveKind.SUCKER_PUNCH && marisaMove == MoveKind.MASTER_SPARK -> {\n                //  れーむさんがふいうちを打ち、れーむさんが勝つパターン\n                val updatedStatus =\n                    status.copy(result = BattleStatusSnapshot.BattleResult.WIN).consumeMovePp(MoveKind.SUCKER_PUNCH)\n                Pattern.Win.SuckerPunchPassed(status, updatedStatus)\n            }\n\n            //  れーむさんがふいうちを選択し、まりさちゃんがわるだくみを選択した場合 (ふいうちが透かされて試合が続行する場合)\n            reimuMove == MoveKind.SUCKER_PUNCH && marisaMove == MoveKind.NASTY_PLOT -> {\n                //  れーむさんのふいうちが失敗し、まりさちゃんがわるだくみを積み、試合が継続するパターン\n                val updatedStatus = status.consumeMovePp(MoveKind.SUCKER_PUNCH).raiseMarisaCStatBy2()\n                Pattern.Continue(status, updatedStatus)\n            }\n\n            else -> throw IllegalStateException()\n        }\n    }\n\n    /**\n     * 試合状況のパターン\n     */\n    sealed interface Pattern {\n\n        /**\n         * 更新前の戦況\n         */\n        val beforeStatus: BattleStatusSnapshot\n\n        /**\n         * 更新後の戦況\n         */\n        val updatedStatus: BattleStatusSnapshot\n\n        /**\n         * れーむさんが勝つパターン\n         */\n        sealed interface Win : Pattern {\n\n            /**\n             * ふいうちが通って勝つパターン\n             */\n            data class SuckerPunchPassed(\n                override val beforeStatus: BattleStatusSnapshot,\n                override val updatedStatus: BattleStatusSnapshot,\n            ) : Win\n\n            /**\n             * むそうふういんが通って勝つパターン\n             */\n            data class FantasySealPassed(\n                override val beforeStatus: BattleStatusSnapshot,\n                override val updatedStatus: BattleStatusSnapshot,\n            ) : Win {\n\n                /**\n                 * まりさちゃんが特攻ランクを上げることができるかどうか\n                 */\n                val canMarisaRaiseCRank: Boolean get() = this.beforeStatus.marisaCRank != this.updatedStatus.marisaCRank\n            }\n        }\n\n        /**\n         * れーむさんが負けるパターン\n         */\n        data class Lose(\n            override val beforeStatus: BattleStatusSnapshot,\n            override val updatedStatus: BattleStatusSnapshot,\n        ) : Pattern\n\n        /**\n         * 試合が継続するパターン\n         */\n        data class Continue(\n            override val beforeStatus: BattleStatusSnapshot,\n            override val updatedStatus: BattleStatusSnapshot,\n        ) : Pattern {\n\n            /**\n             * まりさちゃんが特攻ランクを上げることができるかどうか\n             */\n            val canMarisaRaiseCRank: Boolean get() = this.beforeStatus.marisaCRank != this.updatedStatus.marisaCRank\n        }\n    }\n}\n","package net.aridai.suckerreimu.battle\n\nimport net.aridai.suckerreimu.battle.anim.BattleAnim\n\n/**\n * 対戦シーンの台本\n */\ninternal object BattleScenario {\n\n    //  まりさちゃんの最大HP実数値\n    //  (種族値140・個体値31・努力値0)\n    private const val MARISA_MAX_HP: Int = 215\n\n    //  れーむさんの最大HP実数値\n    //  (種族値150・個体値31・努力値236)\n    private const val REIMU_MAX_HP: Int = 255\n\n    //  マスタースパークのダメージ量 (れーむさん ← まりさちゃん)\n    //  (威力180フェアリータイプ一致・特性まほうつかいの威力2倍補正対象技・れーむさんに半減)\n    //  (まりさちゃん特攻: 種族値180・個体値31・努力値252・性格補正なし・実数値232)\n    //  (れーむさん特防: 種族値130・個体値31・努力値0・性格補正なし・実数値140)\n    private const val DAMAGE_AMOUNT_OF_MASTER_SPARK_FROM_MARISA_TO_REIMU: Int = 198\n\n    //  むそうふういんのダメージ量 (まりさちゃん ← れーむさん)\n    //  (威力180炎タイプ一致・攻撃1段階上昇・まりさちゃんに半減)\n    //  (れーむさん攻撃: 種族値180・個体値31・努力値252・性格補正あり・実数値255・ランク+1・ランク込み実数値382)\n    //  (まりさちゃん防御: 種族値100・個体値31・努力値0・性格補正なし・実数値120・ランク-2・ランク込み実数値60)\n    //  (実ダメージ378・きあいのタスキ耐え)\n    private const val DAMAGE_AMOUNT_OF_FANTASY_SEAL_FROM_REIMU_TO_MARISA: Int = MARISA_MAX_HP - 1\n\n    /**\n     * 初期状態を生成する。\n     */\n    fun createInitialState(): BattleSceneState {\n        val animQueue = listOf(\n            //  背景のフェードイン\n            BattleAnim.BackgroundFadeInAnim(),\n\n            //  まりさちゃんの入場+メッセージ\n            BattleAnim.Parallel(\n                animations = listOf(\n                    BattleAnim.CharacterEnteringAnim(side = CharacterSide.OPPONENT),\n                    BattleAnim.Message(text = \"まりさちゃんが勝負をしかけてきた!\"),\n                ),\n            ),\n\n            //  れーむさんの入場+メッセージ\n            BattleAnim.Parallel(\n                animations = listOf(\n                    BattleAnim.CharacterEnteringAnim(side = CharacterSide.OWN),\n                    BattleAnim.Message(text = \"いざ勝負!\"),\n                ),\n            ),\n\n            //  お互いのステータスバー表示\n            BattleAnim.Parallel(\n                animations = listOf(\n                    BattleAnim.CharacterStatusBarEnteringAnim(\n                        side = CharacterSide.OWN,\n                        name = \"れーむさん\",\n                        currentHp = REIMU_MAX_HP,\n                        maxHp = REIMU_MAX_HP,\n                    ),\n                    BattleAnim.CharacterStatusBarEnteringAnim(\n                        side = CharacterSide.OPPONENT,\n                        name = \"まりさちゃん\",\n                        currentHp = MARISA_MAX_HP,\n                        maxHp = MARISA_MAX_HP,\n                    ),\n                ),\n            ),\n        )\n\n        val turn = BattleTurn.InitialState\n        val status = BattleStatusSnapshot.INITIAL\n        return BattleSceneState.PlayingAnimations(turn, status, animQueue)\n    }\n\n    /**\n     * 最初のターン (自動操作) の状態を生成する。\n     */\n    fun createFirstTurnState(): BattleSceneState {\n        val abilityStatAnimDuration = BattleAnim.CharacterStatDownAnim.DEFAULT_DURATION_IN_MS\n        val abilityMessageDuration = BattleAnim.Message.DEFAULT_DURATION_IN_MS\n        val abilityTotalDuration = abilityStatAnimDuration * 2 + abilityMessageDuration * 2\n\n        val animQueue = listOf(\n            BattleAnim.Delay(delayInMs = 500L),\n\n            //  まりさちゃんの攻撃\n            BattleAnim.Message(text = \"まりさちゃんの${MoveKind.MASTER_SPARK.moveName}!\"),\n\n            //  れーむさんのダメージ\n            BattleAnim.CharacterDamageAnim(side = CharacterSide.OWN),\n            BattleAnim.CharacterStatusBarHpUpdatingAnim(\n                side = CharacterSide.OWN,\n                updatedHp = REIMU_MAX_HP - DAMAGE_AMOUNT_OF_MASTER_SPARK_FROM_MARISA_TO_REIMU,\n            ),\n\n            //  タイプ相性メッセージ\n            BattleAnim.Message(text = \"効果はいまひとつのようだ...\"),\n\n            //  まりさちゃんの技の追加効果\n            BattleAnim.CharacterStatDownAnim(side = CharacterSide.OPPONENT),\n            BattleAnim.Message(text = \"まりさちゃんの防御と特防ががくっと下がった!\"),\n\n            //  れーむさんの特性発動\n            BattleAnim.Parallel(\n                animations = listOf(\n                    BattleAnim.AbilityPopupAnim(\n                        side = CharacterSide.OWN,\n                        abilityName = \"ぶちぎれいむ\",\n                        durationInMs = abilityTotalDuration,\n                    ),\n                    BattleAnim.Serial(\n                        animations = listOf(\n                            BattleAnim.CharacterStatDownAnim(\n                                side = CharacterSide.OWN,\n                                durationInMs = abilityStatAnimDuration,\n                            ),\n                            BattleAnim.Message(\n                                text = \"れーむさんの特攻が下がった!\",\n                                durationInMs = abilityMessageDuration,\n                            ),\n                            BattleAnim.CharacterStatUpAnim(\n                                side = CharacterSide.OWN,\n                                durationInMs = abilityStatAnimDuration,\n                            ),\n                            BattleAnim.Message(\n                                text = \"れーむさんの攻撃が上がった!\",\n                                durationInMs = abilityMessageDuration,\n                            ),\n                        ),\n                    ),\n                ),\n            ),\n\n            //  れーむさんの攻撃\n            BattleAnim.Message(text = \"れーむさんの${MoveKind.FANTASY_SEAL.moveName}!\"),\n\n            //  まりさちゃんのダメージ\n            BattleAnim.CharacterDamageAnim(side = CharacterSide.OPPONENT),\n            BattleAnim.CharacterStatusBarHpUpdatingAnim(\n                side = CharacterSide.OPPONENT,\n                updatedHp = MARISA_MAX_HP - DAMAGE_AMOUNT_OF_FANTASY_SEAL_FROM_REIMU_TO_MARISA,\n            ),\n\n            //  タイプ相性メッセージ\n            BattleAnim.Message(text = \"効果はいまひとつのようだ...\"),\n\n            //  れーむさんの技の追加効果\n            BattleAnim.CharacterStatDownAnim(side = CharacterSide.OWN),\n            BattleAnim.Message(text = \"れーむさんの防御と特防ががくっと下がった!\"),\n\n            //  まりさちゃんのきあいのタスキ発動\n            BattleAnim.CharacterHeldItemAnim(side = CharacterSide.OPPONENT),\n            BattleAnim.Message(text = \"まりさちゃんはきあいのタスキでもちこたえた!\"),\n        )\n\n        val turn = BattleTurn.FirstTurn\n        val status = BattleStatusSnapshot.INITIAL.consumeMovePp(kind = MoveKind.FANTASY_SEAL)\n        return BattleSceneState.PlayingAnimations(turn, status, animQueue)\n    }\n\n    /**\n     * 対戦中のアニメーションの状態を生成する。\n     */\n    fun createBattleAnimState(turn: BattleTurn, pattern: BattleJudgement.Pattern): BattleSceneState {\n        return when (pattern) {\n\n            //  れーむさんがふいうちを打ち、れーむさんが勝つパターン\n            is BattleJudgement.Pattern.Win.SuckerPunchPassed -> {\n                val animQueue = listOf(\n                    //  れーむさんの技\n                    BattleAnim.Message(text = \"れーむさんの${MoveKind.SUCKER_PUNCH.moveName}!\"),\n\n                    //  まりさちゃんのダメージ\n                    BattleAnim.CharacterDamageAnim(side = CharacterSide.OPPONENT),\n                    BattleAnim.CharacterStatusBarHpUpdatingAnim(side = CharacterSide.OPPONENT, updatedHp = 0),\n\n                    //  タイプ相性メッセージ\n                    BattleAnim.Message(text = \"効果はいまひとつのようだ...\"),\n\n                    //  勝利\n                    BattleAnim.Message(text = \"まりさちゃんは倒れた...\"),\n                    BattleAnim.Parallel(\n                        animations = listOf(\n                            BattleAnim.CharacterExitingAnim(side = CharacterSide.OPPONENT),\n                            BattleAnim.CharacterStatusBarExitingAnim(side = CharacterSide.OPPONENT),\n                        ),\n                    ),\n                    BattleAnim.Message(text = \"まりさちゃんとの勝負に勝った!\"),\n                )\n\n                BattleSceneState.PlayingAnimations(turn, pattern.updatedStatus, animQueue)\n            }\n\n            //  まりさちゃんがわるだくみを積むも、れーむさんがむそうふういんを打ち、れーむさんが勝つパターン\n            is BattleJudgement.Pattern.Win.FantasySealPassed -> {\n                //  れーむさんの技のアニメーション\n                val reimuAnimQueue = listOf(\n                    //  れーむさんの技\n                    BattleAnim.Message(text = \"れーむさんの${MoveKind.FANTASY_SEAL.moveName}!\"),\n\n                    //  まりさちゃんのダメージ\n                    BattleAnim.CharacterDamageAnim(side = CharacterSide.OPPONENT),\n                    BattleAnim.CharacterStatusBarHpUpdatingAnim(side = CharacterSide.OPPONENT, updatedHp = 0),\n\n                    //  タイプ相性メッセージ\n                    BattleAnim.Message(text = \"効果はいまひとつのようだ...\"),\n\n                    //  れーむさんの技の追加効果\n                    BattleAnim.CharacterStatDownAnim(side = CharacterSide.OWN),\n                    BattleAnim.Message(text = \"れーむさんの防御と特防ががくっと下がった!\"),\n\n                    //  勝利\n                    BattleAnim.Message(text = \"まりさちゃんは倒れた...\"),\n                    BattleAnim.Parallel(\n                        animations = listOf(\n                            BattleAnim.CharacterExitingAnim(side = CharacterSide.OPPONENT),\n                            BattleAnim.CharacterStatusBarExitingAnim(side = CharacterSide.OPPONENT),\n                        ),\n                    ),\n                    BattleAnim.Message(text = \"まりさちゃんとの勝負に勝った!\"),\n                )\n                val animQueue = when (pattern.canMarisaRaiseCRank) {\n\n                    //  まりさちゃんのわるだくみが成功する場合\n                    true -> this.marisaSuccessAnimQueue + reimuAnimQueue\n\n                    //  まりさちゃんのわるだくみが失敗する場合\n                    false -> this.marisaFailureAnimQueue + reimuAnimQueue\n                }\n\n                BattleSceneState.PlayingAnimations(turn, pattern.updatedStatus, animQueue)\n            }\n\n            //  まりさちゃんが先にマスタースパークを打ち、れーむさんが負けるパターン\n            is BattleJudgement.Pattern.Lose -> {\n                val animQueue = listOf(\n                    //  まりさちゃんの技\n                    BattleAnim.Message(text = \"まりさちゃんの${MoveKind.MASTER_SPARK.moveName}!\"),\n\n                    //  れーむさんのダメージ\n                    BattleAnim.CharacterDamageAnim(side = CharacterSide.OWN),\n                    BattleAnim.CharacterStatusBarHpUpdatingAnim(side = CharacterSide.OWN, updatedHp = 0),\n\n                    //  タイプ相性メッセージ\n                    BattleAnim.Message(text = \"効果はいまひとつのようだ...\"),\n\n                    //  まりさちゃんの技の追加効果\n                    BattleAnim.CharacterStatDownAnim(side = CharacterSide.OPPONENT),\n                    BattleAnim.Message(text = \"まりさちゃんの防御と特防ががくっと下がった!\"),\n\n                    //  敗北\n                    BattleAnim.Message(text = \"れーむさんは倒れた...\"),\n                    BattleAnim.Parallel(\n                        animations = listOf(\n                            BattleAnim.CharacterExitingAnim(side = CharacterSide.OWN),\n                            BattleAnim.CharacterStatusBarExitingAnim(side = CharacterSide.OWN),\n                        ),\n                    ),\n                    BattleAnim.Message(text = \"まりさちゃんとの勝負に負けた...\"),\n                )\n\n                BattleSceneState.PlayingAnimations(turn, pattern.updatedStatus, animQueue)\n            }\n\n            //  れーむさんのふいうちが失敗し、まりさちゃんがわるだくみを積み、試合が継続するパターン\n            is BattleJudgement.Pattern.Continue -> {\n                val reimuAnimQueue = listOf(\n                    //  れーむさんの技\n                    BattleAnim.Message(text = \"れーむさんの${MoveKind.SUCKER_PUNCH.moveName}!\"),\n                    BattleAnim.Message(text = \"しかしうまく決まらなかった!\"),\n                )\n                val animQueue = when (pattern.canMarisaRaiseCRank) {\n\n                    //  まりさちゃんのわるだくみが成功する場合\n                    true -> reimuAnimQueue + this.marisaSuccessAnimQueue\n\n                    //  まりさちゃんのわるだくみが失敗する場合\n                    false -> reimuAnimQueue + this.marisaFailureAnimQueue\n                }\n\n                BattleSceneState.PlayingAnimations(turn, pattern.updatedStatus, animQueue)\n            }\n        }\n    }\n\n    //  まりさちゃんのわるだくみが成功する場合のアニメーション\n    private val marisaSuccessAnimQueue: List<BattleAnim> = listOf(\n        BattleAnim.Message(text = \"まりさちゃんの${MoveKind.NASTY_PLOT.moveName}!\"),\n        BattleAnim.CharacterStatUpAnim(side = CharacterSide.OPPONENT),\n        BattleAnim.Message(\"まりさちゃんの特攻がぐーんと上がった!\"),\n    )\n\n    //  まりさちゃんのわるだくみが失敗する場合のアニメーション\n    private val marisaFailureAnimQueue: List<BattleAnim> = listOf(\n        BattleAnim.Message(text = \"まりさちゃんの${MoveKind.NASTY_PLOT.moveName}!\"),\n        BattleAnim.Message(\"まりさちゃんの特攻はもう上がらない!\"),\n    )\n}\n","package net.aridai.suckerreimu.battle.anim\n\nimport net.aridai.suckerreimu.battle.CharacterSide\n\n/**\n * 対戦アニメーション\n */\ninternal sealed interface BattleAnim {\n\n    /**\n     * 直列アニメーション\n     */\n    data class Serial(val animations: List<BattleAnim>) : BattleAnim\n\n    /**\n     * 並列アニメーション\n     */\n    data class Parallel(val animations: List<BattleAnim>) : BattleAnim\n\n    /**\n     * 遅延\n     */\n    data class Delay(val delayInMs: Long) : BattleAnim\n\n    /**\n     * 背景のフェードインアニメ\n     */\n    data class BackgroundFadeInAnim(val durationInMs: Long = DEFAULT_DURATION_IN_MS) : BattleAnim {\n        companion object {\n\n            /**\n             * デフォルト期間\n             */\n            const val DEFAULT_DURATION_IN_MS: Long = 1000L\n        }\n    }\n\n    /**\n     * キャラクタ入場アニメ\n     */\n    data class CharacterEnteringAnim(\n        val side: CharacterSide,\n        val durationInMs: Long = DEFAULT_DURATION_IN_MS,\n    ) : BattleAnim {\n        companion object {\n\n            /**\n             * デフォルト期間\n             */\n            const val DEFAULT_DURATION_IN_MS: Long = 250L\n        }\n    }\n\n    /**\n     * キャラクタ退出アニメ\n     */\n    data class CharacterExitingAnim(\n        val side: CharacterSide,\n        val durationInMs: Long = DEFAULT_DURATION_IN_MS,\n    ) : BattleAnim {\n        companion object {\n\n            /**\n             * デフォルト期間\n             */\n            const val DEFAULT_DURATION_IN_MS: Long = 250L\n        }\n    }\n\n    /**\n     * キャラクタダメージアニメ\n     */\n    data class CharacterDamageAnim(\n        val side: CharacterSide,\n        val blinkCount: Int = DEFAULT_BLINK_COUNT,\n        val durationInMs: Long = DEFAULT_DURATION_IN_MS,\n    ) : BattleAnim {\n        companion object {\n\n            /**\n             * デフォルト点滅回数\n             */\n            const val DEFAULT_BLINK_COUNT: Int = 2\n\n            /**\n             * デフォルト期間\n             */\n            const val DEFAULT_DURATION_IN_MS: Long = 750L\n        }\n    }\n\n    /**\n     * キャラクタ能力上昇アニメ\n     */\n    data class CharacterStatUpAnim(\n        val side: CharacterSide,\n        val durationInMs: Long = DEFAULT_DURATION_IN_MS,\n    ) : BattleAnim {\n        companion object {\n\n            /**\n             * デフォルト期間\n             */\n            const val DEFAULT_DURATION_IN_MS: Long = 1200L\n        }\n    }\n\n    /**\n     * キャラクタ能力下降アニメ\n     */\n    data class CharacterStatDownAnim(\n        val side: CharacterSide,\n        val durationInMs: Long = DEFAULT_DURATION_IN_MS,\n    ) : BattleAnim {\n        companion object {\n\n            /**\n             * デフォルト期間\n             */\n            const val DEFAULT_DURATION_IN_MS: Long = 1200L\n        }\n    }\n\n    /**\n     * キャラクタ持ち物アニメ\n     */\n    data class CharacterHeldItemAnim(\n        val side: CharacterSide,\n        val durationInMs: Long = DEFAULT_DURATION_IN_MS,\n    ) : BattleAnim {\n        companion object {\n\n            /**\n             * デフォルト期間\n             */\n            const val DEFAULT_DURATION_IN_MS: Long = 1000L\n        }\n    }\n\n    /**\n     * キャラクタステータスバー入場アニメ\n     */\n    data class CharacterStatusBarEnteringAnim(\n        val side: CharacterSide,\n        val name: String,\n        val currentHp: Int,\n        val maxHp: Int,\n        val durationInMs: Long = DEFAULT_DURATION_IN_MS,\n    ) : BattleAnim {\n        companion object {\n\n            /**\n             * デフォルト期間\n             */\n            const val DEFAULT_DURATION_IN_MS: Long = 100L\n        }\n    }\n\n    /**\n     * キャラクタステータスバー退出アニメ\n     */\n    data class CharacterStatusBarExitingAnim(\n        val side: CharacterSide,\n        val durationInMs: Long = DEFAULT_DURATION_IN_MS,\n    ) : BattleAnim {\n        companion object {\n\n            /**\n             * デフォルト期間\n             */\n            const val DEFAULT_DURATION_IN_MS: Long = 100L\n        }\n    }\n\n    /**\n     * キャラクタステータスバーHP更新アニメ\n     */\n    data class CharacterStatusBarHpUpdatingAnim(\n        val side: CharacterSide,\n        val updatedHp: Int,\n        val durationInMs: Long = DEFAULT_DURATION_IN_MS,\n    ) : BattleAnim {\n        companion object {\n\n            /**\n             * デフォルト期間\n             */\n            const val DEFAULT_DURATION_IN_MS: Long = 500L\n        }\n    }\n\n    /**\n     * 特性ポップアップ表示アニメ\n     */\n    data class AbilityPopupAnim(\n        val side: CharacterSide,\n        val abilityName: String,\n        val durationInMs: Long = DEFAULT_DURATION_IN_MS,\n    ) : BattleAnim {\n        companion object {\n\n            /**\n             * デフォルト期間\n             */\n            const val DEFAULT_DURATION_IN_MS: Long = 1000L\n        }\n    }\n\n    /**\n     * メッセージ表示\n     */\n    data class Message(val text: String, val durationInMs: Long = DEFAULT_DURATION_IN_MS) : BattleAnim {\n        companion object {\n\n            /**\n             * デフォルト期間\n             */\n            const val DEFAULT_DURATION_IN_MS: Long = 2000L\n        }\n    }\n}\n","package net.aridai.suckerreimu.battle\n\nimport kotlinx.coroutines.Job\nimport net.aridai.suckerreimu.Logger\nimport net.aridai.suckerreimu.TouchEvent\nimport net.aridai.suckerreimu.battle.anim.BattleAnimHandler\nimport net.aridai.suckerreimu.battle.components.BattleSceneComponents\nimport net.aridai.suckerreimu.launchCoroutine\nimport net.aridai.suckerreimu.result.ResultSceneArgs\nimport org.w3c.dom.CanvasRenderingContext2D\n\n/**\n * 対戦シーン\n */\ninternal class BattleScene(private val onBattleFinished: (args: ResultSceneArgs) -> Unit) {\n\n    //  対戦シーンの状態管理ロジック\n    private lateinit var manager: BattleStateManager\n\n    //  対戦シーンのコンポーネント群\n    private lateinit var components: BattleSceneComponents\n\n    //  対戦シーンの状態の購読\n    private lateinit var stateSubscription: Job\n\n    /**\n     * 初期化処理を行う。\n     */\n    fun init() {\n        this.manager = BattleStateManager(this.onBattleFinished)\n        this.components = BattleSceneComponents()\n\n        //  対戦シーンの状態変更を購読する。\n        this.stateSubscription = launchCoroutine { this.manager.state.collect(this::onBattleStateChanged) }\n    }\n\n    /**\n     * 描画処理を行う。\n     */\n    fun render(context: CanvasRenderingContext2D) {\n        this.components.render(context)\n    }\n\n    /**\n     * タッチイベントが発生したとき。\n     */\n    fun onTouchEventOccurred(event: TouchEvent) {\n        this.components.onTouchEventOccurred(event)\n    }\n\n    /**\n     * 対戦状態が変化したとき。\n     */\n    private suspend fun onBattleStateChanged(state: BattleSceneState) {\n        Logger.d { \"対戦シーン 状態変化: $state\" }\n\n        val result = when (state) {\n\n            //  アニメーション再生中\n            is BattleSceneState.PlayingAnimations -> {\n                //  アニメーションを順に消費していく。\n                for (anim in state.animQueue) {\n                    BattleAnimHandler.of(anim).handle(anim, this.components)\n                }\n\n                BattleSceneStateResult.PlayingAnimations(state)\n            }\n\n            //  技選択中\n            is BattleSceneState.SelectingMoves -> {\n\n                //  ユーザの技選択を待機する。\n                this.components.reimu.startStandbyAnim()\n                val moves = state.status.reimuMoves\n                val selectedMove = this.components.moveMenu.showMoveMenu(moves)\n                this.components.reimu.stopStandbyAnim()\n\n                BattleSceneStateResult.SelectingMoves(state, selectedMove.moveKind)\n            }\n        }\n\n        //  状態の終了を通知する。\n        this.manager.onStateEnded(result)\n    }\n}\n","package net.aridai.suckerreimu.battle\n\nimport net.aridai.suckerreimu.battle.anim.BattleAnim\n\n/**\n * 対戦シーン状態\n */\ninternal sealed interface BattleSceneState {\n\n    /**\n     * 対戦ターン\n     */\n    val turn: BattleTurn\n\n    /**\n     * 戦況のスナップショット\n     */\n    val status: BattleStatusSnapshot\n\n    /**\n     * アニメーション再生中\n     */\n    data class PlayingAnimations(\n        override val turn: BattleTurn,\n        override val status: BattleStatusSnapshot,\n        val animQueue: List<BattleAnim>,\n    ) : BattleSceneState\n\n    /**\n     * 技選択中\n     */\n    data class SelectingMoves(\n        override val turn: BattleTurn.PlayableTurn,\n        override val status: BattleStatusSnapshot,\n    ) : BattleSceneState\n}\n","package net.aridai.suckerreimu.battle\n\n/**\n * 対戦シーン状態の結果\n */\ninternal sealed interface BattleSceneStateResult {\n    val state: BattleSceneState\n\n    /**\n     * アニメーション再生中状態の結果\n     */\n    data class PlayingAnimations(\n        override val state: BattleSceneState.PlayingAnimations\n    ) : BattleSceneStateResult\n\n    /**\n     * 技選択中状態の結果\n     */\n    data class SelectingMoves(\n        override val state: BattleSceneState.SelectingMoves,\n        val selectedMove: MoveKind,\n    ) : BattleSceneStateResult\n}\n","package net.aridai.suckerreimu.battle\n\nimport kotlinx.coroutines.flow.MutableStateFlow\nimport kotlinx.coroutines.flow.StateFlow\nimport kotlinx.coroutines.flow.asStateFlow\nimport net.aridai.suckerreimu.Logger\nimport net.aridai.suckerreimu.result.ResultSceneArgs\nimport kotlin.random.Random\n\n/**\n * 対戦シーンの状態管理ロジック\n */\ninternal class BattleStateManager(private val onBattleFinished: (args: ResultSceneArgs) -> Unit) {\n\n    //  NPCの技選択ロジック\n    private val selector: NpcMoveSelector\n\n    //  対戦シーンの状態\n    private val _state = MutableStateFlow(BattleScenario.createInitialState())\n\n    /**\n     * 対戦シーンの状態\n     */\n    val state: StateFlow<BattleSceneState> = this._state.asStateFlow()\n\n    init {\n        val random = Random.Default\n        this.selector = NpcMoveSelector(random)\n    }\n\n    /**\n     * 状態が終了したとき。\n     */\n    fun onStateEnded(result: BattleSceneStateResult) {\n        Logger.d { \"対戦シーン 状態終了: $result\" }\n\n        when (result) {\n\n            //  アニメーション再生中状態が終了した場合\n            is BattleSceneStateResult.PlayingAnimations -> {\n                val state = result.state\n                when (val turn = state.turn) {\n\n                    //  初期状態だった場合\n                    is BattleTurn.InitialState -> {\n                        //  最初のターン (自動操作) のアニメーションを再生させる。\n                        this._state.value = BattleScenario.createFirstTurnState()\n                    }\n\n                    //  最初のターンだった場合\n                    is BattleTurn.FirstTurn -> {\n                        //  次のターンの技選択を行わせる。\n                        this._state.value = BattleSceneState.SelectingMoves(turn = turn.next, status = state.status)\n                    }\n\n                    //  それ以降のターンだった場合\n                    is BattleTurn.PlayableTurn -> {\n                        //  決着がついている場合\n                        if (state.status.result != BattleStatusSnapshot.BattleResult.ONGOING) {\n                            //  結果シーンに遷移させる。\n                            val args =\n                                ResultSceneArgs(state.status.result == BattleStatusSnapshot.BattleResult.WIN, turn.turn)\n                            this.onBattleFinished.invoke(args)\n                        }\n\n                        //  決着がついていない場合\n                        else {\n                            //  次のターンの技選択を行わせる。\n                            this._state.value = BattleSceneState.SelectingMoves(turn = turn.next, status = state.status)\n                        }\n                    }\n                }\n            }\n\n            //  技選択中状態が終了した場合\n            is BattleSceneStateResult.SelectingMoves -> {\n                val state = result.state\n\n                //  まりさちゃんの技を選択する。\n                val reimuMove = result.selectedMove\n                val marisaMove = this.selector.chooseMarisaMove(state.turn, reimuMove)\n                Logger.v { \"対戦シーン 技選択結果 れーむさん=$reimuMove, まりさちゃん=$marisaMove\" }\n\n                //  選択された技に応じてそのターンの戦況を更新する。\n                val pattern = BattleJudgement.judge(state.status, reimuMove, marisaMove)\n                this._state.value = BattleScenario.createBattleAnimState(state.turn, pattern)\n            }\n        }\n    }\n}\n","package net.aridai.suckerreimu.battle\n\n/**\n * 戦況のスナップショット\n */\ninternal data class BattleStatusSnapshot(\n\n    /**\n     * れーむさんの技リスト\n     */\n    val reimuMoves: List<MoveSnapshot>,\n\n    /**\n     * まりさちゃんの特攻のランク\n     */\n    val marisaCRank: Int,\n\n    /**\n     * 対戦結果\n     */\n    val result: BattleResult,\n) {\n    /**\n     * 技PPを消費させる。\n     */\n    fun consumeMovePp(kind: MoveKind): BattleStatusSnapshot {\n        val updatedMoves = this.reimuMoves.map { move ->\n            if (move.moveKind != kind) move\n            else move.copy(remainingPp = move.remainingPp - 1)\n        }\n\n        return this.copy(reimuMoves = updatedMoves)\n    }\n\n    /**\n     * まりさちゃんの特攻のランクをぐーんと上げる。\n     */\n    fun raiseMarisaCStatBy2(): BattleStatusSnapshot {\n        val updatedRank = (this.marisaCRank + 2).coerceAtMost(MAX_RANK)\n        return this.copy(marisaCRank = updatedRank)\n    }\n\n    /**\n     * 対戦結果\n     */\n    enum class BattleResult {\n\n        /**\n         * 試合継続中\n         */\n        ONGOING,\n\n        /**\n         * 勝利\n         */\n        WIN,\n\n        /**\n         * 敗北\n         */\n        LOSE,\n    }\n\n    companion object {\n\n        //  能力変化のランクの最高値\n        private const val MAX_RANK: Int = 6\n\n        /**\n         * 初期状態\n         */\n        val INITIAL: BattleStatusSnapshot = BattleStatusSnapshot(\n            reimuMoves = listOf(\n                MoveSnapshot(moveKind = MoveKind.FANTASY_SEAL, remainingPp = 8, maxPp = 8),\n                MoveSnapshot(moveKind = MoveKind.SUCKER_PUNCH, remainingPp = 8, maxPp = 8),\n            ),\n            marisaCRank = 0,\n            result = BattleResult.ONGOING,\n        )\n    }\n}\n","package net.aridai.suckerreimu.battle\n\n/**\n * 対戦のターン\n */\ninternal sealed interface BattleTurn {\n\n    /**\n     * 次のターン\n     */\n    val next: BattleTurn\n\n    /**\n     * 初期状態\n     */\n    object InitialState : BattleTurn {\n        override val next: FirstTurn get() = FirstTurn\n    }\n\n    /**\n     * 最初のターン (自動操作)\n     */\n    object FirstTurn : BattleTurn {\n        override val next: PlayableTurn get() = PlayableTurn(turn = 2)\n    }\n\n    /**\n     * 操作可能ターン\n     */\n    data class PlayableTurn(val turn: Int) : BattleTurn {\n\n        override val next: PlayableTurn get() = this.copy(turn = this.turn + 1)\n\n        init {\n            require(this.turn >= 2)\n        }\n    }\n}\n",null,"package net.aridai.suckerreimu.battle\n\n/**\n * 技の種類\n */\ninternal enum class MoveKind(val moveName: String) {\n\n    /**\n     * むそうふういん\n     */\n    FANTASY_SEAL(moveName = \"むそうふういん\"),\n\n    /**\n     * ふいうち\n     */\n    SUCKER_PUNCH(moveName = \"ふいうち\"),\n\n    /**\n     * マスタースパーク\n     */\n    MASTER_SPARK(moveName = \"マスタースパーク\"),\n\n    /**\n     * わるだくみ\n     */\n    NASTY_PLOT(moveName = \"わるだくみ\"),\n}\n","package net.aridai.suckerreimu.battle\n\n/**\n * 技データのスナップショット\n */\ninternal data class MoveSnapshot(\n\n    /**\n     * 技の種類\n     */\n    val moveKind: MoveKind,\n\n    /**\n     * 残りPP\n     */\n    val remainingPp: Int,\n\n    /**\n     * 最大PP\n     */\n    val maxPp: Int\n)\n","package net.aridai.suckerreimu.battle\n\nimport kotlin.random.Random\n\n/**\n * NPCの技選択ロジック\n */\ninternal class NpcMoveSelector(private val random: Random) {\n\n    /**\n     * まりさちゃんの技を選択する。\n     */\n    fun chooseMarisaMove(turn: BattleTurn.PlayableTurn, reimuMove: MoveKind): MoveKind {\n        //  2ターン目の場合\n        if (turn.turn == 2) {\n            return when (reimuMove) {\n\n                //  れーむさんがむそうふういんを選んでいた場合、まりさちゃんはマスタースパークを選んで勝利する。\n                MoveKind.FANTASY_SEAL -> MoveKind.MASTER_SPARK\n\n                //  れーむさんがふいうちを選んでいた場合、まりさちゃんはわるだくみを選んで対戦を続行させる。\n                MoveKind.SUCKER_PUNCH -> MoveKind.NASTY_PLOT\n\n                else -> throw IllegalStateException()\n            }\n        }\n\n        //  10ターン目の場合\n        if (turn.turn == 10) {\n            //  仮にれーむさんがふいうちのPPを最大まで増やしていたとしても、このターンにはPPが切れていると考えられるため、\n            //  絶対にまりさちゃんが勝てるであろうマスタースパークを選択する。\n            return MoveKind.MASTER_SPARK\n        }\n\n        //  乱数で2択から選択させる。\n        return when (this.random.nextBoolean()) {\n            true -> MoveKind.MASTER_SPARK\n            false -> MoveKind.NASTY_PLOT\n        }\n    }\n}\n","package net.aridai.suckerreimu.battle.anim\n\nimport net.aridai.suckerreimu.battle.CharacterSide\nimport net.aridai.suckerreimu.battle.components.BattleSceneComponents\n\n/**\n * 特性ポップアップ表示アニメのアニメーションハンドラ\n */\ninternal object AbilityPopupAnimHandler : BattleAnimHandler {\n\n    override suspend fun handle(anim: BattleAnim, components: BattleSceneComponents) {\n        require(anim is BattleAnim.AbilityPopupAnim)\n\n        //  指定されたキャラクタの特性ポップアップ表示アニメーションを再生する。\n        when (anim.side) {\n            CharacterSide.OWN -> components.reimuAbilityPopup.showPopup(anim.abilityName, anim.durationInMs)\n            CharacterSide.OPPONENT -> components.marisaAbilityPopup.showPopup(anim.abilityName, anim.durationInMs)\n        }\n    }\n}\n","package net.aridai.suckerreimu.battle.anim\n\nimport net.aridai.suckerreimu.battle.CharacterSide\nimport net.aridai.suckerreimu.battle.components.BattleSceneComponents\n\n/**\n * キャラクタダメージアニメのアニメーションハンドラ\n */\ninternal object CharacterDamageAnimHandler : BattleAnimHandler {\n\n    override suspend fun handle(anim: BattleAnim, components: BattleSceneComponents) {\n        require(anim is BattleAnim.CharacterDamageAnim)\n\n        //  指定されたキャラクタのダメージアニメーションを再生する。\n        when (anim.side) {\n            CharacterSide.OWN -> components.reimu.playDamageAnim(anim.blinkCount, anim.durationInMs)\n            CharacterSide.OPPONENT -> components.marisa.playDamageAnim(anim.blinkCount, anim.durationInMs)\n        }\n    }\n}\n","package net.aridai.suckerreimu.battle.anim\n\nimport net.aridai.suckerreimu.battle.CharacterSide\nimport net.aridai.suckerreimu.battle.components.BattleSceneComponents\n\n/**\n * キャラクタ入場アニメのアニメーションハンドラ\n */\ninternal object CharacterEnteringAnimHandler : BattleAnimHandler {\n\n    override suspend fun handle(anim: BattleAnim, components: BattleSceneComponents) {\n        require(anim is BattleAnim.CharacterEnteringAnim)\n\n        //  指定されたキャラクタの入場アニメーションを再生する。\n        when (anim.side) {\n            CharacterSide.OWN -> components.reimu.enter(anim.durationInMs)\n            CharacterSide.OPPONENT -> components.marisa.enter(anim.durationInMs)\n        }\n    }\n}\n","package net.aridai.suckerreimu.battle.anim\n\nimport net.aridai.suckerreimu.battle.CharacterSide\nimport net.aridai.suckerreimu.battle.components.BattleSceneComponents\n\n/**\n * キャラクタ退出アニメのアニメーションハンドラ\n */\ninternal object CharacterExitingAnimHandler : BattleAnimHandler {\n\n    override suspend fun handle(anim: BattleAnim, components: BattleSceneComponents) {\n        require(anim is BattleAnim.CharacterExitingAnim)\n\n        //  指定されたキャラクタの退出アニメーションを再生する。\n        when (anim.side) {\n            CharacterSide.OWN -> components.reimu.exit(anim.durationInMs)\n            CharacterSide.OPPONENT -> components.marisa.exit(anim.durationInMs)\n        }\n    }\n}\n","package net.aridai.suckerreimu.battle.anim\n\nimport net.aridai.suckerreimu.battle.CharacterSide\nimport net.aridai.suckerreimu.battle.components.BattleSceneComponents\n\n/**\n * キャラクタ持ち物アニメのアニメーションハンドラ\n */\ninternal object CharacterHeldItemAnimHandler : BattleAnimHandler {\n\n    override suspend fun handle(anim: BattleAnim, components: BattleSceneComponents) {\n        require(anim is BattleAnim.CharacterHeldItemAnim)\n\n        //  指定されたキャラクタの持ち物アニメーションを再生する。\n        when (anim.side) {\n            CharacterSide.OWN -> components.reimu.playHeldItemEffect(anim.durationInMs)\n            CharacterSide.OPPONENT -> components.marisa.playHeldItemEffect(anim.durationInMs)\n        }\n    }\n}\n","package net.aridai.suckerreimu.battle.anim\n\nimport net.aridai.suckerreimu.battle.CharacterSide\nimport net.aridai.suckerreimu.battle.components.BattleSceneComponents\n\n/**\n * キャラクタ能力下降アニメのアニメーションハンドラ\n */\ninternal object CharacterStatDownAnimHandler : BattleAnimHandler {\n\n    override suspend fun handle(anim: BattleAnim, components: BattleSceneComponents) {\n        require(anim is BattleAnim.CharacterStatDownAnim)\n\n        //  指定されたキャラクタの能力下降アニメーションを再生する。\n        when (anim.side) {\n            CharacterSide.OWN -> components.reimu.playStatDownEffect(anim.durationInMs)\n            CharacterSide.OPPONENT -> components.marisa.playStatDownEffect(anim.durationInMs)\n        }\n    }\n}\n","package net.aridai.suckerreimu.battle.anim\n\nimport net.aridai.suckerreimu.battle.CharacterSide\nimport net.aridai.suckerreimu.battle.components.BattleSceneComponents\n\n/**\n * キャラクタ能力上昇アニメのアニメーションハンドラ\n */\ninternal object CharacterStatUpAnimHandler : BattleAnimHandler {\n\n    override suspend fun handle(anim: BattleAnim, components: BattleSceneComponents) {\n        require(anim is BattleAnim.CharacterStatUpAnim)\n\n        //  指定されたキャラクタの能力上昇アニメーションを再生する。\n        when (anim.side) {\n            CharacterSide.OWN -> components.reimu.playStatUpEffect(anim.durationInMs)\n            CharacterSide.OPPONENT -> components.marisa.playStatUpEffect(anim.durationInMs)\n        }\n    }\n}\n","package net.aridai.suckerreimu.battle.anim\n\nimport net.aridai.suckerreimu.battle.CharacterSide\nimport net.aridai.suckerreimu.battle.components.BattleSceneComponents\n\n/**\n * キャラクタステータスバー入場アニメのアニメーションハンドラ\n */\ninternal object CharacterStatusBarEnteringAnimHandler : BattleAnimHandler {\n\n    override suspend fun handle(anim: BattleAnim, components: BattleSceneComponents) {\n        require(anim is BattleAnim.CharacterStatusBarEnteringAnim)\n        val (side, name, currentHp, maxHp, duration) = anim\n\n        when (side) {\n\n            //  自分側 (れーむさん)\n            CharacterSide.OWN -> components.reimuStatusBar.showStatusBar(name, currentHp, maxHp, duration)\n\n            //  相手側 (まりさちゃん)\n            CharacterSide.OPPONENT -> components.marisaStatusBar.showStatusBar(name, currentHp, maxHp, duration)\n        }\n    }\n}\n","package net.aridai.suckerreimu.battle.anim\n\nimport net.aridai.suckerreimu.battle.CharacterSide\nimport net.aridai.suckerreimu.battle.components.BattleSceneComponents\n\n/**\n * キャラクタステータスバー退出アニメのアニメーションハンドラ\n */\ninternal object CharacterStatusBarExitingAnimHandler : BattleAnimHandler {\n\n    override suspend fun handle(anim: BattleAnim, components: BattleSceneComponents) {\n        require(anim is BattleAnim.CharacterStatusBarExitingAnim)\n\n        when (anim.side) {\n\n            //  自分側 (れーむさん)\n            CharacterSide.OWN -> components.reimuStatusBar.hideStatusBar(anim.durationInMs)\n\n            //  相手側 (まりさちゃん)\n            CharacterSide.OPPONENT -> components.marisaStatusBar.hideStatusBar(anim.durationInMs)\n        }\n    }\n}\n","package net.aridai.suckerreimu.battle.anim\n\nimport net.aridai.suckerreimu.battle.CharacterSide\nimport net.aridai.suckerreimu.battle.components.BattleSceneComponents\n\n/**\n * キャラクタステータスバーHP更新アニメのアニメーションハンドラ\n */\ninternal object CharacterStatusBarHpUpdatingAnimHandler : BattleAnimHandler {\n\n    override suspend fun handle(anim: BattleAnim, components: BattleSceneComponents) {\n        require(anim is BattleAnim.CharacterStatusBarHpUpdatingAnim)\n\n        //  指定されたキャラクタのHP更新アニメーションを再生する。\n        when (anim.side) {\n            CharacterSide.OWN -> components.reimuStatusBar.updateCurrentHp(anim.updatedHp, anim.durationInMs)\n            CharacterSide.OPPONENT -> components.marisaStatusBar.updateCurrentHp(anim.updatedHp, anim.durationInMs)\n        }\n    }\n}\n","package net.aridai.suckerreimu.battle.anim\n\nimport kotlinx.coroutines.Deferred\nimport kotlinx.coroutines.async\nimport kotlinx.coroutines.awaitAll\nimport kotlinx.coroutines.coroutineScope\nimport net.aridai.suckerreimu.battle.components.BattleSceneComponents\n\n/**\n * 並列アニメーションのアニメーションハンドラ\n */\ninternal object ParallelAnimHandler : BattleAnimHandler {\n\n    override suspend fun handle(anim: BattleAnim, components: BattleSceneComponents) {\n        require(anim is BattleAnim.Parallel)\n\n        coroutineScope {\n            val jobs = ArrayList<Deferred<Unit>>(anim.animations.size)\n\n            //  子アニメを並列で実行していく。\n            for (child in anim.animations) {\n                val job = async { BattleAnimHandler.of(child).handle(child, components) }\n                jobs.add(job)\n            }\n\n            //  全ての子アニメのハンドリングが終了するまで待機する。\n            jobs.awaitAll()\n        }\n    }\n}\n","package net.aridai.suckerreimu.battle.anim\n\nimport net.aridai.suckerreimu.battle.components.BattleSceneComponents\n\n/**\n * 直列アニメーションのアニメーションハンドラ\n */\ninternal object SerialAnimHandler : BattleAnimHandler {\n\n    override suspend fun handle(anim: BattleAnim, components: BattleSceneComponents) {\n        require(anim is BattleAnim.Serial)\n\n        //  子アニメを直列で実行していく。\n        for (child in anim.animations) {\n            BattleAnimHandler.of(child).handle(child, components)\n        }\n    }\n}\n","package net.aridai.suckerreimu.battle.components\n\nimport kotlinx.coroutines.delay\nimport net.aridai.suckerreimu.Game\nimport net.aridai.suckerreimu.battle.CharacterSide\nimport net.aridai.suckerreimu.startAnimUpdaterAsync\nimport org.w3c.dom.CanvasRenderingContext2D\n\n/**\n * 特性ポップアップ\n */\ninternal class AbilityPopup(private val side: CharacterSide) {\n    companion object {\n\n        //  ポップアップの横幅\n        private const val WIDTH: Double = 300.0\n\n        //  ポップアップの高さ\n        private const val HEIGHT: Double = 80.0\n\n        //  横方向のマージン\n        private const val HORIZONTAL_MARGIN: Double = 32.0\n\n        //  横方向のパディング\n        private const val HORIZONTAL_PADDING: Double = 16.0\n\n        //  縦方向のパディング\n        private const val VERTICAL_PADDING: Double = 18.0\n\n        //  自分側の座標\n        private val OWN_POSITION: Pair<Double, Double> = HORIZONTAL_MARGIN to Game.CANVAS_HEIGHT / 2 - HEIGHT / 2\n\n        //  相手側の座標\n        private val OPPONENT_POSITION: Pair<Double, Double> =\n            Game.CANVAS_WIDTH - WIDTH - HORIZONTAL_MARGIN to Game.CANVAS_HEIGHT / 2 - HEIGHT / 2\n\n        //  フレームの塗りスタイル\n        private const val FRAME_FILL_STYLE: String = \"#333333\"\n\n        //  フォントサイズ\n        private const val FONT_SIZE: Int = 32\n\n        //  フォント\n        private const val FONT: String = \"${FONT_SIZE}px Arial\"\n\n        //  文字の塗りスタイル\n        private const val TEXT_FILL_STYLE: String = \"#FFFFFF\"\n\n        //  表示アニメーションの期間\n        private const val ANIM_DURATION_IN_MS: Long = 100L\n    }\n\n    //  アニメーションの進捗率 (0.0: 非表示, 1.0: 完全表示)\n    private var animProgress: Float = 0.0f\n\n    //  特性名\n    private var abilityName: String? = null\n\n    /**\n     * 描画処理を行う。\n     */\n    fun render(context: CanvasRenderingContext2D) {\n        if (this.animProgress == 0.0f) return\n        val abilityName: String = this.abilityName ?: return\n\n        //  フレームを描画する。\n        val (destX, y) = when (this.side) {\n            CharacterSide.OWN -> OWN_POSITION\n            CharacterSide.OPPONENT -> OPPONENT_POSITION\n        }\n        val initialX = when (this.side) {\n            CharacterSide.OWN -> WIDTH * -1\n            CharacterSide.OPPONENT -> Game.CANVAS_WIDTH\n        }\n        val x = initialX + (destX - initialX) * this.animProgress\n        context.fillStyle = FRAME_FILL_STYLE\n        context.fillRect(x = x, y = y, w = WIDTH, h = HEIGHT)\n\n        //  特性名を描画する。\n        val nameX = x + HORIZONTAL_PADDING\n        val nameY = y + VERTICAL_PADDING + FONT_SIZE\n        context.font = FONT\n        context.fillStyle = TEXT_FILL_STYLE\n        context.fillText(text = abilityName, x = nameX, y = nameY)\n    }\n\n    /**\n     * 特性ポップアップを表示する。\n     */\n    suspend fun showPopup(abilityName: String, durationInMs: Long) {\n        val waitTimeInMs = (durationInMs - ANIM_DURATION_IN_MS * 2).coerceAtLeast(minimumValue = 0L)\n        this.abilityName = abilityName\n        this.animProgress = 0.0f\n\n        //  フェードで表示・非表示を行い、指定期間の表示を行うようにする。\n        startAnimUpdaterAsync(ANIM_DURATION_IN_MS) { this.animProgress = it }\n        delay(waitTimeInMs)\n        startAnimUpdaterAsync(ANIM_DURATION_IN_MS) { this.animProgress = 1.0f - it }\n\n        this.abilityName = null\n        this.animProgress = 0.0f\n    }\n}\n","package net.aridai.suckerreimu.battle.components\n\nimport net.aridai.suckerreimu.Game\nimport net.aridai.suckerreimu.Resources\nimport net.aridai.suckerreimu.startAnimUpdaterAsync\nimport org.w3c.dom.CanvasRenderingContext2D\n\n/**\n * 対戦背景\n */\ninternal class BattleBackground {\n\n    //  フェードエフェクトの進捗率\n    private var fadeProgress: Float = 0.0f\n\n    /**\n     * 描画処理を行う。\n     */\n    fun render(context: CanvasRenderingContext2D) {\n        //  背景を黒で塗りつぶす。\n        context.fillStyle = \"#000000\"\n        context.fillRect(x = 0.0, y = 0.0, w = Game.CANVAS_WIDTH, h = Game.CANVAS_HEIGHT)\n\n        //  背景画像を描画する。\n        val alpha = this.fadeProgress.toDouble()\n        context.globalAlpha = alpha\n        context.drawImage(image = Resources.Images.background, dx = 0.0, dy = 0.0)\n        context.globalAlpha = 1.0\n    }\n\n    /**\n     * フェードインを行う。\n     */\n    suspend fun fadeIn(durationInMs: Long) {\n        this.fadeProgress = 0.0f\n        startAnimUpdaterAsync(durationInMs) { progress -> this.fadeProgress = progress }\n    }\n}\n","package net.aridai.suckerreimu.battle.components\n\nimport net.aridai.suckerreimu.TouchEvent\nimport net.aridai.suckerreimu.battle.CharacterSide\nimport org.w3c.dom.CanvasRenderingContext2D\n\n/**\n * 対戦シーンのコンポーネント群\n */\ninternal class BattleSceneComponents {\n\n    /**\n     * 対戦背景\n     */\n    val battleBackground: BattleBackground = BattleBackground()\n\n    /**\n     * メッセージフレーム\n     */\n    val messageFrame: MessageFrame = MessageFrame()\n\n    /**\n     * 技メニュー\n     */\n    val moveMenu: MoveMenu = MoveMenu()\n\n    /**\n     * れーむさん (自分側)\n     */\n    val reimu: Character = Character(side = CharacterSide.OWN)\n\n    /**\n     * まりさちゃん (相手側)\n     */\n    val marisa: Character = Character(side = CharacterSide.OPPONENT)\n\n    /**\n     * れーむさんのステータスバー\n     */\n    val reimuStatusBar: CharacterStatusBar = CharacterStatusBar(side = CharacterSide.OWN)\n\n    /**\n     * まりさちゃんのステータスバー\n     */\n    val marisaStatusBar: CharacterStatusBar = CharacterStatusBar(side = CharacterSide.OPPONENT)\n\n    /**\n     * れーむさんの特性ポップアップ\n     */\n    val reimuAbilityPopup: AbilityPopup = AbilityPopup(side = CharacterSide.OWN)\n\n    /**\n     * まりささんの特性ポップアップ\n     */\n    val marisaAbilityPopup: AbilityPopup = AbilityPopup(side = CharacterSide.OPPONENT)\n\n    /**\n     * 描画処理を行う。\n     */\n    fun render(context: CanvasRenderingContext2D) {\n        //  コンポーネントの描画処理を呼び出していく。\n        this.battleBackground.render(context)\n        this.reimu.render(context)\n        this.marisa.render(context)\n        this.reimuStatusBar.render(context)\n        this.marisaStatusBar.render(context)\n        this.reimuAbilityPopup.render(context)\n        this.marisaAbilityPopup.render(context)\n        this.messageFrame.render(context)\n        this.moveMenu.render(context)\n    }\n\n    /**\n     * タッチイベントが発生したとき。\n     */\n    fun onTouchEventOccurred(event: TouchEvent) {\n        //  コンポーネントのイベントコールバックを呼び出していく。\n        this.moveMenu.onTouchEventOccurred(event)\n    }\n}\n","package net.aridai.suckerreimu.battle.components\n\nimport kotlinx.browser.document\nimport net.aridai.suckerreimu.AnimCancellation\nimport net.aridai.suckerreimu.Game\nimport net.aridai.suckerreimu.Resources\nimport net.aridai.suckerreimu.battle.CharacterSide\nimport net.aridai.suckerreimu.startAnimUpdaterAsync\nimport net.aridai.suckerreimu.startInfiniteAnimUpdater\nimport org.w3c.dom.CanvasRenderingContext2D\nimport org.w3c.dom.HTMLCanvasElement\nimport org.w3c.dom.Image\nimport org.w3c.dom.Path2D\nimport kotlin.math.PI\nimport kotlin.math.abs\nimport kotlin.math.floor\nimport kotlin.math.sin\n\n/**\n * キャラクタ\n */\ninternal class Character(private val side: CharacterSide) {\n    companion object {\n\n        //  自分側キャラクタの中心座標\n        private val OWN_CENTER_POSITION: Pair<Double, Double> = Game.CANVAS_WIDTH / 4 to Game.CANVAS_HEIGHT * 3 / 4\n\n        //  相手側キャラクタの中心座標\n        private val OPPONENT_CENTER_POSITION: Pair<Double, Double> = Game.CANVAS_WIDTH * 2 / 3 to Game.CANVAS_HEIGHT / 4\n\n        //  待機アニメの期間\n        private const val STANDBY_ANIM_DURATION_IN_MS: Long = 1000L\n\n        //  待機アニメの拡大率\n        private const val STANDBY_ANIM_SCALE: Double = 1.05\n\n        //  持ち物エフェクトの最小半径\n        private const val HELD_ITEM_EFFECT_MIN_RADIUS: Double = 15.0\n\n        //  持ち物エフェクトの最大半径\n        private const val HELD_ITEM_EFFECT_MAX_RADIUS: Double = 30.0\n\n        //  持ち物波紋エフェクトの最小横幅\n        private const val HELD_ITEM_RIPPLE_MIN_WIDTH: Double = 0.0\n\n        //  持ち物波紋エフェクトの最大横幅\n        private const val HELD_ITEM_RIPPLE_MAX_WIDTH: Double = 25.0\n    }\n\n    //  能力変化エフェクト描画用のCanvas\n    private val statEffectCanvas: HTMLCanvasElement by lazy {\n        document.createElement(\"canvas\") as HTMLCanvasElement\n    }\n\n    //  入場アニメの進捗率\n    private var enteringAnimProgress: Float = 0.0f\n\n    //  退出アニメの進捗率\n    private var exitingAnimProgress: Float = 0.0f\n\n    //  待機アニメの進捗率\n    private var standbyAnimProgress: Float = 0.0f\n\n    //  待機アニメのキャンセルハンドラ\n    private var standbyAnimCancellation: AnimCancellation? = null\n\n    //  不透明度 (ダメージアニメーションで使用)\n    private var damageAnimAlpha: Float = 1.0f\n\n    //  能力上昇エフェクトの進捗率\n    private var statUpEffectProgress: Float? = null\n\n    //  能力下降エフェクトの進捗率\n    private var statDownEffectProgress: Float? = null\n\n    //  持ち物エフェクトの進捗率\n    private var heldItemEffectProgress: Float? = null\n\n    /**\n     * 描画処理を行う。\n     */\n    fun render(context: CanvasRenderingContext2D) {\n        val characterImage = when (this.side) {\n            CharacterSide.OWN -> Resources.Images.characterReimu\n            CharacterSide.OPPONENT -> Resources.Images.characterMarisa\n        }\n\n        //  キャラクタの座標・拡大率・クリッピング用パスを求める。\n        val (cx, cy) = this.calculateCenterPos(characterImage)\n        val currentScale = 1.0 + (STANDBY_ANIM_SCALE - 1.0) * (1 - abs(0.5 - this.standbyAnimProgress) * 2)\n        val clipPath = this.calculateClippingPath(characterImage)\n        val width = characterImage.width * currentScale\n        val height = characterImage.height * currentScale\n        val x = cx - width / 2\n        val y = cy - height / 2\n\n        //  キャラクタを描画する。\n        context.globalAlpha = this.damageAnimAlpha.toDouble()\n        context.save()\n        if (this.exitingAnimProgress != 0.0f) context.clip(clipPath)\n        context.drawImage(characterImage, x, y, width, height)\n        context.restore()\n        context.globalAlpha = 1.0\n\n        //  エフェクトを描画する。\n        this.renderStatUpEffect(context, characterImage, x, y)\n        this.renderStatDownEffect(context, characterImage, x, y)\n        this.renderHeldItemEffect(context, characterImage, cx, cy)\n    }\n\n    /**\n     * 入場アニメーションを再生する。\n     */\n    suspend fun enter(durationInMs: Long) {\n        startAnimUpdaterAsync(durationInMs) { this.enteringAnimProgress = it }\n    }\n\n    /**\n     * 退出アニメーションを再生する。\n     */\n    suspend fun exit(durationInMs: Long) {\n        startAnimUpdaterAsync(durationInMs) { this.exitingAnimProgress = it }\n    }\n\n    /**\n     * 待機アニメーションを開始する。\n     */\n    fun startStandbyAnim() {\n        this.standbyAnimCancellation?.cancel()\n        this.standbyAnimCancellation =\n            startInfiniteAnimUpdater(STANDBY_ANIM_DURATION_IN_MS) { this.standbyAnimProgress = it }\n    }\n\n    /**\n     * 待機アニメーションを停止する。\n     */\n    fun stopStandbyAnim() {\n        this.standbyAnimCancellation?.cancel()\n        this.standbyAnimCancellation = null\n        this.standbyAnimProgress = 0.0f\n    }\n\n    /**\n     * ダメージアニメーションを再生する。\n     */\n    suspend fun playDamageAnim(blinkCount: Int, durationInMs: Long) {\n        startAnimUpdaterAsync(durationInMs) { progress ->\n            val alpha = abs(0.5 - (progress * blinkCount - floor(progress * blinkCount))) * 2\n            this.damageAnimAlpha = alpha.toFloat()\n        }\n    }\n\n    /**\n     * 能力上昇エフェクトを再生する。\n     */\n    suspend fun playStatUpEffect(durationInMs: Long) {\n        this.statUpEffectProgress = 0.0f\n        startAnimUpdaterAsync(durationInMs) { this.statUpEffectProgress = it }\n        this.statUpEffectProgress = null\n    }\n\n    /**\n     * 能力下降エフェクトを再生する。\n     */\n    suspend fun playStatDownEffect(durationInMs: Long) {\n        this.statDownEffectProgress = 0.0f\n        startAnimUpdaterAsync(durationInMs) { this.statDownEffectProgress = it }\n        this.statDownEffectProgress = null\n    }\n\n    /**\n     * 持ち物エフェクトを再生する。\n     */\n    suspend fun playHeldItemEffect(durationInMs: Long) {\n        this.heldItemEffectProgress = 0.0f\n        startAnimUpdaterAsync(durationInMs) { this.heldItemEffectProgress = it }\n        this.heldItemEffectProgress = null\n    }\n\n    //  進捗率に基づいた中央座標を計算する。\n    private fun calculateCenterPos(characterImage: Image): Pair<Double, Double> {\n        //  退出アニメーションが再生されていない場合、入場アニメーションに基づいて座標を計算する。\n        if (this.exitingAnimProgress == 0.0f) {\n            //  自分側は画面左端から、相手側は画面右端から入場してくる。\n            val initialCx = when (this.side) {\n                CharacterSide.OWN -> 0.0 - characterImage.width / 2\n                CharacterSide.OPPONENT -> Game.CANVAS_WIDTH + characterImage.width / 2\n            }\n            val (destCx, cy) = when (this.side) {\n                CharacterSide.OWN -> OWN_CENTER_POSITION\n                CharacterSide.OPPONENT -> OPPONENT_CENTER_POSITION\n            }\n            val cx = initialCx + (destCx - initialCx) * this.enteringAnimProgress\n\n            return cx to cy\n        }\n\n        //  退出アニメーションが再生されている場合、退出アニメーションに基づいて座標を計算する。\n        else {\n            val (cx, initialCy) = when (this.side) {\n                CharacterSide.OWN -> OWN_CENTER_POSITION\n                CharacterSide.OPPONENT -> OPPONENT_CENTER_POSITION\n            }\n            val destCy = initialCy + characterImage.height\n            val cy = initialCy + (destCy - initialCy) * this.exitingAnimProgress\n\n            return cx to cy\n        }\n    }\n\n    //  クリッピング用Pathを計算する。\n    //  (退出用アニメーション再生時にキャラクタ画像下端が途切れるようにするためにクリッピングが必要となる。)\n    private fun calculateClippingPath(characterImage: Image): Path2D {\n        val width = characterImage.width\n        val height = characterImage.height\n\n        val (cx, cy) = when (this.side) {\n            CharacterSide.OWN -> OWN_CENTER_POSITION\n            CharacterSide.OPPONENT -> OPPONENT_CENTER_POSITION\n        }\n        val left = cx - width / 2\n        val right = left + width\n        val top = cy - height / 2\n        val bottom = top + height\n\n        return Path2D().also {\n            it.moveTo(left, top)\n            it.lineTo(right, top)\n            it.lineTo(right, bottom)\n            it.lineTo(left, bottom)\n            it.lineTo(left, top)\n            it.closePath()\n        }\n    }\n\n    //  能力上昇エフェクトを描画する。\n    private fun renderStatUpEffect(context: CanvasRenderingContext2D, characterImage: Image, x: Double, y: Double) {\n        val progress = this.statUpEffectProgress ?: return\n\n        //  合成描画用のCanvasを取得する。\n        val statEffectCanvas = this.statEffectCanvas.also {\n            it.width = characterImage.width\n            it.height = characterImage.height\n        }\n        val statEffectContext = statEffectCanvas.getContext(\"2d\") as CanvasRenderingContext2D\n        val effectImage = Resources.Images.statUpEffect\n\n        //  エフェクト画像をキャラクタ画像でくり抜くようにして描画する。\n        val effectOffsetY = effectImage.height / 2.0 * -1.0 * progress\n        val alpha = ((0.5 - abs(progress - 0.5)) * 4).coerceIn(minimumValue = 0.0, maximumValue = 1.0)\n        statEffectContext.globalAlpha = alpha\n\n        //  キャラクタ画像の色をエフェクト画像の色にするための事前描画を行う。\n        statEffectContext.drawImage(effectImage, 0.0, effectOffsetY)\n\n        //  切り抜きの型にするためのキャラクタ画像を描画する。\n        statEffectContext.globalCompositeOperation = \"destination-in\"\n        statEffectContext.drawImage(characterImage, 0.0, 0.0)\n\n        //  その上からエフェクト画像を描画する。\n        statEffectContext.drawImage(effectImage, 0.0, effectOffsetY)\n        statEffectContext.globalAlpha = 1.0\n\n        //  元のCanvasに描画する。\n        context.drawImage(statEffectCanvas, x, y)\n    }\n\n    //  能力下降エフェクトを描画する。\n    private fun renderStatDownEffect(context: CanvasRenderingContext2D, characterImage: Image, x: Double, y: Double) {\n        val progress = this.statDownEffectProgress ?: return\n\n        //  合成描画用のCanvasを取得する。\n        val statEffectCanvas = this.statEffectCanvas.also {\n            it.width = characterImage.width\n            it.height = characterImage.height\n        }\n        val statEffectContext = statEffectCanvas.getContext(\"2d\") as CanvasRenderingContext2D\n        val effectImage = Resources.Images.statDownEffect\n\n        //  エフェクト画像をキャラクタ画像でくり抜くようにして描画する。\n        val effectOffsetY = effectImage.height / 2.0 * (progress - 1.0)\n        val alpha = ((0.5 - abs(progress - 0.5)) * 4).coerceIn(minimumValue = 0.0, maximumValue = 1.0)\n        statEffectContext.globalAlpha = alpha\n\n        //  キャラクタ画像の色をエフェクト画像の色にするための事前描画を行う。\n        statEffectContext.drawImage(effectImage, 0.0, effectOffsetY)\n\n        //  切り抜きの型にするためのキャラクタ画像を描画する。\n        statEffectContext.globalCompositeOperation = \"destination-in\"\n        statEffectContext.drawImage(characterImage, 0.0, 0.0)\n\n        //  その上からエフェクト画像を描画する。\n        statEffectContext.drawImage(effectImage, 0.0, effectOffsetY)\n        statEffectContext.globalAlpha = 1.0\n\n        //  元のCanvasに描画する。\n        context.drawImage(statEffectCanvas, x, y)\n    }\n\n    //  持ち物エフェクトを描画する。\n    private fun renderHeldItemEffect(context: CanvasRenderingContext2D, characterImage: Image, cx: Double, cy: Double) {\n        //  キャラクタ画像頂点からキャラクタ画像中心に向かって、カーブを描きながら左右2つの白い光を描画させる。\n        //  その後、キャラクタ画像中心から波紋のように外側に向かって円を走らせるように描画する。\n        val progress = this.heldItemEffectProgress ?: return\n        val particleEffectRatio = 0.8\n        val particleProgress = (progress * (1.0 / particleEffectRatio)).coerceAtMost(maximumValue = 1.0)\n        val rippleProgress = (progress - 0.8).coerceAtLeast(minimumValue = 0.0) / (1.0 - 0.8)\n\n        //  X座標はsin関数を使って左右に広がるようにカーブを描くような動きにする。\n        val offsetX = sin(particleProgress * PI) * characterImage.width / 2\n        val leftX = cx - offsetX\n        val rightX = cx + offsetX\n\n        //  Y座標は等速で上から下へ移動させる動きにする。\n        val initialY = cy - characterImage.height / 2\n        val y = initialY + (cy - initialY) * particleProgress\n\n        //  白い光の半径は徐々に大きくなり、アニメーション折り返し地点から徐々に小さくなるようにする。\n        val radiusDiff = HELD_ITEM_EFFECT_MAX_RADIUS - HELD_ITEM_EFFECT_MIN_RADIUS\n        val radius = HELD_ITEM_EFFECT_MIN_RADIUS + radiusDiff * (1.0 - abs(particleProgress * 2 - 1.0))\n\n        //  2つの白い光を描画する。\n        if (particleProgress != 1.0) {\n            context.beginPath()\n            context.fillStyle = \"#FFFFFF\"\n            context.arc(leftX, y, radius, 0.0, PI * 2)\n            context.arc(rightX, y, radius, 0.0, PI * 2)\n            context.fill()\n        }\n\n        //  波紋を描画する。\n        val widthDiff = HELD_ITEM_RIPPLE_MIN_WIDTH - HELD_ITEM_RIPPLE_MAX_WIDTH\n        val rippleEffectWidth = HELD_ITEM_RIPPLE_MAX_WIDTH + widthDiff * rippleProgress\n        val rippleRadius = characterImage.width / 2.0 * rippleProgress\n        context.beginPath()\n        context.strokeStyle = \"#FFFFFF\"\n        context.lineWidth = rippleEffectWidth\n        context.arc(cx, cy, rippleRadius, 0.0, PI * 2)\n        context.stroke()\n    }\n}\n",null,"package net.aridai.suckerreimu.battle.components\n\nimport net.aridai.suckerreimu.Game\nimport net.aridai.suckerreimu.battle.CharacterSide\nimport net.aridai.suckerreimu.startAnimUpdaterAsync\nimport org.w3c.dom.CanvasRenderingContext2D\nimport org.w3c.dom.CanvasTextAlign\nimport org.w3c.dom.END\nimport org.w3c.dom.START\n\n/**\n * キャラクタステータスバー\n */\ninternal class CharacterStatusBar(private val side: CharacterSide) {\n    companion object {\n\n        //  キャラクタステータスバーの横幅\n        private const val WIDTH: Double = 300.0\n\n        //  キャラクタステータスバーの高さ\n        private const val HEIGHT: Double = 120.0\n\n        //  縦のマージン\n        private const val VERTICAL_MARGIN: Double = 32.0\n\n        //  横のマージン\n        private const val HORIZONTAL_MARGIN: Double = 32.0\n\n        //  縦のパディング\n        private const val VERTICAL_PADDING: Double = 12.0\n\n        //  横のパディング\n        private const val HORIZONTAL_PADDING: Double = 16.0\n\n        //  自分側の座標\n        private val OWN_POSITION: Pair<Double, Double> =\n            HORIZONTAL_MARGIN to Game.CANVAS_HEIGHT - HEIGHT - VERTICAL_MARGIN\n\n        //  相手側の座標\n        private val OPPONENT_POSITION: Pair<Double, Double> =\n            Game.CANVAS_WIDTH - WIDTH - HORIZONTAL_MARGIN to VERTICAL_MARGIN\n\n        //  フレームの塗りスタイル\n        private const val FRAME_FILL_STYLE: String = \"#A0A0A0\"\n\n        //  キャラクタ名のフォントサイズ\n        private const val NAME_FONT_SIZE: Int = 32\n\n        //  キャラクタ名のフォント\n        private const val NAME_FONT: String = \"${NAME_FONT_SIZE}px Arial\"\n\n        //  HP文字列のフォントサイズ\n        private const val HP_STR_FONT_SIZE: Int = 20\n\n        //  HP文字列のフォント\n        private const val HP_STR_FONT: String = \"${HP_STR_FONT_SIZE}px Arial\"\n\n        //  テキストの塗りスタイル\n        private const val TEXT_FILL_STYLE: String = \"#FFFFFF\"\n\n        //  HPゲージの高さ\n        private const val HP_GAUGE_HEIGHT: Double = 12.0\n\n        //  HPゲージのトラック部分の塗りスタイル\n        private const val HP_GAUGE_TRACK_FILL_STYLE: String = \"#333333\"\n\n        //  HPゲージの緑ゲージの塗りスタイル\n        private const val HP_GAUGE_GREEN_FILL_STYLE: String = \"#00FF00\"\n\n        //  HPゲージの黄ゲージの塗りスタイル\n        private const val HP_GAUGE_YELLOW_FILL_STYLE: String = \"#FFFF00\"\n\n        //  HPゲージの赤ゲージの塗りスタイル\n        private const val HP_GAUGE_RED_FILL_STYLE: String = \"#FF0000\"\n\n        //  HPゲージの残量の最小横幅\n        //  NOTE: HP1の場合でも最低限の横幅を確保することで見やすくするため。\n        private const val HP_GAUGE_REMAINING_MIN_WIDTH: Double = 5.0\n    }\n\n    //  ステータスのスナップショット値\n    private var statusSnapshot: StatusSnapshot? = null\n\n    //  配置アニメーションの進捗率\n    private var positioningProgress: Float = 0.0f\n\n    /**\n     * 描画処理を行う。\n     */\n    fun render(context: CanvasRenderingContext2D) {\n        val (name, currentHp, maxHp) = this.statusSnapshot ?: return\n\n        //  入場アニメの進捗率に基づいて座標を決定して、フレームを描画する。\n        val (initialX, initialY) = when (this.side) {\n            CharacterSide.OWN -> OWN_POSITION.copy(first = 0 - WIDTH)\n            CharacterSide.OPPONENT -> OPPONENT_POSITION.copy(first = Game.CANVAS_WIDTH)\n        }\n        val (destX, destY) = when (this.side) {\n            CharacterSide.OWN -> OWN_POSITION\n            CharacterSide.OPPONENT -> OPPONENT_POSITION\n        }\n        val frameX = initialX + (destX - initialX) * this.positioningProgress\n        val frameY = initialY + (destY - initialY) * this.positioningProgress\n        context.fillStyle = FRAME_FILL_STYLE\n        context.fillRect(x = frameX, y = frameY, w = WIDTH, h = HEIGHT)\n\n        //  キャラクタ名を描画する。\n        val nameX = frameX + HORIZONTAL_PADDING\n        val nameY = frameY + NAME_FONT_SIZE + VERTICAL_PADDING\n        context.font = NAME_FONT\n        context.fillStyle = TEXT_FILL_STYLE\n        context.fillText(text = name, x = nameX, y = nameY)\n\n        //  HP数値を描画する。\n        val hpStr = \"$currentHp/$maxHp\"\n        val hpX = frameX + WIDTH - HORIZONTAL_PADDING\n        val hpY = frameY + HEIGHT - VERTICAL_PADDING\n        if (this.side == CharacterSide.OWN) {\n            context.font = HP_STR_FONT\n            context.fillStyle = TEXT_FILL_STYLE\n            context.textAlign = CanvasTextAlign.END\n            context.fillText(hpStr, hpX, hpY)\n            context.textAlign = CanvasTextAlign.START\n        }\n\n        //  HPゲージを描画する。\n        val hpGaugeX = frameX + HORIZONTAL_PADDING\n        val hpGaugeCy = (nameY + hpY - HP_STR_FONT_SIZE) / 2\n        val hpGaugeY = hpGaugeCy - HP_GAUGE_HEIGHT / 2\n        val hpGaugeWidth = WIDTH - HORIZONTAL_PADDING * 2\n        context.fillStyle = HP_GAUGE_TRACK_FILL_STYLE\n        context.fillRect(x = hpGaugeX, y = hpGaugeY, w = hpGaugeWidth, h = HP_GAUGE_HEIGHT)\n\n        //  HP残量に応じて色分けする。\n        val remainingRatio = (currentHp.toDouble() / maxHp).coerceIn(minimumValue = 0.0, maximumValue = 1.0)\n        val remainingWidth =\n            if (currentHp == 0) 0.0 else (hpGaugeWidth * remainingRatio).coerceAtLeast(HP_GAUGE_REMAINING_MIN_WIDTH)\n        context.fillStyle = when {\n            remainingRatio <= 0.25 -> HP_GAUGE_RED_FILL_STYLE\n            remainingRatio <= 0.5 -> HP_GAUGE_YELLOW_FILL_STYLE\n            else -> HP_GAUGE_GREEN_FILL_STYLE\n        }\n        context.fillRect(x = hpGaugeX, y = hpGaugeY, w = remainingWidth, h = HP_GAUGE_HEIGHT)\n    }\n\n    /**\n     * ステータスバーを表示させる。\n     */\n    suspend fun showStatusBar(name: String, currentHp: Int, maxHp: Int, durationInMs: Long) {\n        val snapshot = StatusSnapshot(name, currentHp, maxHp)\n        this.statusSnapshot = snapshot\n\n        if (durationInMs == 0L) this.positioningProgress = 1.0f\n        else startAnimUpdaterAsync(durationInMs) { progress -> this.positioningProgress = progress }\n    }\n\n    /**\n     * ステータスバーを非表示にさせる。\n     */\n    suspend fun hideStatusBar(durationInMs: Long) {\n        if (durationInMs == 0L) this.positioningProgress = 0.0f\n        else startAnimUpdaterAsync(durationInMs) { progress -> this.positioningProgress = 1.0f - progress }\n\n        this.statusSnapshot = null\n    }\n\n    /**\n     * 現在HPを更新する。\n     */\n    suspend fun updateCurrentHp(destHp: Int, durationInMs: Long) {\n        val snapshot = this.statusSnapshot ?: return\n        val srcHp = snapshot.currentHp\n        val diff = destHp - srcHp\n\n        //  アニメーションさせながらHPを更新していく。\n        startAnimUpdaterAsync(durationInMs) { progress ->\n            this.statusSnapshot = snapshot.copy(currentHp = srcHp + (diff * progress).toInt())\n        }\n        this.statusSnapshot = snapshot.copy(currentHp = destHp)\n    }\n\n    //  ステータスのスナップショット値\n    private data class StatusSnapshot(val name: String, val currentHp: Int, val maxHp: Int)\n}\n","package net.aridai.suckerreimu.battle.components\n\nimport kotlinx.coroutines.delay\nimport net.aridai.suckerreimu.Game\nimport net.aridai.suckerreimu.startAnimUpdaterAsync\nimport org.w3c.dom.CanvasRenderingContext2D\n\n/**\n * メッセージフレーム\n */\ninternal class MessageFrame {\n    companion object {\n\n        //  メッセージフレームの横幅\n        private const val WIDTH: Double = 1200.0\n\n        //  メッセージフレームの高さ\n        private const val HEIGHT: Double = 200.0\n\n        //  画面下部の余白\n        private const val MARGIN_BOTTOM: Double = 16.0\n\n        //  フェードの期間\n        private const val FADE_DURATION_IN_MS: Long = 250L\n\n        //  フレームの塗りスタイル\n        private const val FRAME_FILL_STYLE: String = \"#333333\"\n\n        //  文言の塗りスタイル\n        private const val TEXT_FILL_STYLE: String = \"#FFFFFF\"\n\n        //  文言のフォントサイズ\n        private const val FONT_SIZE: Int = 48\n\n        //  文言のフォントスタイル\n        private const val FONT: String = \"${FONT_SIZE}px Arial\"\n\n        //  文言の横余白\n        private const val TEXT_HORIZONTAL_PADDING: Double = 32.0\n\n        //  文言の縦余白\n        private const val TEXT_VERTICAL_PADDING: Double = 32.0\n    }\n\n    //  不透明度\n    private var alpha: Double = 0.0\n\n    //  表示するテキスト\n    private var text: String? = null\n\n    /**\n     * 描画処理を行う。\n     */\n    fun render(context: CanvasRenderingContext2D) {\n        context.globalAlpha = this.alpha\n\n        //  フレームを描画する。\n        val frameX = (Game.CANVAS_WIDTH - WIDTH) / 2\n        val frameY = Game.CANVAS_HEIGHT - HEIGHT - MARGIN_BOTTOM\n        context.fillStyle = FRAME_FILL_STYLE\n        context.fillRect(x = frameX, y = frameY, w = WIDTH, h = HEIGHT)\n\n        //  テキストが設定されている場合、テキストを描画する。\n        val text = this.text\n        if (text != null) {\n            val textX = frameX + TEXT_HORIZONTAL_PADDING\n            val textY = frameY + TEXT_VERTICAL_PADDING + FONT_SIZE\n            context.fillStyle = TEXT_FILL_STYLE\n            context.font = FONT\n            context.fillText(text, textX, textY)\n        }\n\n        context.globalAlpha = 1.0\n    }\n\n    /**\n     * メッセージを表示する。\n     */\n    suspend fun showMessage(text: String, durationInMs: Long) {\n        //  フェードインでフレームを表示させる。\n        this.text = text\n        startAnimUpdaterAsync(duration = FADE_DURATION_IN_MS) { progress -> this.alpha = progress.toDouble() }\n\n        //  指定期間だけメッセージが表示されるように待機を入れる。\n        val waitTimeInMs = (durationInMs - FADE_DURATION_IN_MS * 2).coerceAtLeast(minimumValue = 0L)\n        delay(waitTimeInMs)\n\n        //  フェードアウトでフレームを非表示にする。\n        startAnimUpdaterAsync(duration = FADE_DURATION_IN_MS) { progress -> this.alpha = 1.0 - progress.toDouble() }\n        this.text = null\n    }\n}\n","package net.aridai.suckerreimu.battle.components\n\nimport kotlinx.coroutines.flow.MutableStateFlow\nimport kotlinx.coroutines.flow.filterNotNull\nimport kotlinx.coroutines.flow.first\nimport net.aridai.suckerreimu.Game\nimport net.aridai.suckerreimu.Logger\nimport net.aridai.suckerreimu.TouchEvent\nimport net.aridai.suckerreimu.battle.MoveSnapshot\nimport net.aridai.suckerreimu.startAnimUpdaterAsync\nimport org.w3c.dom.CanvasRenderingContext2D\nimport org.w3c.dom.CanvasTextAlign\nimport org.w3c.dom.END\nimport org.w3c.dom.START\n\n/**\n * 技メニュー\n */\ninternal class MoveMenu {\n    companion object {\n\n        //  横のマージン\n        private const val HORIZONTAL_MARGIN: Double = 32.0\n\n        //  縦のマージン\n        private const val VERTICAL_MARGIN: Double = 48.0\n\n        //  横のパディング\n        private const val HORIZONTAL_PADDING: Double = 16.0\n\n        //  縦のパディング\n        private const val VERTICAL_PADDING: Double = 24.0\n\n        //  項目間の空白\n        private const val ITEM_SPACE: Double = 16.0\n\n        //  技メニュー項目の横幅\n        private const val ITEM_WIDTH: Double = 400.0\n\n        //  技メニュー項目の高さ\n        private const val ITEM_HEIGHT: Double = 100.0\n\n        //  技メニュー項目の最大数\n        private const val MAX_ITEM_COUNT: Int = 4\n\n        //  技メニュー項目の塗りスタイル\n        private const val ITEM_FILL_STYLE: String = \"#42A5F5\"\n\n        //  フォーカスされた技メニュー項目の塗りスタイル\n        private const val FOCUSED_ITEM_FILL_STYLE: String = \"#3295E5\"\n\n        //  非活性化された技メニュー項目の塗りスタイル\n        private const val DISABLED_ITEM_FILL_STYLE: String = \"#808080\"\n\n        //  技名のフォントサイズ\n        private const val MOVE_NAME_FONT_SIZE: Int = 32\n\n        //  技名のフォント\n        private const val MOVE_NAME_FONT: String = \"${MOVE_NAME_FONT_SIZE}px Arial\"\n\n        //  技名の塗りスタイル\n        private const val MOVE_NAME_FILL_STYLE: String = \"#FFFFFF\"\n\n        //  技PPのフォントサイズ\n        private const val MOVE_PP_FONT_SIZE: Int = 24\n\n        //  技PPのフォント\n        private const val MOVE_PP_FONT: String = \"${MOVE_PP_FONT_SIZE}px Arial\"\n\n        //  技PPの塗りスタイル\n        private const val MOVE_PP_FILL_STYLE: String = \"#FFFFFF\"\n\n        //  フェード期間\n        private const val FADE_DURATION_IN_MS: Long = 100L\n\n        //  各技メニュー項目の描画開始座標のリスト\n        //  (上から順の左上描画開始地点座標のリスト)\n        private val ITEM_POSITIONS: List<Pair<Double, Double>> = List(size = MAX_ITEM_COUNT) { index ->\n            val itemCount = MAX_ITEM_COUNT - index\n            val spaceCount = MAX_ITEM_COUNT - index - 1\n            val x = Game.CANVAS_WIDTH - HORIZONTAL_MARGIN - ITEM_WIDTH\n            val y = Game.CANVAS_HEIGHT - VERTICAL_MARGIN - ITEM_HEIGHT * itemCount - ITEM_SPACE * spaceCount\n\n            x to y\n        }\n    }\n\n    //  技リスト\n    //  (技数が余る場合は先頭側からnull埋めされる。)\n    private var moves: List<MoveSnapshot?> = emptyList()\n\n    //  配置進捗率 (0.0: 画面外, 1.0: 配置完了)\n    private var positioningProgress: Float = 0.0f\n\n    //  現在フォーカス中の項目のインデックス\n    private var focusedItemIndex: Int? = null\n\n    //  選択された技\n    private val selectedMove = MutableStateFlow<MoveSnapshot?>(value = null)\n\n    /**\n     * 描画処理を行う。\n     */\n    fun render(context: CanvasRenderingContext2D) {\n        //  各技ごとに描画を行っていく。\n        for (index in this.moves.indices) {\n            this.renderItem(context, index)\n        }\n    }\n\n    /**\n     * タッチイベントが発生したとき。\n     */\n    fun onTouchEventOccurred(event: TouchEvent) {\n        if (this.positioningProgress != 1.0f) return\n\n        when (event) {\n\n            //  押下された場合\n            is TouchEvent.PointerDown -> {\n                //  すでにフォーカス済みである場合、先にハンドリングしたものを優先する。\n                if (this.focusedItemIndex != null) return\n\n                //  タッチ座標に該当する項目を見つけ、フォーカス済みとして記録する。\n                val index = this.findSelectedItemIndex(event.x, event.y) ?: return\n                this.focusedItemIndex = index\n                Logger.d { \"技メニュー 押下: [$index], $event\" }\n            }\n\n            //  移動された場合\n            is TouchEvent.PointerMove -> {\n                val focusedIndex = this.focusedItemIndex ?: return\n\n                //  タッチ座標に該当する項目を見つけ、該当項目が現在フォーカス中の項目以外である場合、フォーカスをキャンセルする。\n                val index = this.findSelectedItemIndex(event.x, event.y)\n                if (focusedIndex != index) {\n                    this.focusedItemIndex = null\n                    Logger.d { \"技メニュー 移動 フォーカスキャンセル: [$focusedIndex], [$index], $event\" }\n                }\n            }\n\n            //  押上された場合\n            is TouchEvent.PointerUp -> {\n                //  その時点でフォーカスされていた項目を選択したとみなす。\n                val focusedIndex = this.focusedItemIndex ?: return\n                this.focusedItemIndex = null\n                val move = this.moves.elementAtOrNull(focusedIndex) ?: return\n                if (move.remainingPp == 0) return\n\n                //  技の選択を通知する。\n                Logger.d { \"技メニュー 選択: [$focusedIndex], $move, $event\" }\n                this.selectedMove.value = move\n            }\n\n            //  キャンセルされた場合\n            is TouchEvent.PointerCancel -> {\n                //  フォーカスを強制解除する。\n                if (this.focusedItemIndex != null) {\n                    Logger.d { \"技メニュー キャンセル: [${this.focusedItemIndex}], $event\" }\n                    this.focusedItemIndex = null\n                }\n            }\n        }\n    }\n\n    /**\n     * 技メニューを表示する。\n     * (戻り値で選択された技を返す。)\n     */\n    suspend fun showMoveMenu(moves: List<MoveSnapshot>): MoveSnapshot {\n        try {\n            //  技リストを設定する。\n            this.moves = List(size = MAX_ITEM_COUNT) { i -> moves.elementAtOrNull(i - (MAX_ITEM_COUNT - moves.size)) }\n            this.selectedMove.value = null\n\n            //  アニメーションで表示させていく。\n            startAnimUpdaterAsync(\n                duration = FADE_DURATION_IN_MS,\n                onUpdated = { progress -> this.positioningProgress = progress },\n            )\n\n            //  技が選択されるまで待機する。\n            val selectedMove = this.selectedMove.filterNotNull().first()\n            this.selectedMove.value = null\n\n            //  アニメーションで非表示にしていく。\n            startAnimUpdaterAsync(\n                duration = FADE_DURATION_IN_MS,\n                onUpdated = { progress -> this.positioningProgress = 1.0f - progress },\n            )\n\n            //  選択結果を返す。\n            return selectedMove\n        } finally {\n            this.moves = emptyList()\n        }\n    }\n\n    //  メニュー項目を描画する。\n    private fun renderItem(context: CanvasRenderingContext2D, index: Int) {\n        val move = this.moves.elementAtOrNull(index) ?: return\n\n        //  フレームを描画する。\n        val (destX, y) = ITEM_POSITIONS[index]\n        val initialX = Game.CANVAS_WIDTH\n        val x = initialX + (destX - initialX) * this.positioningProgress\n        context.fillStyle = when {\n            move.remainingPp == 0 -> DISABLED_ITEM_FILL_STYLE\n            this.focusedItemIndex == index -> FOCUSED_ITEM_FILL_STYLE\n            else -> ITEM_FILL_STYLE\n        }\n        context.fillRect(x, y, ITEM_WIDTH, ITEM_HEIGHT)\n\n        //  技名を描画する。\n        val nameX = x + HORIZONTAL_PADDING\n        val nameY = y + VERTICAL_PADDING + MOVE_NAME_FONT_SIZE\n        context.font = MOVE_NAME_FONT\n        context.fillStyle = MOVE_NAME_FILL_STYLE\n        context.fillText(move.moveKind.moveName, nameX, nameY)\n\n        //  PPを描画する。\n        val ppX = x + ITEM_WIDTH - HORIZONTAL_PADDING\n        val ppY = nameY + MOVE_PP_FONT_SIZE\n        context.font = MOVE_PP_FONT\n        context.fillStyle = MOVE_PP_FILL_STYLE\n        context.textAlign = CanvasTextAlign.END\n        context.fillText(\"${move.remainingPp}/${move.maxPp}\", ppX, ppY)\n        context.textAlign = CanvasTextAlign.START\n    }\n\n    //  タッチ座標に対応した項目のインデックスを取得する。\n    private fun findSelectedItemIndex(x: Double, y: Double): Int? {\n        for (index in ITEM_POSITIONS.indices) {\n            val (left, top) = ITEM_POSITIONS[index]\n            val right = left + ITEM_WIDTH\n            val bottom = top + ITEM_HEIGHT\n\n            if (x in left..right && y in top..bottom) return index\n        }\n\n        return null\n    }\n}\n",null,null,null,"package net.aridai.suckerreimu.result\n\nimport net.aridai.suckerreimu.TouchEvent\nimport net.aridai.suckerreimu.result.components.ResultBackground\nimport net.aridai.suckerreimu.result.components.ResultMessage\nimport net.aridai.suckerreimu.result.components.ShareButton\nimport net.aridai.suckerreimu.startAnimUpdater\nimport org.w3c.dom.CanvasRenderingContext2D\n\n/**\n * 結果シーン\n */\ninternal class ResultScene {\n    companion object {\n\n        //  フェードエフェクトの期間\n        private const val FADE_DURATION_IN_MS: Long = 1000L\n    }\n\n    //  引数\n    private lateinit var args: ResultSceneArgs\n\n    //  背景\n    private lateinit var background: ResultBackground\n\n    //  結果メッセージ\n    private lateinit var message: ResultMessage\n\n    //  共有ボタン\n    private lateinit var shareButton: ShareButton\n\n    //  フェードエフェクトの進捗率\n    private var fadeProgress: Float = 0.0f\n\n    /**\n     * 初期化を行う。\n     */\n    fun init(args: ResultSceneArgs) {\n        this.args = args\n\n        //  コンポーネントを初期化する。\n        this.background = ResultBackground(this.args)\n        this.message = ResultMessage(this.args)\n        this.shareButton = ShareButton(this.args)\n\n        //  フェードエフェクトを開始する。\n        startAnimUpdater(duration = FADE_DURATION_IN_MS, onUpdated = { this.fadeProgress = it }, onFinished = {})\n    }\n\n    /**\n     * 描画処理を行う。\n     */\n    fun render(context: CanvasRenderingContext2D) {\n        context.globalAlpha = this.fadeProgress.toDouble()\n\n        this.background.render(context)\n        this.message.render(context)\n        this.shareButton.render(context)\n\n        context.globalAlpha = 1.0\n    }\n\n    /**\n     * タッチイベントが発生したとき。\n     */\n    fun onTouchEventOccurred(event: TouchEvent) {\n        this.shareButton.onTouchEventOccurred(event)\n    }\n}\n","package net.aridai.suckerreimu.result\n\n/**\n * 結果シーンの引数\n */\ninternal data class ResultSceneArgs(\n\n    /**\n     * 勝ったかどうか\n     */\n    val win: Boolean,\n\n    /**\n     * ターン数\n     */\n    val turn: Int,\n)\n","package net.aridai.suckerreimu.result.components\n\nimport net.aridai.suckerreimu.Resources\nimport net.aridai.suckerreimu.result.ResultSceneArgs\nimport org.w3c.dom.CanvasRenderingContext2D\n\n/**\n * 背景\n */\ninternal class ResultBackground(private val args: ResultSceneArgs) {\n\n    /**\n     * 描画処理を行う。\n     */\n    fun render(context: CanvasRenderingContext2D) {\n        //  背景画像を描画する。\n        val image = if (this.args.win) Resources.Images.winResultScreen else Resources.Images.loseResultScreen\n        context.drawImage(image = image, dx = 0.0, dy = 0.0)\n    }\n}\n","package net.aridai.suckerreimu.result.components\n\nimport net.aridai.suckerreimu.Game\nimport net.aridai.suckerreimu.result.ResultSceneArgs\nimport org.w3c.dom.CENTER\nimport org.w3c.dom.CanvasRenderingContext2D\nimport org.w3c.dom.CanvasTextAlign\nimport org.w3c.dom.START\n\n/**\n * 結果メッセージ\n */\ninternal class ResultMessage(private val args: ResultSceneArgs) {\n    companion object {\n\n        //  上部マージン\n        private const val TOP_MARGIN: Double = 128.0\n\n        //  塗りスタイル\n        private const val FILL_STYLE: String = \"#FFFFFF\"\n\n        //  フォントサイズ\n        private const val FONT_SIZE: Int = 96\n\n        //  フォントスタイル\n        private const val FONT: String = \"${FONT_SIZE}px Arial\"\n    }\n\n    /**\n     * 描画処理を行う。\n     */\n    fun render(context: CanvasRenderingContext2D) {\n        //  勝敗によって文言を決定する。\n        val text = when (this.args.win) {\n\n            //  勝ち\n            true -> \"まりさちゃんに勝利!\"\n\n            //  負け\n            false -> \"まりさちゃんに敗北!\"\n        }\n        val x = Game.CANVAS_WIDTH / 2\n        val y = TOP_MARGIN + FONT_SIZE\n\n        context.fillStyle = FILL_STYLE\n        context.font = FONT\n        context.textAlign = CanvasTextAlign.CENTER\n        context.fillText(text = text, x = x, y = y)\n        context.textAlign = CanvasTextAlign.START\n    }\n}\n","package net.aridai.suckerreimu.result.components\n\nimport kotlinx.browser.window\nimport net.aridai.suckerreimu.Game\nimport net.aridai.suckerreimu.Logger\nimport net.aridai.suckerreimu.Resources\nimport net.aridai.suckerreimu.TouchEvent\nimport net.aridai.suckerreimu.result.ResultSceneArgs\nimport org.w3c.dom.CanvasRenderingContext2D\nimport org.w3c.dom.Image\nimport org.w3c.dom.url.URLSearchParams\n\n/**\n * 共有ボタン\n */\ninternal class ShareButton(private val args: ResultSceneArgs) {\n    companion object {\n\n        //  下部のパディング\n        private const val BOTTOM_MARGIN: Double = 64.0\n\n        //  フォーカス時のボタン不透明度比率\n        private const val FOCUSED_ALPHA_RATIO: Double = 0.75\n    }\n\n    //  ボタンがフォーカスされているかどうか\n    private var isFocused: Boolean = false\n\n    /**\n     * 描画処理を行う。\n     */\n    fun render(context: CanvasRenderingContext2D) {\n        //  座標を計算する。\n        val image = Resources.Images.shareButton\n        val (x, y) = this.calculateUpperLeftPos(image)\n\n        //  フォーカス有無に応じて不透明度を決定して描画する。\n        val alpha = context.globalAlpha\n        context.globalAlpha = if (this.isFocused) alpha * FOCUSED_ALPHA_RATIO else alpha\n        context.drawImage(image = image, dx = x, dy = y)\n        context.globalAlpha = alpha\n    }\n\n    /**\n     * タッチイベントが発生したとき。\n     */\n    fun onTouchEventOccurred(event: TouchEvent) {\n        val image = Resources.Images.shareButton\n\n        when (event) {\n\n            //  押下された場合\n            is TouchEvent.PointerDown -> {\n                if (this.isFocused) return\n\n                //  フォーカス有無を更新する。\n                this.isFocused = this.isFocused(image, event.x, event.y)\n                Logger.d { \"共有ボタン 押下: ${this.isFocused}, $event\" }\n            }\n\n            //  移動された場合\n            is TouchEvent.PointerMove -> {\n                if (!this.isFocused) return\n\n                //  フォーカスの継続を判定する。\n                this.isFocused = this.isFocused(image, event.x, event.y)\n                if (!this.isFocused) Logger.d { \"共有ボタン フォーカスキャンセル: $event\" }\n            }\n\n            //  押上された場合\n            is TouchEvent.PointerUp -> {\n                if (!this.isFocused) return\n\n                Logger.d { \"共有ボタン 押上: $event\" }\n                this.isFocused = false\n                this.onButtonClicked()\n            }\n\n            //  キャンセルされた場合\n            is TouchEvent.PointerCancel -> {\n                this.isFocused = false\n                Logger.d { \"共有ボタン キャンセル\" }\n            }\n        }\n    }\n\n    //  左上の座標を計算する。\n    private fun calculateUpperLeftPos(image: Image): Pair<Double, Double> {\n        val leftX = Game.CANVAS_WIDTH / 2 - image.width / 2\n        val topY = Game.CANVAS_HEIGHT - BOTTOM_MARGIN - image.height\n\n        return leftX to topY\n    }\n\n    //  タッチ座標がボタンの範囲に入っているかどうかを判定する。\n    private fun isFocused(image: Image, x: Double, y: Double): Boolean {\n        val (left, top) = this.calculateUpperLeftPos(image)\n        val right = left + image.width\n        val bottom = top + image.height\n\n        return x in left..right && y in top..bottom\n    }\n\n    //  共有ボタンがクリックされたとき。\n    private fun onButtonClicked() {\n        Logger.i { \"共有ボタン クリック\" }\n\n        //  Twitterでの共有URLを組み立てる。\n        val twitterBaseUrl = \"https://twitter.com/intent/tweet?\"\n        val text = when (this.args.win) {\n\n            //  勝ち\n            true -> \"${this.args.turn}ターン目にまりさちゃんに勝利!\"\n\n            //  負け\n            false -> \"${this.args.turn}ターン目にまりさちゃんに敗北!\"\n        }\n        val url = window.location.href\n        val query = URLSearchParams().also {\n            it.append(\"text\", text)\n            it.append(\"url\", url)\n        }\n        val shareUrl = \"$twitterBaseUrl$query\"\n\n        //  共有リンクを踏ませる。\n        Logger.d { \"共有ボタン リンク: $shareUrl\" }\n        window.open(shareUrl, \"_blank\")?.focus()\n    }\n}\n",null,"package net.aridai.suckerreimu.battle.anim\n\nimport net.aridai.suckerreimu.battle.components.BattleSceneComponents\n\n/**\n * 背景のフェードインアニメのアニメーションハンドラ\n */\ninternal object BackgroundFadeInAnimHandler : BattleAnimHandler {\n\n    override suspend fun handle(anim: BattleAnim, components: BattleSceneComponents) {\n        require(anim is BattleAnim.BackgroundFadeInAnim)\n\n        //  背景のフェードインを行う。\n        components.battleBackground.fadeIn(anim.durationInMs)\n    }\n}\n","package net.aridai.suckerreimu.battle.anim\n\nimport net.aridai.suckerreimu.battle.components.BattleSceneComponents\n\n/**\n * 対戦アニメーションのハンドラ\n */\ninternal interface BattleAnimHandler {\n\n    /**\n     * アニメーションをハンドリングする。\n     */\n    suspend fun handle(anim: BattleAnim, components: BattleSceneComponents)\n\n    companion object {\n\n        /**\n         * 指定アニメーションのハンドラを取得する。\n         */\n        fun of(anim: BattleAnim): BattleAnimHandler {\n            return when (anim) {\n                is BattleAnim.Serial -> SerialAnimHandler\n                is BattleAnim.Parallel -> ParallelAnimHandler\n                is BattleAnim.Delay -> DelayAnimHandler\n                is BattleAnim.Message -> MessageAnimHandler\n                is BattleAnim.BackgroundFadeInAnim -> BackgroundFadeInAnimHandler\n                is BattleAnim.CharacterEnteringAnim -> CharacterEnteringAnimHandler\n                is BattleAnim.CharacterExitingAnim -> CharacterExitingAnimHandler\n                is BattleAnim.CharacterDamageAnim -> CharacterDamageAnimHandler\n                is BattleAnim.CharacterStatUpAnim -> CharacterStatUpAnimHandler\n                is BattleAnim.CharacterStatDownAnim -> CharacterStatDownAnimHandler\n                is BattleAnim.CharacterHeldItemAnim -> CharacterHeldItemAnimHandler\n                is BattleAnim.CharacterStatusBarEnteringAnim -> CharacterStatusBarEnteringAnimHandler\n                is BattleAnim.CharacterStatusBarExitingAnim -> CharacterStatusBarExitingAnimHandler\n                is BattleAnim.CharacterStatusBarHpUpdatingAnim -> CharacterStatusBarHpUpdatingAnimHandler\n                is BattleAnim.AbilityPopupAnim -> AbilityPopupAnimHandler\n            }\n        }\n    }\n}\n","package net.aridai.suckerreimu.battle.anim\n\nimport kotlinx.coroutines.delay\nimport net.aridai.suckerreimu.battle.components.BattleSceneComponents\n\n/**\n * 遅延のアニメーションハンドラ\n */\ninternal object DelayAnimHandler : BattleAnimHandler {\n\n    override suspend fun handle(anim: BattleAnim, components: BattleSceneComponents) {\n        require(anim is BattleAnim.Delay)\n\n        //  指定期間だけ遅延させる。\n        delay(anim.delayInMs)\n    }\n}\n","package net.aridai.suckerreimu.battle.anim\n\nimport net.aridai.suckerreimu.battle.components.BattleSceneComponents\n\n/**\n * メッセージ表示のアニメーションハンドラ\n */\ninternal object MessageAnimHandler : BattleAnimHandler {\n\n    override suspend fun handle(anim: BattleAnim, components: BattleSceneComponents) {\n        require(anim is BattleAnim.Message)\n\n        //  メッセージフレームにメッセージを指定期間表示させる。\n        components.messageFrame.showMessage(anim.text, anim.durationInMs)\n    }\n}\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(698);\n"],"names":["root","factory","exports","module","define","amd","this","CoroutineScope","context","duration","onUpdated","onFinished","AnimCancellationImpl","window","cancellation","requestAnimationFrame","animCancellation","startAnimUpdater","startingTimestamp","timestamp","coerceIn","deltaTimeInMs","progress","shouldContinue","wrapper","Game","lazy","args","console","log","message","ResultScene","scene","info","findCanvas","canvas","onpointerdown","it","onpointermove","onpointerup","onpointercancel","getContext","clearRect","width","height","scale","scaleX","scaleY","document","getElementById","onResize","onAnimFrameCalled","agent","innerWidth","innerHeight","containerWidth","containerHeight","isMobile","calculateCanvasSize","canvasWidth","canvasHeight","style","coerceAtMost","e","offsetX","offsetY","listOf","MutableStateFlow","asStateFlow","NpcMoveSelector","random","BattleStatusSnapshot","MoveSnapshot","BattleBackground","MessageFrame","MoveMenu","Character","CharacterStatusBar","AbilityPopup","createElement","itemCount","spaceCount","index","destX","y","move","fillStyle","fillRect","x","font","fillText","nameX","nameY","textAlign","ppX","ppY","left","top","right","emptyList","image","leftX","topY","calculateUpperLeftPos","bottom","cancelAnimationFrame","id","value","BattleScene","event","throwable","messageProvider","startGame","alert","loadImage","Image","PointerDown","pointerId","toScaledX","toScaledY","PointerMove","PointerUp","PointerCancel","reimuMove","marisaMove","status","Lose","updatedStatus","FantasySealPassed","SuckerPunchPassed","Continue","Parallel","PlayingAnimations","animQueue","Delay","AbilityPopupAnim","abilityTotalDuration","Serial","CharacterStatDownAnim","abilityStatAnimDuration","Message","abilityMessageDuration","CharacterStatUpAnim","pattern","turn","reimuAnimQueue","result","BattleStateManager","BattleSceneComponents","state","SelectingMoves","ResultSceneArgs","kind","updatedMoves","updatedRank","PlayableTurn","components","anim","delay","child","job","awaitAll","coroutineScope","coerceAtLeast","startAnimUpdaterAsync","abilityName","globalAlpha","alpha","drawImage","durationInMs","characterImage","destCx","cy","initialCx","cx","initialCy","calculateCenterPos","moveTo","lineTo","closePath","calculateClippingPath","currentScale","save","clip","clipPath","restore","statEffectCanvas","effectImage","statEffectContext","effectOffsetY","globalCompositeOperation","renderStatUpEffect","renderStatDownEffect","initialY","particleProgress","beginPath","arc","radius","rightX","fill","rippleProgress","strokeStyle","lineWidth","rippleEffectWidth","rippleRadius","stroke","renderHeldItemEffect","AnimCancellationWrapper","StatusSnapshot","name","currentHp","maxHp","initialX","destY","frameX","frameY","hpStr","hpX","hpY","hpGaugeCy","hpGaugeX","hpGaugeY","remainingRatio","remainingWidth","text","first","filterNotNull","t","renderItem","findSelectedItemIndex","focusedIndex","ResultBackground","ResultMessage","ShareButton","isFocused","location","href","append","url","shareUrl","open","focus","onButtonClicked","protocol","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}